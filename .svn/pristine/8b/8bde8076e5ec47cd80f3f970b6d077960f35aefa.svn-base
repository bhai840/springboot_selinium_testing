package au.wow.ngbomain.tests;

import java.awt.AWTException;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Method;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.PageFactory;
import org.testng.ITestContext;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import au.wow.ngbo.utils.BasePage;
import au.wow.ngbo.utils.CustomExtentReports;
import au.wow.ngbo.utils.SQLWrapper;
import au.wow.ngbo.utils.TestBase;
import au.wow.ngbo.utils.TestContext;
import au.wow.ngbo.utils.TestStatus;
import au.wow.ngbo.utils.XMLDataReader;
import au.wow.ngbomain.objects.EnhancedArticleLookUpObjects;
import au.wow.ngbomain.pages.CommonFunctions;
import au.wow.ngbomain.pages.EnhancedArticleLookUpPage;
import au.wow.ngbomain.pages.WoWLoginPage;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;

public class Sampletest extends TestBase {
	public static String mName="";
	public static String cName ="";
	public static ArrayList<String> methodList = new ArrayList<String>();
	public static ExtentTest extLogger;
	public static ExtentReports extReport;
	public static boolean isExceptionCaptured=false;
	public static XMLDataReader data;	
	public static WebDriver driver;
	public static boolean isFirstTest=true;
	EnhancedArticleLookUpPage objEnhancedarticleLookUpPage;
	EnhancedArticleLookUpObjects objEnhancedArticleLookup;
	TestStatus status;
	SQLWrapper sql = new SQLWrapper(log);
	WoWLoginPage loginPage;
	BasePage BaseObj;
	CommonFunctions common;
	StoreProperties storeprop;
	
	
	
	@Test()
	public void check() throws Exception 
	{
		TestStatus status = getTestStatus();
		
		String articles_sql = data.getText("getarticleliq");
		List<List<Object>> results = sql.executeQuery(getContext(), articles_sql);	
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("username")+",password - "+getContext().getStringProperty("password")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("username"),getContext().getStringProperty("password"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("username")+",password - "+getContext().getStringProperty("password")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("username"),getContext().getStringProperty("password"),getContext().getStringProperty("BigWstore"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("username")+",password - "+getContext().getStringProperty("password")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("username"),getContext().getStringProperty("password"),getContext().getStringProperty("NZstore"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("username")+",password - "+getContext().getStringProperty("password")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("username"),getContext().getStringProperty("password"),getContext().getStringProperty("BWSstore"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameR")+",password - "+getContext().getStringProperty("passwordR")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameR"),getContext().getStringProperty("passwordR"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameSTM")+",password - "+getContext().getStringProperty("passwordSTM")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameSTM"),getContext().getStringProperty("passwordSTM"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameDM")+",password - "+getContext().getStringProperty("passwordDM")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameDM"),getContext().getStringProperty("passwordDM"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameTM")+",password - "+getContext().getStringProperty("passwordTM")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameTM"),getContext().getStringProperty("passwordTM"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameCA")+",password - "+getContext().getStringProperty("passwordCA")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameCA"),getContext().getStringProperty("passwordCA"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameOA")+",password - "+getContext().getStringProperty("passwordOA")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameOA"),getContext().getStringProperty("passwordOA"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameOS")+",password - "+getContext().getStringProperty("passwordOS")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameOS"),getContext().getStringProperty("passwordOS"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameSM")+",password - "+getContext().getStringProperty("passwordSM")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameSM"),getContext().getStringProperty("passwordSM"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
		
		htmlToExtent(cName,mName,extLogger,driver,"logged in with creds, username-"+getContext().getStringProperty("usernameBR")+",password - "+getContext().getStringProperty("passwordBR")+";;;Info");
		navToEnhancedarticle(status,getContext().getStringProperty("usernameBR"),getContext().getStringProperty("passwordBR"),getContext().getStringProperty("store"));
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(sampleArtScenarios, sampleArttestname,driver));
	}
	
	
	public void navToEnhancedarticle(TestStatus status,String un,String pwd,String storess) throws AWTException  
	{
		log.info("---------------Login into Application--------------------");		
		//Report_AddStep("testcase", "---------------Login into Application--------------------","","", "Pass");
		loginPage = new WoWLoginPage().createPage(driver, getContext(), log, status, data, WoWLoginPage.class);
		if(System.getProperty("store")==null){
			htmlToExtent(cName,mName,extLogger,driver,"Login with the Store : " + storess+";;;Pass");
			objEnhancedarticleLookUpPage = loginPage.navToEnhancedarticlesample(un,pwd,storess,driver,cName, mName, extLogger);
		}else{
			storeprop.getStoreDetails(System.getProperty("store"));
			objEnhancedarticleLookUpPage = loginPage.navToEnhancedarticlesample(un,pwd,storess,driver,cName, mName, extLogger);
		}			
	}
	
	@BeforeClass
	public void loadXMLFile(){	
		//initializeTestcontext();
		System.out.println("test1 - Beforeclass");
		data = new XMLDataReader(log);
		customreport=new CustomExtentReports();
		log.info("Loading data for the class: " );
		data.loadTestDataXML(System.getProperty("user.dir") + "\\TestData\\NGBO\\enhancedarticlelookup.xml");
		customreport.createExtentReport();
		cName=this.getClass().getSimpleName();
		reportPath = new File(TestContext.getStringProperty("reportPath"));			
		extReport = new ExtentReports(TestContext.getStringProperty("reportPath") +"\\"+this.getClass().getSimpleName()+".html");
		classList.add(this.getClass().getSimpleName());
	}
	
	
	
	
	@BeforeMethod(alwaysRun=true)
	public void setUp(Method m9,ITestContext testcontext) throws IOException, InterruptedException
	{
		waitFor(2);
        mName=m9.getName().toString().trim();			
		if(!methodList.contains(m9.getName().toString().trim())){
		methodList.add(m9.getName().toString().trim());
		extLogger = extReport.startTest(m9.getName().toString().trim());
		}
		initializeTestcontext();
		System.out.println("test1 - beforemethod");
		log.info("Loading Testdata for the test case: " + m9.getName().toString());
		data.getTCNameFromChildren(m9.getName().toString().trim());
		if(isFirstTest){
			driver=createDriver(TestContext.getStringProperty("baseURL"), TestContext.getStringProperty("browser"), cName, mName, extLogger,driver);
		}else{
			String title = driver.getCurrentUrl();
			if(title.contains("logginOut"))
			{
				driver.navigate().refresh();
				TimeUnit.SECONDS.sleep(5);
			}else{
				driver.navigate().refresh();
				TimeUnit.SECONDS.sleep(5);
				if(driver.findElements(By.xpath("//*[@class='homeLink']")).size()>0)
				{
					if(driver.findElement(By.xpath("//*[@class='homeLink']")).isDisplayed()){
						WebElement  home = driver.findElement(By.xpath("//*[@class='homeLink']"));
						scrolltoElement(home,driver);
						home.click();
						TimeUnit.SECONDS.sleep(5);
						loginPage.Logout(RoutinesArtScenarios, RoutinesArttestname, driver);
						driver.navigate().refresh();
						TimeUnit.SECONDS.sleep(5);}
				}
			}
		}
			isFirstTest=false;
		
		//driver=createDriver(getContext().getStringProperty("baseURL"), getContext().getStringProperty("browser"));
		setDriver(driver);
		testcontext.setAttribute("WebDriver", driver);
		testcontext.setAttribute("Customreports", this.customreport);
		customreport.startTest(m9.getName().toString());
		initializeTestStatus();
		reportPath = new File(getContext().getStringProperty("reportPath"));
		sampleArttestname = m9.getName().toString().trim();
		sampleArttestdesc = m9.getAnnotation(Test.class).description();
		htmlToExtent(cName,mName,extLogger,driver,"<b><i><h4>Docker run - "+getContext().getStringProperty("isDocketRun")+"</h4></i></b>;;;Info");
		objEnhancedArticleLookup = PageFactory.initElements(driver, EnhancedArticleLookUpObjects.class);
		objEnhancedarticleLookUpPage = PageFactory.initElements(driver, EnhancedArticleLookUpPage.class);
		//objInStoreDisplayPromotionsObjects = PageFactory.initElements(driver, InStoreDisplayPromotionsObjects.class);
		BaseObj = PageFactory.initElements(driver, BasePage.class);
		common = PageFactory.initElements(driver, CommonFunctions.class);
		storeprop = PageFactory.initElements(driver, StoreProperties.class);
	}
	@AfterClass(alwaysRun=true)
	public void tearDown() throws IOException, ParseException{
		waitFor(1);
		System.out.println("afterclass");
		sceCtMap.put(cName+"_totalCt", methodList.size());
		sceCtMap.put(cName+"_passCt", methodList.size() - extentList.get(cName).size());
		sceCtMap.put(cName+"_failCt", extentList.get(cName).size());
		tcCt.put(this.getClass().getSimpleName().toString(),0);
		//System.out.println(extentList);
		//System.out.println(methodList);
        extReport.endTest(extLogger);
		extReport.flush();
		removeDriver();
		closeDriver(driver);
		waitFor(1);
		moduleName.put("Modules", enhancedArtModules);
		waitFor(1);
		int enhancedArtM=0;
		sampleArtMC=""+enhancedArtM;
	}


	@AfterMethod(alwaysRun=true)
	protected void flushReports(ITestResult result9,Method m9) throws IOException, ParseException {
		System.out.println("AffterMethod");
		extReport.endTest(extLogger);
		extReport.flush();
		try{
			if(result9.getAttribute("isFail").equals("true")&& !isExceptionCaptured){
				htmlToExtent(cName,mName,extLogger,driver,"Iteration terminated due to error;;;INFO");	
				result9.removeAttribute("isFail");
			}}catch(Exception e ){
				//System.out.println();
			
			}
/*
		waitFor(1);
		Date ppMEndDate1 = new Date();
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		enhancedArtMEndDate = dateFormat.format(ppMEndDate1);
		//System.out.println(enhancedArtMEndDate); // 12/01/2011 4:48:16 PM
		String EnhancedArtTime = enhancedArttestdesc +";"+ enhancedArtStartdat +";" + enhancedArtMEndDate;

		enhancedArtTime.put(enhancedArttestname, EnhancedArtTime);
		//Report_AddStep("testcase", "Running Completed Status","","", getResultStatusName(result.getStatus()));
		waitFor(4);*/
		//closeDriver(driver);
		/*if(recount!=3 && recount!=0){	
			result9.setStatus(ITestResult.FAILURE);
		}*/
		if(getResultStatusName(result9.getStatus()).equalsIgnoreCase("Fail")/*|| getResultStatusName(result9.getStatus()).equalsIgnoreCase("Info")*/){
			int cnt = sampleArtpreCount2+1;
			htmlToExtent(cName,mName,extLogger,driver,"<b><i><h4>Completed Status : Iteration - "+ cnt +"</h4></i></b>;;;Warning");
			sampleArtpreCount2++;
		}
	//	closeDriver(driver);
		customreport.getExtentReport().endTest(customreport.getExtentTest());
		customreport.getExtentReport().flush();
		waitFor(1);
		/*if(getResultStatusName(result9.getStatus()).equalsIgnoreCase("Fail")|| getResultStatusName(result9.getStatus()).equalsIgnoreCase("Info")){
			int cnt = enhancedArtpreCount2+1;
			htmlToExtent(cName,mName,extLogger,driver,"<b><i><h4>Completed Status : Iteration - "+ cnt +"</h4></i></b>;;;Warning");
			enhancedArtpreCount2++;
		}
		waitFor(1);
		
		if((getResultStatusName(result9.getStatus()).equalsIgnoreCase("Fail") || getResultStatusName(result9.getStatus()).equalsIgnoreCase("Info")) && enhancedArtpreCount2!=reCount){
			waitFor(1);
			enhancedArtTime.removeAll(enhancedArttestname);
			waitFor(1);
			enhancedArtScenarios.removeAll(enhancedArttestname);
		}
		waitFor(1);*/
		if(sampleArtpreCount2==reCount || getResultStatusName(result9.getStatus()).equalsIgnoreCase("Pass")){
		//if(recount==0){
			sampleArtpreCount2=-1;
		}
		waitFor(1);
		
	}
}

