package au.wow.ngbomain.pages;

import java.awt.AWTException;
import java.awt.Robot;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.interactions.internal.Coordinates;
import org.openqa.selenium.internal.Locatable;

import au.wow.ngbo.utils.BasePage;
import au.wow.ngbomain.objects.DSCandPLUReportObjects;
import au.wow.ngbomain.tests.DSCandPLUReportTests;

import com.relevantcodes.extentreports.ExtentTest;


public class DSCandPLUReportPage extends BasePage{
	
	WebDriver driver = DSCandPLUReportTests.driver;
	ExtentTest extLogger=DSCandPLUReportTests.extLogger;
	String cName=DSCandPLUReportTests.cName;
	String mName=DSCandPLUReportTests.mName;
	public void setDriver(WebDriver driver){
		this.driver=driver;
	}
	
	//DailyStockCheckReportObjects objDscReport;
	
	public void clickOnDsctReport(DSCandPLUReportObjects objDscReport,WebDriver driver) throws AWTException{
//		waitForJSandJQueryToLoad(driver);;
		waitFor(1);
		Point coordinates = objDscReport.report.getLocation();
		Robot robot = new Robot();
		robot.mouseMove(coordinates.getX(),coordinates.getY()+100);
		
		Actions action = new Actions(driver);
		action.moveToElement(objDscReport.report).click().build().perform();	
		waitFor(1);
		
		Actions action1 = new Actions(driver);
		action1.moveToElement(objDscReport.stockManagement).click().build().perform();	
		waitFor(1);
				
		
		Actions action2 = new Actions(driver);
		action2.moveToElement(objDscReport.dailyStockCheckReport).click().build().perform();
		waitFor(1);
		robot.mouseMove(5,5);
	
	}
	
	public void clickOnPLUReport(DSCandPLUReportObjects objDscReport,WebDriver driver) throws AWTException{
//		waitForJSandJQueryToLoad(driver);;
		waitFor(1);
		Point coordinates = objDscReport.report.getLocation();
		Robot robot = new Robot();
		robot.mouseMove(coordinates.getX(),coordinates.getY()+100);
		
		Actions action = new Actions(driver);
		action.moveToElement(objDscReport.report).click().build().perform();	
		waitFor(1);
		
		Actions action1 = new Actions(driver);
		action1.moveToElement(objDscReport.stockManagement).click().build().perform();	
		waitFor(1);
				
		Actions action2 = new Actions(driver);
		action2.moveToElement(objDscReport.PLUReport).click().build().perform();
		waitFor(1);
		robot.mouseMove(5,5);
	
	}
	
	public void verifyDSCReportAllDepartment(DSCandPLUReportObjects objDscReport,int countDB,WebDriver driver) throws IOException
	{
		
		if(!(isEnabled(objDscReport.optionSelectAll)))
		  click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		click(objDscReport.generateReportBtn);
		waitForJSandJQueryToLoad(driver);;
		String applCount = getText(objDscReport.reportcount);
		String countDBStringValue = String.valueOf(countDB);
		
		if(applCount.equals(countDBStringValue))
			
			htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is correct;"+applCount+";"+countDBStringValue+";Pass");
			//Report_AddStep("testcase", "The No of records generated by the report is correct",applCount ,countDBStringValue , "Pass");
		else
			htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is correct;"+applCount+";"+countDBStringValue+";Fail");
		//Report_AddStep("testcase","The No of records generated by the report is incorrect",applCount ,countDBStringValue , "Fail");
		
		//VerifyPrintButton
		String winHandleBefore = driver.getWindowHandle();
		waitFor(2);
		click(objDscReport.printBtn);
		waitFor(2);
		
		for(String winHandle : driver.getWindowHandles()){
		    driver.switchTo().window(winHandle);
		}
		driver.close();
		driver.switchTo().window(winHandleBefore);
		waitForJSandJQueryToLoad(driver);;
		htmlToExtent(cName,mName,extLogger,driver, "The Print pdf is generated successfully;;;Pass");
		//Report_AddStep("testcase","The Print pdf is generated successfully","" ,"" , "PASS");
		waitFor(3);
		driver.findElement(By.cssSelector("body")).sendKeys(Keys.CONTROL + "w");
		htmlToExtent(cName,mName,extLogger,driver, "The Print pdf is closed successfully;;;Pass");
		//Report_AddStep("testcase","The Print pdf is closed successfully","" ,"" , "PASS");
		
		//ArticleColumn
		click(objDscReport.articleColumn);
		waitForJSandJQueryToLoad(driver);;
		sortNumberListAscending("Article Number",objDscReport.articleno_sort ,driver);
		click(objDscReport.articleColumn);
		waitForJSandJQueryToLoad(driver);;
		sortNumberListDescending("Article Number",objDscReport.articleno_sort ,driver);
	     
	   //DescriptionColumn
		click(objDscReport.descColumn);
		waitForJSandJQueryToLoad(driver);;
		sortStringListAscending("Description",objDscReport.articleDesc_sort ,driver);
		click(objDscReport.descColumn);
		waitForJSandJQueryToLoad(driver);;
		sortStringListDescending("Description",objDscReport.articleDesc_sort ,driver);
		
		//OM Column
		 click(objDscReport.OMColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortNumberListAscending("OM",objDscReport.articleOM_sort,driver);
		 click(objDscReport.OMColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortNumberListDescending("OM",objDscReport.articleOM_sort,driver);
		 
		//SOH Column
		 click(objDscReport.sohColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortSOHAscending("SOH",objDscReport.articleSOH_sort,driver);
		 click(objDscReport.sohColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortSOHDescending("SOH",objDscReport.articleSOH_sort,driver);
	
//		//SIT Column (Commented as it doesn't follow a pattern in application
//		 click(objDscReport.sitColumn);
//		 waitForJSandJQueryToLoad(driver);;
//		 sortStringListAscending("SIT",objDscReport.articleSIT_sort,driver);
//	     click(objDscReport.sitColumn);
//		 waitForJSandJQueryToLoad(driver);;
//		 sortStringListDescending("SIT",objDscReport.articleSIT_sort,driver);
		 	
		//LTO Location Column
		 click(objDscReport.ltoLocationColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortStringListAscending("LTO Location",objDscReport.articleLTO_sort,driver);
		 click(objDscReport.ltoLocationColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortStringListDescending("LTO Location",objDscReport.articleLTO_sort,driver);
				
		//Display Location Column
		 click(objDscReport.displayColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortStringListAscending("Display Location",objDscReport.articleDisplay_sort,driver);
		 click(objDscReport.displayColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortStringListDescending("Display Location",objDscReport.articleDisplay_sort,driver);
			
		//Reason Code Column
		 htmlToExtent(cName,mName,extLogger,driver, "The Reason Code has the value : "+getText(objDscReport.reasonCodeFirstValue)+";;;Pass");
		//Report_AddStep("testcase", "The Reason Code has the value : " +getText(objDscReport.reasonCodeFirstValue),"" ,"" , "Pass");
	      
		 click(objDscReport.reasonCodeColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortStringListAscending("Reason Code",objDscReport.articleReason_sort,driver);
		 htmlToExtent(cName,mName,extLogger,driver, "The Reason Code has the value : "+getText(objDscReport.reasonCodeFirstValue)+";;;Pass");
		//Report_AddStep("testcase", "The Reason Code has the value : "+getText(objDscReport.reasonCodeFirstValue) ,"" ,"" , "Pass");
	     	 
		 click(objDscReport.reasonCodeColumn);
		 waitForJSandJQueryToLoad(driver);;
		 sortStringListDescending("Display Location",objDscReport.articleReason_sort,driver);
		 htmlToExtent(cName,mName,extLogger,driver, "The Reason Code has the value : "+getText(objDscReport.reasonCodeFirstValue)+";;;Pass");
		 //Report_AddStep("testcase", "The Reason Code has the value : "+getText(objDscReport.reasonCodeFirstValue) ,"" ,"" , "Pass");

		
	}
	
/*public List<List<Object>> verifyMultipleReasonCodes(DSCandPLUReportObjects objDscReport) {
		List<List<Object>> articleReasonList = null;
		List<Object> articleList1 = new ArrayList<>();
		List<Object> articleList2 = new ArrayList<>();
		List<String> articleList = new ArrayList<>();
		boolean isDuplicate = false;
		String duplicateNum;
		int count = 0;

		for(int s=0;s<10;s++)
		{
			WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort, s);
			String coulumnValue = element.getText();
			if(articleList.contains(coulumnValue))
			{
			 isDuplicate = true;
			 duplicateNum = coulumnValue;
			 count = s;
			 break;
			}
			articleList.add(coulumnValue);
		}
		
		if(isDuplicate)
		{
			
			WebElement article1 =  prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,count);
			String articleValue1 = article1.getText();
			
			WebElement reason1 =  prepareWebElementWithDynamicXpathWithInt(objDscReport.articleReason_sort,count);
			String reasonValue1 = reason1.getText();
			articleList1.add(articleValue1);
			articleList1.add(reasonValue1);
			
			articleReasonList.add(articleList1);
			
			WebElement article2 =  prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,count-1);
			String articleValue2 = article2.getText();
			
			WebElement reason2 =  prepareWebElementWithDynamicXpathWithInt(objDscReport.articleReason_sort,count-1);
			String reasonValue2 = reason2.getText();
			articleList2.add(articleValue2);
			articleList2.add(reasonValue2);
			
			articleReasonList.add(articleList2);
			
		}
		
		return articleReasonList;
		
	}*/

	public void sortStringListAscending(String columnName, String genericColumnXpath,WebDriver driver) throws IOException
	{
		ArrayList<String> originalList = new ArrayList<>();
		for(int s=0;s<10;s++)
		{
		WebElement element =  prepareWebElementWithDynamicXpathWithInt(genericColumnXpath, s,driver);
		String coulumnValue = element.getText();
		////System.out.println("Values in the Artilce description : "+s+"are :"+coulumnValue);
		originalList.add(coulumnValue);
		}
	
	    List<String> copyList = new ArrayList<String>(originalList);
	    Collections.sort(copyList,String.CASE_INSENSITIVE_ORDER);
//	    for(int i=0;i<10;i++)
//	    {
//	    	//System.out.println("After sorting description: "+i+"are :"+copyList.get(i));
//	    }
	     if(copyList.equals(originalList))
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is sorted in ascending order successfully;;;Pass");
	      //Report_AddStep("testcase", columnName+" is sorted in ascending order successfully","" ,"" , "Pass");
	     else
	       htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is not sorted in ascending order successfully;;;Fail");
	       //Report_AddStep("testcase", columnName+" is not sorted properly in ascending order, Please check","" ,"" , "Fail");

	}
	
	public void sortNumberListAscending(String columnName, String genericColumnXpath,WebDriver driver) throws IOException
	{
		ArrayList<Integer> originalListInteger = new ArrayList<>();
		for(int s=0;s<10;s++)
		{
		WebElement element =  prepareWebElementWithDynamicXpathWithInt(genericColumnXpath, s,driver);
		String coulumnValue = element.getText();
		////System.out.println("Values in the Artilce description : "+s+"are :"+coulumnValue);
		originalListInteger.add(Integer.parseInt(coulumnValue));
		}
	
	    List<Integer> copyList = new ArrayList<Integer>(originalListInteger);
	    Collections.sort(copyList); 
	    /*for(int i=0;i<10;i++)
	    {
	    	//System.out.println("After sorting description: "+i+"are :"+copyList.get(i));
	    }*/
	     if(copyList.equals(originalListInteger))
	     htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is sorted in ascending order successfully;;;Pass");
	     //Report_AddStep("testcase", columnName+" is sorted in ascending order successfully","" ,"" , "Pass");
	     else
	     htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is not sorted properly, Please check;;;Fail");
	     //Report_AddStep("testcase", columnName+" is not sorted properly, Please check","" ,"" , "Fail");

	}
	
	public void sortStringListDescending(String columnName, String genericColumnXpath,WebDriver driver) throws IOException
	{
		ArrayList<String> originalList = new ArrayList<>();
		for(int s=0;s<10;s++)
		{
		WebElement element =  prepareWebElementWithDynamicXpathWithInt(genericColumnXpath, s,driver);
		String coulumnValue = element.getText();
		////System.out.println("Values in the Article description descending : "+s+"are :"+coulumnValue);
		originalList.add(coulumnValue);
		}
	
	    List<String> copyList = new ArrayList<String>(originalList);	    
	    Collections.sort(copyList, String.CASE_INSENSITIVE_ORDER);
	   // Collections.reverse(copyList);
	    List<String> copyListTemp = new ArrayList<String>();
	    for(int i=9;i>=0;i--)
	    {
	    	copyListTemp.add(copyList.get(i));
	    }
	 /*   for(int i=0;i<10;i++)
	    {
	    	//System.out.println("After sorting description: "+i+"are :"+copyListTemp.get(i));
	    }*/
	    System.out.println(copyListTemp);
	    System.out.println(originalList);
	     if(copyListTemp.equals(originalList))
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is sorted in descending order successfully;;;Pass");
	      //Report_AddStep("testcase", columnName+" is sorted in descending order successfully","" ,"" , "Pass");
	     else
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is not sorted properly in descending order, Please check;;;Fail");
	      //Report_AddStep("testcase", columnName+" is not sorted properly in descending order, Please check","" ,"" , "Fail");

	}
	
	public ArrayList<Integer> sortNumberListDescending(String columnName, String genericColumnXpath,WebDriver driver) throws IOException
	{
		ArrayList<String> originalList = new ArrayList<>();
		ArrayList<Integer> originalListInteger = new ArrayList<>();
		for(int s=0;s<10;s++)
		{
		WebElement element =  prepareWebElementWithDynamicXpathWithInt(genericColumnXpath, s,driver);
		String coulumnValue = element.getText();
		////System.out.println("Values in the Artilce description : "+s+"are :"+coulumnValue);
		originalListInteger.add(Integer.parseInt(coulumnValue));
		}
	
	    List copyList = new ArrayList(originalListInteger);
	    Collections.sort(copyList, Collections.reverseOrder()); 
	   /* for(int i=0;i<10;i++)
	    {
	    	//System.out.println("After sorting  "+columnName+i+"are :"+copyList.get(i));
	    }*/
	     if(copyList.equals(originalListInteger))
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is sorted in descending order successfully;;;Pass");  
	      //Report_AddStep("testcase", columnName+" is sorted in descending order successfully","" ,"" , "Pass");
	     else
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is not sorted properly;;;Fail"); 
	      //Report_AddStep("testcase", columnName+" is not sorted properly, Please check","" ,"" , "Fail");

	     return originalListInteger;
	}
	
	public void sortSOHAscending(String columnName, String genericColumnXpath,WebDriver driver) throws IOException
	{
		ArrayList<String> originalList = new ArrayList<>();
		ArrayList<Double> originalListDouble = new ArrayList<>();
		String parts[];
		for(int s=0;s<10;s++)
		{
		WebElement element =  prepareWebElementWithDynamicXpathWithInt(genericColumnXpath, s,driver);
		String coulumnValue = element.getText();
		parts = coulumnValue.split(" ");
		
		////System.out.println("Values in the Artilce description : "+s+"are :"+parts[0]);
		originalListDouble.add(Double.parseDouble(parts[0]));
		}
	
	    List copyList = new ArrayList(originalListDouble);
	    Collections.sort(copyList); 
	  /*  for(int i=0;i<10;i++)
	    {
	    	//System.out.println("After sorting  "+columnName+i+"are :"+copyList.get(i));
	    }*/
	     if(copyList.equals(originalListDouble))
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is sorted in Ascending order successfully;;;Pass");    
	     // Report_AddStep("testcase", columnName+" is sorted in Ascending order successfully","" ,"" , "Pass");
	     else
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is not sorted properly, Please check;;;Fail");    
	     // Report_AddStep("testcase", columnName+" is not sorted properly, Please check","" ,"" , "Fail");

	}
	
	public void sortSOHDescending(String columnName, String genericColumnXpath,WebDriver driver) throws IOException
	{
		ArrayList<String> originalList = new ArrayList<>();
		ArrayList<Double> originalListDouble = new ArrayList<>();
		String parts[];
		for(int s=0;s<10;s++)
		{
		WebElement element =  prepareWebElementWithDynamicXpathWithInt(genericColumnXpath, s,driver);
		String coulumnValue = element.getText();
		parts = coulumnValue.split(" ");
		
		////System.out.println("Values in the Artilce description : "+s+"are :"+parts[0]);
		originalListDouble.add(Double.parseDouble(parts[0]));
		}
	
	    List copyList = new ArrayList(originalListDouble);
	    Collections.sort(copyList, Collections.reverseOrder());
	  /*  for(int i=0;i<10;i++)
	    {
	    	//System.out.println("After sorting  "+columnName+i+"are :"+copyList.get(i));
	    }*/
	     if(copyList.equals(originalListDouble))
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is sorted in descending order successfully;;;Pass");    
	      //Report_AddStep("testcase", columnName+" is sorted in descending order successfully","" ,"" , "Pass");
	     else
	      htmlToExtent(cName,mName,extLogger,driver, ""+columnName+" is not sorted properly, Please check;;;Fail");    
	      //Report_AddStep("testcase", columnName+" is not sorted properly, Please check","" ,"" , "Fail");

	}
	
	
	
	public WebElement prepareWebElementWithDynamicXpathWithInt(
			String xpathValue, int i,WebDriver driver) {
		return driver.findElement(By.xpath(xpathValue
				.replace("dynamic", "" + i)));
	}
	
	public WebElement prepareWebElementWithTwoDynamicXpathWithInt(
			String xpathValue, int pageNo, int i,WebDriver driver) {
		return driver.findElement(By.xpath(xpathValue
				.replace("dynamicPage", "" + pageNo).replace("dynamic", "" + i)));
	}
	
	public List<String> fnDSCReportMeatDepartment(DSCandPLUReportObjects objDscReport,String deptName,int countDB,WebDriver driver) throws IOException
	{
		List<String> recordList = new ArrayList<String>() ;
		int deptSize = objDscReport.deptHierarchy.size();
		//System.out.println("The no of elements is "+deptSize);
		int min=0,max=9;
		
		if(isEnabled(objDscReport.optionSelectAll))
		{
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}
		else
		{
		 //To select the checkbox
		 click(objDscReport.optionSelectAll);
		 waitForJSandJQueryToLoad(driver);;
		 
		//To deselect the SelectAll checkbox
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}
		for(int i =1;i<=deptSize;i++)
		{
			WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.departmentName,i,driver);
			String dptName = element.getText().trim();
			if(dptName.equalsIgnoreCase(deptName))
			{
	        WebElement deptCheckbox =  prepareWebElementWithDynamicXpathWithInt(objDscReport.selectDepartment,i,driver);
			click(deptCheckbox);
			break;
			}
		}
		 htmlToExtent(cName,mName,extLogger,driver, "The Department Selected is " +deptName +";;;Pass");   
		//Report_AddStep("testcase", "The Department Selected is " +deptName ,"" ,"" , "Pass");
		
		click(objDscReport.generateReportBtn);
		waitForJSandJQueryToLoad(driver);;
		String applCount = getText(objDscReport.reportcount);
		String countDBStringValue = String.valueOf(countDB);
		
		if(applCount.equals(countDBStringValue))
			htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is correct;"+applCount+";"+countDBStringValue+";Pass");    
	      //	Report_AddStep("testcase", "The No of records generated by the report is correct",applCount ,countDBStringValue , "Pass");
		else
			htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is correct;"+applCount+";"+countDBStringValue+";Fail");    
	     // Report_AddStep("testcase","The No of records generated by the report is incorrect",applCount ,countDBStringValue , "Fail");
		
		int reportCount = Integer.parseInt(applCount)-1;
		if(reportCount<10)
			max = reportCount;
		
		int randomNo =generateRandomNumber(min, max);
		
		WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,randomNo,driver);
		String articleNum = artilceElement.getText();
		recordList.add(articleNum);
		
		WebElement sohElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleSOH_sort,randomNo,driver);
		String articleSOH = sohElement.getText();
		recordList.add(articleSOH);
		return recordList;
	
	
	}
	
	public void verifyRandomWeightOrWeightArticleSOH(DSCandPLUReportObjects objDscReport, String articleNum,String kgDBValue, String eaDBValue, String articleSOH,WebDriver driver) throws IOException
	{
		
			//System.out.println("Verify Random Weight Articles");
			String sohDetails[] = articleSOH.split("&");
			String eaValue=sohDetails[0].split(" ")[0];
			String kgValue=sohDetails[1].trim().split(" ")[0];
			
			if(isDecimalEquals(eaValue, eaDBValue) && isDecimalEquals(kgValue, kgDBValue))
				htmlToExtent(cName,mName,extLogger,driver, "The soh value of the random weight Article : "+articleNum+" matches with DB;EA : "+eaValue+"\nKG : "+kgValue+";EA : " +eaDBValue+"\nKG : "+kgDBValue+";Pass");   
				//Report_AddStep("testcase", "The soh value of the random weight Article : "+articleNum+" matches with DB","EA : "+eaValue+"\nKG : "+kgValue,"EA : " +eaDBValue+"\nKG : "+kgDBValue, "Pass");
			else
				htmlToExtent(cName,mName,extLogger,driver, "The soh value of the random weight Article : "+articleNum+" doesn't matches with DB;EA : "+eaValue+"\nKG : "+kgValue+";EA : " +eaDBValue+"\nKG : "+kgDBValue+";Fail");   
				//Report_AddStep("testcase", "The soh value of the random weight Article : "+articleNum+"  doesn't matches with DB","EA : "+eaValue+"\nKG : "+kgValue,"EA : " +eaDBValue+"\nKG : "+kgDBValue, "Fail");
		
	}
		
	public void verifyWeightedArticleSOH(DSCandPLUReportObjects objDscReport,String articleNum, String kgDBValue, String articleSOH,WebDriver driver) throws IOException
	{
		
			   //System.out.println("Verify Weighted Articles");
			   String sohDetails[] = articleSOH.split(" ");
			   String kgValue =	sohDetails[0];
			   if(isDecimalEquals(kgValue, kgDBValue))
				   htmlToExtent(cName,mName,extLogger,driver, "The soh value of the weighted Article : "+articleNum+"  matches with DB;KG : "+kgValue+";KG : "+kgDBValue+";Pass");    
					//Report_AddStep("testcase", "The soh value of the weighted Article : "+articleNum+"  matches with DB","KG : "+kgValue,"KG : "+kgDBValue, "Pass");
				else
					 htmlToExtent(cName,mName,extLogger,driver, "The soh value of the weighted Article : "+articleNum+"  doesn't matches with DB;KG : "+kgValue+";KG : "+kgDBValue+";Fail");    
					//Report_AddStep("testcase", "The soh value of the weighted Article : "+articleNum+"  doesn't matches with DB","KG : "+kgValue,"KG : "+kgDBValue, "Fail");

		
	}

	public void verifyArticleSOH(DSCandPLUReportObjects objDscReport, String articleNum,String sohDBValue, String articleSOH,WebDriver driver) throws IOException
	{
		
			   //System.out.println("Verify Normal Articles");
			   String sohDetails[] = articleSOH.split(" ");
			   String sohValue =	sohDetails[0];
			   if(isDecimalEquals(sohValue, sohDBValue))
				   htmlToExtent(cName,mName,extLogger,driver, "The soh value of the article  : "+articleNum+"  matches with DB;EA : "+sohValue+";EA : "+sohDBValue+";Pass");    
					//Report_AddStep("testcase", "The soh value of the article  : "+articleNum+"  matches with DB","EA : "+sohValue,"EA : "+sohDBValue, "Pass");
				else
					 htmlToExtent(cName,mName,extLogger,driver, "The soh value of the weighted Article : "+articleNum+"  doesn't matches with DB;EA : "+sohValue+";EA : "+sohDBValue+";Fail");    
					//Report_AddStep("testcase", "The soh value of the article  : "+articleNum+"  doesnt matches with DB","EA : "+sohValue,"EA : "+sohDBValue, "Fail");
				
  }
	
	public List<String> fnVerifyDSCReportPDBorLitreArticle(DSCandPLUReportObjects objDscReport,String deptName,int countDB,WebDriver driver) throws IOException
	{
		List<String> recordList = new ArrayList<String>() ;
		int deptSize = objDscReport.deptHierarchy.size();
		//System.out.println("The no of elements is "+deptSize);
		int min=0,max=9;
		
		if(isEnabled(objDscReport.optionSelectAll))
		{
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}
		else
		{
		 //To select the checkbox
		 click(objDscReport.optionSelectAll);
		 waitForJSandJQueryToLoad(driver);;
		 
		//To deselect the SelectAll checkbox
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}
		for(int i =1;i<=deptSize;i++)
		{
			WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.departmentName,i,driver);
			String dptName = element.getText().trim();
			if(dptName.contains(deptName))
			{
	        WebElement deptCheckbox =  prepareWebElementWithDynamicXpathWithInt(objDscReport.selectDepartment,i,driver);
			click(deptCheckbox);
			break;
			}
		}
		htmlToExtent(cName,mName,extLogger,driver, "The Department Selected is " +deptName+" ;;;Pass");    
		//Report_AddStep("testcase", "The Department Selected is " +deptName ,"" ,"" , "Pass");
		
		click(objDscReport.generateReportBtn);
		waitForJSandJQueryToLoad(driver);;
		String applCount = getText(objDscReport.reportcount);
		String countDBStringValue = String.valueOf(countDB);
		
		if(applCount.equals(countDBStringValue))
			htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is correct;"+applCount+";"+countDBStringValue+";Pass");    
			//Report_AddStep("testcase", "The No of records generated by the report is correct",applCount ,countDBStringValue , "Pass");
		else
			htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is incorrect;"+applCount+";"+countDBStringValue+";Fail");    
			//Report_AddStep("testcase","The No of records generated by the report is incorrect",applCount ,countDBStringValue , "Fail");
		
		int reportCount = Integer.parseInt(applCount)-1;
		if(reportCount<10)
			max = reportCount;
		
		int randomNo =generateRandomNumber(min, max);
		
		WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,randomNo,driver);
		String articleNum = artilceElement.getText();
		recordList.add(articleNum);
		
		WebElement sohElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleSOH_sort,randomNo,driver);
		String articleSOH = sohElement.getText();
		recordList.add(articleSOH);
		return recordList;
	
	
	}
	
	public List<String> fnChoosePartialDepartmentDSCReport(DSCandPLUReportObjects objDscReport,WebDriver driver) throws IOException
	{
		List<String> selectedDept = new ArrayList<String>();
		int max = objDscReport.deptHierarchy.size();
		//System.out.println("The no of elements is "+max);
		int min=2;
		List<Integer> randomNumbers = new ArrayList<Integer>();
		
		if(isEnabled(objDscReport.optionSelectAll))
		{
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}
		else
		{
		 //To select the checkbox
		 click(objDscReport.optionSelectAll);
		 waitForJSandJQueryToLoad(driver);;
		 
		//To deselect the SelectAll checkbox
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}

		//generate some 3 random numbers and Choose any 3 departments,
		
		randomNumbers=generateMultiplRandomNumber(min, max, 3);
		
		for(int i=0;i<3;i++)
		{
			WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.departmentName,randomNumbers.get(i),driver);
			String dptName = element.getText().trim();
		
			Coordinates coordinate = ((Locatable)element).getCoordinates(); 
			coordinate.onPage(); 
			coordinate.inViewPort();
			
			WebElement deptCheckbox =  prepareWebElementWithDynamicXpathWithInt(objDscReport.selectDepartment,randomNumbers.get(i),driver);
			click(deptCheckbox);
			
			htmlToExtent(cName,mName,extLogger,driver, "The Department Selected is " +dptName+" ;;;Pass");    
			//Report_AddStep("testcase","The department Selected is : "+dptName,"" ,"" , "PASS");
			selectedDept.add(dptName);
		}
		
		return selectedDept;
	
  }
	
	public List<List<Object>> fnVerifyDSCReportPartialDepartment(DSCandPLUReportObjects objDscReport, int countDB,WebDriver driver) throws IOException
	{
	int min=0,max=9;
	List<Object> recordList = new ArrayList<Object>();
	List<List<Object>> randomRecord =new ArrayList<List<Object>>();
	
	click(objDscReport.generateReportBtn);
	waitForJSandJQueryToLoad(driver);;
	String applCount = getText(objDscReport.reportcount);
	String countDBStringValue = String.valueOf(countDB);
	
	if(applCount.equals(countDBStringValue))
		htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is correct;"+applCount+";"+countDBStringValue+";Pass");    
		//Report_AddStep("testcase", "The No of records generated by the report is correct",applCount ,countDBStringValue , "Pass");
	else
		htmlToExtent(cName,mName,extLogger,driver, "The No of records generated by the report is incorrect;"+applCount+";"+countDBStringValue+";Fail");    
		//Report_AddStep("testcase","The No of records generated by the report is incorrect",applCount ,countDBStringValue , "Fail");
	
	int reportCount = Integer.parseInt(applCount)-1;
	if(reportCount<10)
		max = reportCount;
	
	int randomNo =generateRandomNumber(min, max);
		
	WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,randomNo,driver);
	String articleNum = artilceElement.getText();
	recordList.add(articleNum);
	
	WebElement articleDescElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleDesc_sort,randomNo,driver);
	String articleDesc = articleDescElement.getText();
	recordList.add(articleDesc);
	
	WebElement omElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleOM_sort,randomNo,driver);
	String om = omElement.getText();
	if(!om.equals(""))
	{
		om = om +".000";
	}
		
	recordList.add(om);
	 
	WebElement sohElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleSOH_sort,randomNo,driver);
	String soh = sohElement.getText();
	String sohValue = getCorrectSOH(soh);
	recordList.add(sohValue);
	
	WebElement sitElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleSIT_sort,randomNo,driver);
	String sit = sitElement.getText();
	if(!sit.equals(""))
	{
		sit = sit +".000";
	}
	recordList.add(sit);
	
	WebElement ltoElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleLTO_sort,randomNo,driver);
	String lto = ltoElement.getText();
	recordList.add(lto);
	
	WebElement displayElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleDisplay_sort,randomNo,driver);
	String display = displayElement.getText();
	recordList.add(display);
	
	WebElement reasonElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleReason_sort,randomNo,driver);
	String reason = reasonElement.getText();
	recordList.add(reason);
	
	randomRecord.add(recordList);
	return randomRecord;
	
	}
		
	public String getCorrectSOH(String soh) throws IOException
	{
		String finalSOHValue ="";
		if(soh.contains("&"))
		{
			String sohDetails[] = soh.split("&");
			finalSOHValue=sohDetails[1].trim().split(" ")[0];
			
		}
		else if(soh.contains("KG") && !soh.contains("EA"))
		{
			 String sohDetails[] = soh.split(" ");
			 finalSOHValue =	sohDetails[0];
			 if(!finalSOHValue.contains("."))
				 finalSOHValue = finalSOHValue +".000";
			
		}
		else
		{
			String sohDetails[] = soh.split(" ");
			finalSOHValue =	sohDetails[0] + ".000";
		}
		
		return finalSOHValue;
	}
	
	
	public List<String> verifyPLUReportAllDepartment(DSCandPLUReportObjects objDscReport,WebDriver driver) throws IOException
	{
	int min=0, max=9;
	List<String> recordList = new ArrayList<String>();
	click(objDscReport.pluDeptDropDown);
	waitForJSandJQueryToLoad(driver);
	waitFor(2);
	//click(objDscReport.pluAllDeptChkBox);
	waitForJSandJQueryToLoad(driver);
	
	click(objDscReport.generateReportBtn);
	waitForJSandJQueryToLoad(driver);
	htmlToExtent(cName,mName,extLogger,driver, "PLU Report is generated Successfully;;;Pass");    
	//Report_AddStep("testcase","PLU Report is generated Successfully","" ,"" , "Pass");
	
	//VerifyPrintButton
	String winHandleBefore = driver.getWindowHandle();
	waitFor(2);
	click(objDscReport.printBtnPLU);
	waitFor(2);
	
	for(String winHandle : driver.getWindowHandles()){
	    driver.switchTo().window(winHandle);
	}
	driver.close();
	driver.switchTo().window(winHandleBefore);
	waitForJSandJQueryToLoad(driver);;
	htmlToExtent(cName,mName,extLogger,driver, "The Print pdf is generated successfully for PLU Report;;;Pass");    
	//Report_AddStep("testcase","The Print pdf is generated successfully for PLU Report","" ,"" , "PASS");
	waitFor(3);
	driver.findElement(By.cssSelector("body")).sendKeys(Keys.CONTROL + "w");	
	htmlToExtent(cName,mName,extLogger,driver, "The Print pdf is closed successfully for PLU Report;;;Pass");    
	//Report_AddStep("testcase","The Print pdf is closed successfully for PLU Report","" ,"" , "PASS");
			
	
	String applCount = getText(objDscReport.reportcount);
	
	int reportCount = Integer.parseInt(applCount)-1;
	if(reportCount<10)
		max = reportCount;
	
	int randomNo =generateRandomNumber(min, max);
	
	WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,randomNo,driver);
	String articleNum = artilceElement.getText();
	recordList.add(articleNum);
	
	WebElement pluCode= prepareWebElementWithDynamicXpathWithInt(objDscReport.articlePLU,randomNo,driver);
	String PLUCode = pluCode.getText();
	recordList.add(PLUCode);
	return recordList;

	
	}
	
	public void verifyPLUReportPagination(DSCandPLUReportObjects objDscReport,WebDriver driver) throws IOException
	{
		int min=3, max=5;
		String applCount = getText(objDscReport.reportcount);
		int count =Integer.parseInt(applCount);
		if(count<70)
			max=count/10;
		
		int randomNo=generateRandomNumber(min, max);
		WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.pluPageNo,randomNo,driver);
		String pageNo =element.getText();
		click(element);
		waitForJSandJQueryToLoad(driver);;
		
		if(objDscReport.pluTable.size()!=0)
			htmlToExtent(cName,mName,extLogger,driver, "PLU Report is Navigated Successfully to the Page No : "+pageNo+";;;Pass");    
	      // Report_AddStep("testcase","PLU Report is Navigated Successfully to the Page No : "+pageNo,"" ,"" , "Pass");
		
		waitFor(2);
		click(objDscReport.PLUReportNextBtn);
		waitForJSandJQueryToLoad(driver);;
		waitFor(2);
		if(objDscReport.pluTable.size()!=0)
		{
			   int nextPageNo=Integer.parseInt(pageNo)+1;
			   htmlToExtent(cName,mName,extLogger,driver, "PLU Report is Navigated Successfully to the Next Page No : "+nextPageNo+";;;Pass");    
		     //  Report_AddStep("testcase","PLU Report is Navigated Successfully to the Next Page No : "+nextPageNo,"" ,"" , "Pass");
		}
		
	}
		
	public List<String> fnChoosePartialDepartmentPLUReport(DSCandPLUReportObjects objDscReport,WebDriver driver) throws IOException
	{
		List<String> recordList = new ArrayList<String>();
		int max = objDscReport.deptDropDown.size()-1;
		//System.out.println("The no of departments is "+max);
		int min=2;
		List<Integer> randomNumbers = new ArrayList<Integer>();
		
		click(objDscReport.pluDeptDropDown);
		waitForJSandJQueryToLoad(driver);;
		
		if(isSelected(objDscReport.pluAllDeptChkBox))
		{
		click(objDscReport.pluAllDeptChkBox);
		waitForJSandJQueryToLoad(driver);;
		}
		else
		{
		 //To select the checkbox
		 click(objDscReport.pluAllDeptChkBox);
		 waitForJSandJQueryToLoad(driver);;
		 
		//To deselect the SelectAll checkbox
		click(objDscReport.pluAllDeptChkBox);
		waitForJSandJQueryToLoad(driver);;
		}

		//generate some 3 random numbers and Choose any 3 departments,
				
		randomNumbers=generateMultiplRandomNumber(min, max, 3);
		
		for(int i=0;i<3;i++)
		{
			WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.departmentNamePLU,randomNumbers.get(i),driver);
			String dptName = element.getText().trim();
		
			Coordinates coordinate = ((Locatable)element).getCoordinates(); 
			coordinate.onPage(); 
			coordinate.inViewPort();
			
			WebElement deptCheckbox =  prepareWebElementWithDynamicXpathWithInt(objDscReport.selectDepartmentPLU,randomNumbers.get(i),driver);
			click(deptCheckbox);
			 htmlToExtent(cName,mName,extLogger,driver, "The department Selected is : "+dptName+";;;Pass");    
		     
			//Report_AddStep("testcase","The department Selected is : "+dptName,"" ,"" , "PASS");
		}
		
		click(objDscReport.generateReportBtn);
		waitForJSandJQueryToLoad(driver);;
		
		 htmlToExtent(cName,mName,extLogger,driver, "PLU Report is generated Successfully for Partial Departments;;;Pass");    
		  //  Report_AddStep("testcase","PLU Report is generated Successfully for Partial Departments","" ,"" , "Pass");
		waitFor(2);
		String applCount = getText(objDscReport.reportcount);
		
		int reportCount = Integer.parseInt(applCount)-1;
		if(reportCount<10)
			max = reportCount;
		else
		max=10;
		int randomNo =generateRandomNumber(min, max);
		
		WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,randomNo,driver);
		String articleNum = artilceElement.getText();
		recordList.add(articleNum);
		
		WebElement pluCode= prepareWebElementWithDynamicXpathWithInt(objDscReport.articlePLU,randomNo,driver);
		String PLUCode = pluCode.getText();
		recordList.add(PLUCode);
		return recordList;
		
	
  }
	
	public String fnVerifyPLUReportForArticleNumber(DSCandPLUReportObjects objDscReport, String randomArticle, String randomPLU,WebDriver driver) throws IOException
	{
	String articleDescApp =null;
	enterText(objDscReport.searchBox,randomArticle,driver);
	waitFor(2);	
	
	click(objDscReport.generateReportBtn);
	waitFor(5);
	
	String applCount = getText(objDscReport.reportcount);
	
	int reportCount = Integer.parseInt(applCount);
	if(reportCount>=1)
	{
	htmlToExtent(cName,mName,extLogger,driver, "PLU Report is generated Successfully for ArticleNumber: "+randomArticle+";;;Pass");     
	//Report_AddStep("testcase","PLU Report is generated Successfully for ArticleNumber: "+randomArticle,"" ,"" , "Pass");
	
	WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,0,driver);
	String articleNumApp = artilceElement.getText();
	
	WebElement pluCode= prepareWebElementWithDynamicXpathWithInt(objDscReport.articlePLU,0,driver);
	String PLUCodeApp = pluCode.getText();
	
	WebElement articleDesc= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleDesc,0,driver);
	articleDescApp = articleDesc.getText();
	
	if(articleNumApp.equals(randomArticle) && PLUCodeApp.equals(randomPLU))
		htmlToExtent(cName,mName,extLogger,driver, "The Article PLU value matches with ArticleNumber: "+randomArticle+";"+PLUCodeApp+";"+randomPLU+";Pass");     
		//Report_AddStep("testcase","The Article PLU value matches with ArticleNumber: "+randomArticle,PLUCodeApp ,randomPLU , "Pass");
	else
		htmlToExtent(cName,mName,extLogger,driver, "The Article PLU value doesn't matches with ArticleNumber: "+randomArticle+";"+PLUCodeApp+";"+randomPLU+";Fail");     
		//Report_AddStep("testcase","The Article PLU value doesn't matches with ArticleNumber: "+randomArticle,PLUCodeApp ,randomPLU , "Fail");
	}
	else
		htmlToExtent(cName,mName,extLogger,driver, "PLU Report is generated Successfully for ArticleNumber: "+randomArticle+";;;Pass");     
		//Report_AddStep("testcase","The PLU report is not displayed for the article : "+randomArticle,"" ,"" , "Fail");
	
	return articleDescApp;
	
	}
	
	public String fnVerifyPLUReportForArticleDesc(DSCandPLUReportObjects objDscReport, String articleDescApp, String ranArticle, String randomPLU,WebDriver driver) throws IOException
	{
	
	enterText(objDscReport.searchBox,articleDescApp,driver);
	waitFor(2);	
	
	click(objDscReport.generateReportBtn);
	waitFor(5);
	
	if((objDscReport.articleSearchInfoList).size()!=0)
	{
		String countNo = getText(objDscReport.searchArticleCount);
		int size =Integer.parseInt(countNo);
		for(int i=0; i<size;i++)
		{
			WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.selectArticleNOPLU,i,driver);
			String articleNum = artilceElement.getText();
			
			if(articleNum.equals(ranArticle))
			{
				WebElement selectChkBox = prepareWebElementWithDynamicXpathWithInt(objDscReport.selectArticleCheckBoxPLU,i,driver);
				click(selectChkBox);
				break;
			}
			
		}
		
		click(objDscReport.addtolistBtn);
		waitFor(2);	
		click(objDscReport.generateReportBtn);
		waitFor(5);
	}
	
	if(objDscReport.err_msg.size()==0)
	{
	htmlToExtent(cName,mName,extLogger,driver, "PLU Report is generated Successfully for Article Description: "+articleDescApp+";;;Pass");     	
	//Report_AddStep("testcase","PLU Report is generated Successfully for Article Description: "+articleDescApp,"" ,"" , "Pass");
	
	WebElement pluCode= prepareWebElementWithDynamicXpathWithInt(objDscReport.articlePLU,0,driver);
	String PLUCodeApp = pluCode.getText();
		
	if(PLUCodeApp.equals(randomPLU))
		htmlToExtent(cName,mName,extLogger,driver, "The Article PLU value matches with Article Description: "+articleDescApp+";"+PLUCodeApp+";"+randomPLU+";Pass");     	
		//Report_AddStep("testcase","The Article PLU value matches with Article Description: "+articleDescApp,PLUCodeApp ,randomPLU , "Pass");
	else
		htmlToExtent(cName,mName,extLogger,driver, "The Article PLU value doesn't matches with Article Description: "+articleDescApp+";"+PLUCodeApp+";"+randomPLU+";Fail");     	
		//Report_AddStep("testcase","The Article PLU value doesn't matches with Article Description: "+articleDescApp,PLUCodeApp ,randomPLU , "Fail");
	}
	else
		htmlToExtent(cName,mName,extLogger,driver, "The PLU report is not displayed for the Article description : "+articleDescApp+";;;Pass");     	
		//Report_AddStep("testcase","The PLU report is not displayed for the Article description : "+articleDescApp,"" ,"" , "Fail");
	
	return articleDescApp;
	
	}
	public void fnVerifyPLUReportForArticlePLU(DSCandPLUReportObjects objDscReport, String randomArticle, String randomPLU,WebDriver driver) throws IOException
	{
		
	enterText(objDscReport.searchBox,randomPLU,driver);
	waitFor(2);	
	
	click(objDscReport.generateReportBtn);
	waitFor(5);
	
	if((objDscReport.articleSearchInfoList).size()!=0)
	{
		String countNo = getText(objDscReport.searchArticleCount);
		int size =Integer.parseInt(countNo);
		for(int i=0; i<size;i++)
		{
			WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.selectArticleNOPLU,i,driver);
			String articleNum = artilceElement.getText();
			
			if(articleNum.equals(randomArticle))
			{
				WebElement selectChkBox = prepareWebElementWithDynamicXpathWithInt(objDscReport.selectArticleCheckBoxPLU,i,driver);
				click(selectChkBox);
				break;
			}
			
		}
		
		click(objDscReport.addtolistBtn);
		waitFor(2);	
		click(objDscReport.generateReportBtn);
		waitFor(5);
	}
	
	if(objDscReport.err_msg.size()==0)
	{
	htmlToExtent(cName,mName,extLogger,driver, "PLU Report is generated Successfully for PLU Code: "+randomPLU+";;;Pass");     		
	//Report_AddStep("testcase","PLU Report is generated Successfully for PLU Code: "+randomPLU,"" ,"" , "Pass");
	
	WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,0,driver);
	String articleNumApp = artilceElement.getText();
	
	WebElement pluCode= prepareWebElementWithDynamicXpathWithInt(objDscReport.articlePLU,0,driver);
	String PLUCodeApp = pluCode.getText();
	
	if(articleNumApp.equals(randomArticle) && PLUCodeApp.equals(randomPLU))
		htmlToExtent(cName,mName,extLogger,driver, "The Article Number matches for the PLU Code: "+randomPLU+";"+articleNumApp+";"+randomArticle+";Pass");     		
		//Report_AddStep("testcase","The Article Number matches for the PLU Code: "+randomPLU,articleNumApp ,randomArticle , "Pass");
	else
		htmlToExtent(cName,mName,extLogger,driver, "The Article Number doesn't matches for the PLU Code: "+randomPLU+";"+articleNumApp+";"+randomArticle+";Fail");     		
		//Report_AddStep("testcase","The Article Number doesn't matches for the  PLU Code: "+randomPLU,articleNumApp ,randomArticle , "Fail");
	}
	else
		htmlToExtent(cName,mName,extLogger,driver, "No results Found for the article PLU code : "+randomPLU+";;;Fail");     		
		//Report_AddStep("testcase","No results Found for the article PLU code : "+randomPLU,"" ,"" , "Fail");
	
	}
	
	public List<List<Object>> fnverifyPLUReportDeletedPLU(DSCandPLUReportObjects objDscReport,WebDriver driver) throws IOException
	{
	int min=0, max=9;
	List<Object> recordList = new ArrayList<Object>();
	List<List<Object>> applicationRecord = new ArrayList<List<Object>>();
	click(objDscReport.pluDeptDropDown);
	waitForJSandJQueryToLoad(driver);;
	
	//click(objDscReport.pluAllDeptChkBox);
	waitForJSandJQueryToLoad(driver);;
	
	click(objDscReport.includePLUChkBox);
	waitFor(3);
	
	click(objDscReport.generateReportBtn);
	waitForJSandJQueryToLoad(driver);;
	
	click(objDscReport.pluReportStatusColumn);
	waitForJSandJQueryToLoad(driver);;
	
	htmlToExtent(cName,mName,extLogger,driver, "PLU Report is generated Successfully with Deleted PLU's;;;Pass");     		
	//Report_AddStep("testcase","PLU Report is generated Successfully with Deleted PLU's","" ,"" , "Pass");
	
		
	String applCount = getText(objDscReport.reportcount);
	
	int reportCount = Integer.parseInt(applCount)-1;
	if(reportCount<10)
		max = reportCount;
	
	//int randomNo =generateRandomNumber(min, max);
	for(int i=0;i<max;i++)
	{
	
	WebElement artilceStatus = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleALCStatus,i,driver);
	String alcStatus = artilceStatus.getText();
		
		if(alcStatus!="" && alcStatus.contains("Deleted"))
		{
		WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,i,driver);
		String articleNum = artilceElement.getText();
		recordList.add(articleNum);
		
		WebElement pluCode= prepareWebElementWithDynamicXpathWithInt(objDscReport.articlePLU,i,driver);
		String PLUCode = pluCode.getText();
		recordList.add(PLUCode);
		
		recordList.add(alcStatus);
		break;
		}
	}
	applicationRecord.add(recordList);
	return applicationRecord;
	}
	
	public void fnverifyPLUReportMultiDepartment(DSCandPLUReportObjects objDscReport, List<Object> randomRecord,WebDriver driver) throws IOException
	{

	String dept_name = randomRecord.get(0).toString();
	String cat_name = randomRecord.get(1).toString();
	String subcat_name = randomRecord.get(2).toString();
	//String subcat_name = randomRecord.get(0).toString();
	
	click(objDscReport.pluDeptDropDown);
	waitForJSandJQueryToLoad(driver);;
	
	if(isSelected(objDscReport.pluAllDeptChkBox))
	{
	click(objDscReport.pluAllDeptChkBox);
	waitForJSandJQueryToLoad(driver);;
	
	click(objDscReport.pluDeptDropDown);
	}
	else
	{
		click(objDscReport.pluAllDeptChkBox);
		waitForJSandJQueryToLoad(driver);;
		
		click(objDscReport.pluAllDeptChkBox);
		waitForJSandJQueryToLoad(driver);;
		
		click(objDscReport.pluDeptDropDown);
	}
	click(objDscReport.multiDeptChkBox);
	waitFor(3);

	int deptsize=objDscReport.department.size();
	for(int i=1;i<=deptsize;i++)
	{
		WebElement element = prepareWebElementWithDynamicXpathWithInt(objDscReport.departmentList,i,driver);
		String dept_name_appl = element.getText();
		if(dept_name.equals(dept_name_appl))
		{
			verticalinternalscroll(element,driver);
			WebElement element1 = prepareWebElementWithDynamicXpathWithInt(objDscReport.deparmentchkBox,i,driver);
			element1.click();
			break;
		}
	}
	int catsize=objDscReport.category.size();
	click(objDscReport.categoryAll);
	for(int i=1;i<=catsize;i++)
	{
		WebElement element = prepareWebElementWithDynamicXpathWithInt(objDscReport.categoryList,i,driver);
		String cat_name_appl = element.getText();
		if(cat_name.equals(cat_name_appl))
		{
			verticalinternalscroll(element,driver);
			WebElement element1 = prepareWebElementWithDynamicXpathWithInt(objDscReport.categoryChkBox,i,driver);
			element1.click();
			break;
		}
	}
	int subcatsize=objDscReport.subCategory.size();
	click(objDscReport.subCategoryAll);
	for(int i=1;i<=subcatsize;i++)
	{
		WebElement element = prepareWebElementWithDynamicXpathWithInt(objDscReport.subCategoryList,i,driver);
		String subcat_name_appl = element.getText();
		if(subcat_name.equals(subcat_name_appl))
		{
			verticalinternalscroll(element,driver);
			WebElement element1 = prepareWebElementWithDynamicXpathWithInt(objDscReport.subCategoryChkBox,i,driver);
			element1.click();
			break;
		}
	}
	
	click(objDscReport.generateReportBtn);
	waitForJSandJQueryToLoad(driver);;
	
	if(objDscReport.err_msg.size()!=0)
	{	
		htmlToExtent(cName,mName,extLogger,driver, "No Data available in PLU report for the Selected Category: "+randomRecord+";;;Pass");     		
		//Report_AddStep("testcase","No Data available in PLU report for the Selected Category: "+randomRecord,"" ,"" , "Pass");
	}
	else
	htmlToExtent(cName,mName,extLogger,driver, "PLU report is generated Successfully;;;Pass");     		
	//Report_AddStep("testcase","PLU report is generated Successfully ","" ,"" , "Pass");
		
	
	}
	
	public void fnverifyPLUReportPrimaryDepartment(DSCandPLUReportObjects objDscReport, List<String> deptNameListDB,WebDriver driver) throws IOException
	{
	List<String> deptNameListApp = new ArrayList<String>();
		
	click(objDscReport.pluDeptDropDown);
	waitForJSandJQueryToLoad(driver);;
	
/*	if(isSelected(objDscReport.pluAllDeptChkBox))
	{
	click(objDscReport.pluAllDeptChkBox);
	waitForJSandJQueryToLoad(driver);;
	
	click(objDscReport.pluDeptDropDown);
	}
	else
	{
		click(objDscReport.pluAllDeptChkBox);
		waitForJSandJQueryToLoad(driver);;
		
		click(objDscReport.pluAllDeptChkBox);
		waitForJSandJQueryToLoad(driver);;
		
		
	}
	*/
	htmlToExtent(cName,mName,extLogger,driver, "The department Selected in Databse : "+deptNameListDB+";;;Pass");     		
	//Report_AddStep("testcase","The department Selected in Databse : "+deptNameListDB,"" ,"" , "PASS");


	int deptsize=objDscReport.departmentListPLU.size();
	for(int i=2;i<deptsize;i++)
	{
		WebElement deptCheckbox =  prepareWebElementWithDynamicXpathWithInt(objDscReport.selectDepartmentPLU,i,driver);
		
		Coordinates coordinate = ((Locatable)deptCheckbox).getCoordinates(); 
		coordinate.onPage(); 
		coordinate.inViewPort();
		
		
		if(isSelected(deptCheckbox))
		{
			WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.departmentNamePLU,i,driver);
			String dptName = element.getText().trim();
			deptNameListApp.add(dptName);
		}
		
	}
	htmlToExtent(cName,mName,extLogger,driver, "The department Selected in application : "+deptNameListApp+";;;Pass");     		
	//Report_AddStep("testcase","The department Selected in application : "+deptNameListApp,"" ,"" , "PASS");
	Collections.sort(deptNameListDB);
	Collections.sort(deptNameListApp);
	
	if(deptNameListDB.equals(deptNameListApp))
	{
		htmlToExtent(cName,mName,extLogger,driver, "The Primary departments are selected properly ;;;Pass");     		
		
		//Report_AddStep("testcase","The Primary departments are selected properly","" ,"" , "PASS");
		click(objDscReport.pluDeptDropDown);
		click(objDscReport.generateReportBtn);
		waitForJSandJQueryToLoad(driver);;
		htmlToExtent(cName,mName,extLogger,driver, "The PLU report is generated successfully for the primary department ;;;Pass");     		
			
		//Report_AddStep("testcase","The PLU report is generated successfully for the primary department ","" ,"" , "Pass");
		
	}
	else
		htmlToExtent(cName,mName,extLogger,driver, "The Primary departments are not selected properly ;;;Fail");     		
	
		//Report_AddStep("testcase","The Primary departments are not selected properly : ","" ,"" , "Fail");
	
	
	}

	public String getTodayDate() {
		Calendar cal = Calendar.getInstance();
		SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
		String today_date = format1.format(cal.getTime());
		return today_date;
	}

	public void verifyMultipleReasonCodes(DSCandPLUReportObjects objDscReport,
			List<List<Object>> articleReasonDBList, String ranArticle, int count,WebDriver driver) throws IOException {
		
		if(!(isEnabled(objDscReport.optionSelectAll)))
			  click(objDscReport.optionSelectAll);
			waitForJSandJQueryToLoad(driver);;
			click(objDscReport.generateReportBtn);
			waitForJSandJQueryToLoad(driver);;
			
		//To avoid more page navigation
		int articleno = Integer.parseInt(ranArticle);
		if(articleno<400000)
		{
			//ArticleColumn to have the Articles in same page	
			click(objDscReport.articleColumn);
			waitForJSandJQueryToLoad(driver);;	
			htmlToExtent(cName,mName,extLogger,driver, "The Artcile column is sorted in Ascending order to have articles in same page and avoid more page navigation ;;;Pass");     		
			}
		else
		{
			//ArticleColumn to have the Articles in same page	
			click(objDscReport.articleColumn);
			waitForJSandJQueryToLoad(driver);;	
			click(objDscReport.articleColumn);
			waitForJSandJQueryToLoad(driver);;	
			htmlToExtent(cName,mName,extLogger,driver, "The Artcile column is sorted in Descending order to have articles in same page and avoid more page navigation;;;Pass");     		
			
		}
		
		
		List<List<Object>> articleReasonAppList =new ArrayList<List<Object>>();
		List singleList = null;
		int i=0;
		int pageNo=1;
		do
		{
			for(int s=0;s<10;s++)
			{
				WebElement article =  prepareWebElementWithTwoDynamicXpathWithInt(objDscReport.articleno_Random,pageNo,s,driver);
				String articleNumApp = article.getText();
				if(articleNumApp.equals(ranArticle))
				{
					WebElement reason =  prepareWebElementWithTwoDynamicXpathWithInt(objDscReport.articleReason_Random,pageNo,s,driver);
					String reasonValueApp = reason.getText();
					singleList = new ArrayList();
					singleList.add(articleNumApp);
					singleList.add(reasonValueApp);
					articleReasonAppList.add(singleList);
					i++;
					htmlToExtent(cName,mName,extLogger,driver, "The Artcile is presented in Page No: " +pageNo+" with Reason Code : "+reasonValueApp+" ;;;Pass");     		
				}
			
			}
			click(objDscReport.PLUReportNextBtn);
			pageNo =pageNo+1;
			waitForJSandJQueryToLoad(driver);;
			
		}while(i<count);
		
		ElementContains1(cName, mName,extLogger,driver, articleReasonAppList, articleReasonDBList);
		 
	}
	
	/*public List<String> fnVerifyDSCReportPrimaryDepartment(DSCandPLUReportObjects objDscReport,String deptName,int countDB) throws IOException
	{
		List<String> recordList = new ArrayList<String>() ;
		int deptSize = objDscReport.deptHierarchy.size();
		//System.out.println("The no of elements is "+deptSize);
		
		if(isEnabled(objDscReport.optionSelectAll))
		{
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}
		else
		{
		 //To select the checkbox
		 click(objDscReport.optionSelectAll);
		 waitForJSandJQueryToLoad(driver);;
		 
		//To deselect the SelectAll checkbox
		click(objDscReport.optionSelectAll);
		waitForJSandJQueryToLoad(driver);;
		}
		for(int i =1;i<=deptSize;i++)
		{
			WebElement element =  prepareWebElementWithDynamicXpathWithInt(objDscReport.departmentName,i);
			String dptName = element.getText().trim();
			if(dptName.equalsIgnoreCase(deptName))
			{
	        WebElement deptCheckbox =  prepareWebElementWithDynamicXpathWithInt(objDscReport.selectDepartment,i);
			click(deptCheckbox);
			break;
			}
		}
		
		Report_AddStep("testcase", "The Department Selected is " +deptName ,"" ,"" , "Pass");
		
		click(objDscReport.generateReportBtn);
		waitForJSandJQueryToLoad(driver);;
		String applCount = getText(objDscReport.reportcount);
		String countDBStringValue = String.valueOf(countDB);
		
		if(applCount.equals(countDBStringValue))
			Report_AddStep("testcase", "The No of records generated by the report is correct",applCount ,countDBStringValue , "Pass");
		else
			Report_AddStep("testcase","The No of records generated by the report is incorrect",applCount ,countDBStringValue , "Fail");
		
		
			
		WebElement artilceElement = prepareWebElementWithDynamicXpathWithInt(objDscReport.articleno_sort,6);
		String articleNum = artilceElement.getText();
		recordList.add(articleNum);
		
		WebElement sohElement= prepareWebElementWithDynamicXpathWithInt(objDscReport.articleSOH_sort,6);
		String articleSOH = sohElement.getText();
		recordList.add(articleSOH);
		return recordList;
	
	
	}*/
	

}
