<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="128" passed="128">
  <reporter-output>
  </reporter-output>
  <suite name="StoresCentral_TestSuite" duration-ms="1721172" started-at="2018-12-06T04:52:44Z" finished-at="2018-12-06T05:21:25Z">
    <groups>
    </groups>
    <test name="POC_tests" duration-ms="1721172" started-at="2018-12-06T04:52:44Z" finished-at="2018-12-06T05:21:25Z">
      <class name="au.wow.ngbomain.tests.ReceivingOrderTests">
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="loadXMLFile" is-config="true" duration-ms="140" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="8972" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveIBTByExceptionAcceptNR()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveIBTByExceptionAcceptNR()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveIBTByExceptionAcceptNR" duration-ms="34056" started-at="2018-12-06T10:24:07Z" description="check Receive line by Exception IBT by accepting not ranged articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:24:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveIBTByExceptionAcceptNR -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2066" started-at="2018-12-06T10:24:41Z" finished-at="2018-12-06T10:24:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveIBTByExceptionAcceptNR status=SUCCESS method=ReceivingOrderTests.ReceiveIBTByExceptionAcceptNR()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveIBTByExceptionAcceptNR()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="20008" started-at="2018-12-06T10:24:43Z" finished-at="2018-12-06T10:25:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveIBTByExceptionRejectNR()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveIBTByExceptionRejectNR()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveIBTByExceptionRejectNR" duration-ms="33355" started-at="2018-12-06T10:25:03Z" description="check Receive line by Exception IBT by rejecting not ranged articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveIBTByExceptionRejectNR -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2032" started-at="2018-12-06T10:25:37Z" finished-at="2018-12-06T10:25:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveIBTByExceptionRejectNR status=SUCCESS method=ReceivingOrderTests.ReceiveIBTByExceptionRejectNR()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveIBTByExceptionRejectNR()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="18973" started-at="2018-12-06T10:25:39Z" finished-at="2018-12-06T10:25:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByExceptionIBT()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveLineByExceptionIBT()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveLineByExceptionIBT" duration-ms="30599" started-at="2018-12-06T10:25:58Z" description="check Receive line by Exception IBT" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveLineByExceptionIBT -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2032" started-at="2018-12-06T10:26:28Z" finished-at="2018-12-06T10:26:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveLineByExceptionIBT status=SUCCESS method=ReceivingOrderTests.ReceiveLineByExceptionIBT()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByExceptionIBT()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19522" started-at="2018-12-06T10:26:30Z" finished-at="2018-12-06T10:26:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByExceptionIBTTempCheck()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveLineByExceptionIBTTempCheck()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveLineByExceptionIBTTempCheck" duration-ms="33182" started-at="2018-12-06T10:26:50Z" description="verify Temperature Check Receive line by Exception IBT" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:27:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveLineByExceptionIBTTempCheck -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2048" started-at="2018-12-06T10:27:23Z" finished-at="2018-12-06T10:27:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveLineByExceptionIBTTempCheck status=SUCCESS method=ReceivingOrderTests.ReceiveLineByExceptionIBTTempCheck()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByExceptionIBTTempCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="20609" started-at="2018-12-06T10:27:25Z" finished-at="2018-12-06T10:27:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByExceptions()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveLineByExceptions()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveLineByExceptions" duration-ms="31137" started-at="2018-12-06T10:27:46Z" description="check Receive line by Exception" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveLineByExceptions -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2048" started-at="2018-12-06T10:28:17Z" finished-at="2018-12-06T10:28:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveLineByExceptions status=SUCCESS method=ReceivingOrderTests.ReceiveLineByExceptions()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByExceptions()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19248" started-at="2018-12-06T10:28:19Z" finished-at="2018-12-06T10:28:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByLineNewOM()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveLineByLineNewOM()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveLineByLineNewOM" duration-ms="32694" started-at="2018-12-06T10:28:38Z" description="check Receive line by line by adding new OM" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveLineByLineNewOM -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2005" started-at="2018-12-06T10:29:11Z" finished-at="2018-12-06T10:29:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveLineByLineNewOM status=SUCCESS method=ReceivingOrderTests.ReceiveLineByLineNewOM()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByLineNewOM()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19010" started-at="2018-12-06T10:29:13Z" finished-at="2018-12-06T10:29:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByLineTempCheck()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveLineByLineTempCheck()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveLineByLineTempCheck" duration-ms="31180" started-at="2018-12-06T10:29:32Z" description="check Receive line by line with Temperature check" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveLineByLineTempCheck -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2040" started-at="2018-12-06T10:30:03Z" finished-at="2018-12-06T10:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveLineByLineTempCheck status=SUCCESS method=ReceivingOrderTests.ReceiveLineByLineTempCheck()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByLineTempCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19199" started-at="2018-12-06T10:30:05Z" finished-at="2018-12-06T10:30:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByLines()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveLineByLines()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveLineByLines" duration-ms="30414" started-at="2018-12-06T10:30:24Z" description="check Receive line by line" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveLineByLines -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2032" started-at="2018-12-06T10:30:55Z" finished-at="2018-12-06T10:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveLineByLines status=SUCCESS method=ReceivingOrderTests.ReceiveLineByLines()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveLineByLines()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19566" started-at="2018-12-06T10:30:57Z" finished-at="2018-12-06T10:31:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveVendorinExceptionByNewArt()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveVendorinExceptionByNewArt()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveVendorinExceptionByNewArt" duration-ms="31420" started-at="2018-12-06T10:31:16Z" description="Verify Vendor through Exception by adding new article" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:31:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveVendorinExceptionByNewArt -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2036" started-at="2018-12-06T10:31:48Z" finished-at="2018-12-06T10:31:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveVendorinExceptionByNewArt status=SUCCESS method=ReceivingOrderTests.ReceiveVendorinExceptionByNewArt()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveVendorinExceptionByNewArt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19235" started-at="2018-12-06T10:31:50Z" finished-at="2018-12-06T10:32:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveVendorinLineByNewEAN()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceiveVendorinLineByNewEAN()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceiveVendorinLineByNewEAN" duration-ms="30125" started-at="2018-12-06T10:32:09Z" description="Verify Vendor through Exception by adding new article" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:32:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiveVendorinLineByNewEAN -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2034" started-at="2018-12-06T10:32:39Z" finished-at="2018-12-06T10:32:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiveVendorinLineByNewEAN status=SUCCESS method=ReceivingOrderTests.ReceiveVendorinLineByNewEAN()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceiveVendorinLineByNewEAN()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19276" started-at="2018-12-06T10:32:41Z" finished-at="2018-12-06T10:33:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinExceptionMulPOtoSingleASN() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVendorASNinExceptionMulPOtoSingleASN()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVendorASNinExceptionMulPOtoSingleASN" duration-ms="53238" started-at="2018-12-06T10:33:00Z" description="Verify Receive Vendor ASN in Exception by Accepting not ranged articles  where multiple PO is converted into single ASN" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:33:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVendorASNinExceptionMulPOtoSingleASN -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2051" started-at="2018-12-06T10:33:54Z" finished-at="2018-12-06T10:33:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVendorASNinExceptionMulPOtoSingleASN status=SUCCESS method=ReceivingOrderTests.ReceivingVendorASNinExceptionMulPOtoSingleASN()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinExceptionMulPOtoSingleASN() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="20243" started-at="2018-12-06T10:33:56Z" finished-at="2018-12-06T10:34:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinExceptionSinglePOhavingDL() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVendorASNinExceptionSinglePOhavingDL()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVendorASNinExceptionSinglePOhavingDL" duration-ms="41743" started-at="2018-12-06T10:34:16Z" description="Verify Receive Vendor ASN in Full where single PO having duplicate ASN" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVendorASNinExceptionSinglePOhavingDL -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2033" started-at="2018-12-06T10:34:58Z" finished-at="2018-12-06T10:35:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVendorASNinExceptionSinglePOhavingDL status=SUCCESS method=ReceivingOrderTests.ReceivingVendorASNinExceptionSinglePOhavingDL()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinExceptionSinglePOhavingDL() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19252" started-at="2018-12-06T10:35:00Z" finished-at="2018-12-06T10:35:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullByPostLater() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVendorASNinFullByPostLater()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVendorASNinFullByPostLater" duration-ms="29311" started-at="2018-12-06T10:35:19Z" description="Receiving VendorASN in Full By using PostLater option" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:35:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVendorASNinFullByPostLater -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2047" started-at="2018-12-06T10:35:48Z" finished-at="2018-12-06T10:35:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVendorASNinFullByPostLater status=SUCCESS method=ReceivingOrderTests.ReceivingVendorASNinFullByPostLater()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullByPostLater() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19354" started-at="2018-12-06T10:35:50Z" finished-at="2018-12-06T10:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullMulPOtoSingleASNOption() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVendorASNinFullMulPOtoSingleASNOption()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVendorASNinFullMulPOtoSingleASNOption" duration-ms="51437" started-at="2018-12-06T10:36:10Z" description="Verify Receive Vendor ASN in Full where multiple PO is converted into single ASN" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVendorASNinFullMulPOtoSingleASNOption -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2050" started-at="2018-12-06T10:37:01Z" finished-at="2018-12-06T10:37:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVendorASNinFullMulPOtoSingleASNOption status=SUCCESS method=ReceivingOrderTests.ReceivingVendorASNinFullMulPOtoSingleASNOption()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullMulPOtoSingleASNOption() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="18987" started-at="2018-12-06T10:37:03Z" finished-at="2018-12-06T10:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullMulPOtoSingleASNhavingDL() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVendorASNinFullMulPOtoSingleASNhavingDL()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVendorASNinFullMulPOtoSingleASNhavingDL" duration-ms="49349" started-at="2018-12-06T10:37:22Z" description="Verify Receive Vendor ASN in Full where multiple PO is converted into single ASN having duplicate ASN" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:38:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVendorASNinFullMulPOtoSingleASNhavingDL -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2047" started-at="2018-12-06T10:38:11Z" finished-at="2018-12-06T10:38:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVendorASNinFullMulPOtoSingleASNhavingDL status=SUCCESS method=ReceivingOrderTests.ReceivingVendorASNinFullMulPOtoSingleASNhavingDL()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullMulPOtoSingleASNhavingDL() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="18883" started-at="2018-12-06T10:38:13Z" finished-at="2018-12-06T10:38:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullSinglePOhavingDL() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVendorASNinFullSinglePOhavingDL()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVendorASNinFullSinglePOhavingDL" duration-ms="41700" started-at="2018-12-06T10:38:32Z" description="Verify Receive Vendor ASN in Exception where single PO having duplicate ASN" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:39:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVendorASNinFullSinglePOhavingDL -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2047" started-at="2018-12-06T10:39:14Z" finished-at="2018-12-06T10:39:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVendorASNinFullSinglePOhavingDL status=SUCCESS method=ReceivingOrderTests.ReceivingVendorASNinFullSinglePOhavingDL()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorASNinFullSinglePOhavingDL() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19406" started-at="2018-12-06T10:39:16Z" finished-at="2018-12-06T10:39:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorinFullByPostLater() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVendorinFullByPostLater()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVendorinFullByPostLater" duration-ms="30027" started-at="2018-12-06T10:39:35Z" description="Receiving Vendor in Full By using PostLater option" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:40:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVendorinFullByPostLater -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2049" started-at="2018-12-06T10:40:05Z" finished-at="2018-12-06T10:40:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVendorinFullByPostLater status=SUCCESS method=ReceivingOrderTests.ReceivingVendorinFullByPostLater()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVendorinFullByPostLater() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19118" started-at="2018-12-06T10:40:08Z" finished-at="2018-12-06T10:40:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVirtualDCOrderByException() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingVirtualDCOrderByException()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingVirtualDCOrderByException" duration-ms="29078" started-at="2018-12-06T10:40:27Z" description="Verify Receive Virtual DC through exception" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:40:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingVirtualDCOrderByException -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2049" started-at="2018-12-06T10:40:56Z" finished-at="2018-12-06T10:40:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingVirtualDCOrderByException status=SUCCESS method=ReceivingOrderTests.ReceivingVirtualDCOrderByException()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingVirtualDCOrderByException() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="19196" started-at="2018-12-06T10:40:58Z" finished-at="2018-12-06T10:41:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingWHSellableinException() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingWHSellableinException()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingWHSellableinException" duration-ms="20684" started-at="2018-12-06T10:41:17Z" description="Verify Receive Warehouse in Exception for sellable article" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:41:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingWHSellableinException -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2046" started-at="2018-12-06T10:41:38Z" finished-at="2018-12-06T10:41:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingWHSellableinException status=SUCCESS method=ReceivingOrderTests.ReceivingWHSellableinException()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingWHSellableinException() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="setUp" is-config="true" duration-ms="9125" started-at="2018-12-06T10:41:40Z" finished-at="2018-12-06T10:41:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingWareHouseinFullByPostLater() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ReceivingWareHouseinFullByPostLater()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="ReceivingWareHouseinFullByPostLater" duration-ms="31125" started-at="2018-12-06T10:41:49Z" description="Receiving WareHouse in Full By using PostLater option" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:42:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceivingWareHouseinFullByPostLater -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="flushReports" is-config="true" duration-ms="2064" started-at="2018-12-06T10:42:20Z" finished-at="2018-12-06T10:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceivingWareHouseinFullByPostLater status=SUCCESS method=ReceivingOrderTests.ReceivingWareHouseinFullByPostLater()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.ReceivingOrderTests.ReceivingWareHouseinFullByPostLater() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.ReceivingOrderTests@2638011]" name="tearDown" is-config="true" duration-ms="5195" started-at="2018-12-06T10:42:22Z" finished-at="2018-12-06T10:42:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- au.wow.ngbomain.tests.ReceivingOrderTests -->
      <class name="au.wow.ngbomain.tests.Sampletest">
        <test-method status="PASS" signature="onStart()[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0]" name="onStart" is-config="true" duration-ms="1034" started-at="2018-12-06T10:22:43Z" finished-at="2018-12-06T10:22:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onStart -->
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0]" name="loadXMLFile" is-config="true" duration-ms="250" started-at="2018-12-06T10:22:44Z" finished-at="2018-12-06T10:22:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0]" name="setUp" is-config="true" duration-ms="4486" started-at="2018-12-06T10:22:44Z" finished-at="2018-12-06T10:22:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.Sampletest.check() throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="check()[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0]" name="check" duration-ms="63787" started-at="2018-12-06T10:22:49Z" finished-at="2018-12-06T10:23:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0]" name="flushReports" is-config="true" duration-ms="2375" started-at="2018-12-06T10:23:52Z" finished-at="2018-12-06T10:23:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check status=SUCCESS method=Sampletest.check()[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.Sampletest.check() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0]" name="tearDown" is-config="true" duration-ms="3178" started-at="2018-12-06T10:23:55Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="flushReports1()[pri:0, instance:au.wow.ngbomain.tests.Sampletest@68267da0]" name="flushReports1" is-config="true" duration-ms="1" started-at="2018-12-06T10:51:25Z" finished-at="2018-12-06T10:51:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports1 -->
      </class> <!-- au.wow.ngbomain.tests.Sampletest -->
      <class name="au.wow.ngbomain.tests.StockAdjustmentTests">
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="loadXMLFile" is-config="true" duration-ms="172" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="3284" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:24:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkBWSarticle()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkBWSarticle()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkBWSarticle" duration-ms="33573" started-at="2018-12-06T10:24:01Z" description="check IDT and Reverse IDT is applicable for BWS articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:24:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBWSarticle -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8094" started-at="2018-12-06T10:24:35Z" finished-at="2018-12-06T10:24:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBWSarticle status=SUCCESS method=StockAdjustmentTests.checkBWSarticle()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkBWSarticle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5333" started-at="2018-12-06T10:24:43Z" finished-at="2018-12-06T10:24:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkIDTandRIDT()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkIDTandRIDT()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkIDTandRIDT" duration-ms="50030" started-at="2018-12-06T10:24:48Z" description="check IDT and Reverse IDT" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:25:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIDTandRIDT -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8071" started-at="2018-12-06T10:25:38Z" finished-at="2018-12-06T10:25:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkIDTandRIDT status=SUCCESS method=StockAdjustmentTests.checkIDTandRIDT()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkIDTandRIDT()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="18106" started-at="2018-12-06T10:25:47Z" finished-at="2018-12-06T10:26:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkIDTandRIDT_randomweighted()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkIDTandRIDT_randomweighted()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkIDTandRIDT_randomweighted" duration-ms="25633" started-at="2018-12-06T10:26:05Z" description="check IDT and Reverse IDT for random weighted articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIDTandRIDT_randomweighted -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8071" started-at="2018-12-06T10:26:30Z" finished-at="2018-12-06T10:26:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkIDTandRIDT_randomweighted status=SUCCESS method=StockAdjustmentTests.checkIDTandRIDT_randomweighted()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkIDTandRIDT_randomweighted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17965" started-at="2018-12-06T10:26:38Z" finished-at="2018-12-06T10:26:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkIDTandRIDT_weighted()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkIDTandRIDT_weighted()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkIDTandRIDT_weighted" duration-ms="31387" started-at="2018-12-06T10:26:56Z" description="check IDT and Reverse IDT for weighted articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:27:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIDTandRIDT_weighted -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8020" started-at="2018-12-06T10:27:28Z" finished-at="2018-12-06T10:27:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkIDTandRIDT_weighted status=SUCCESS method=StockAdjustmentTests.checkIDTandRIDT_weighted()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkIDTandRIDT_weighted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="18094" started-at="2018-12-06T10:27:36Z" finished-at="2018-12-06T10:27:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkNoNodeIDforIDTandRIDT()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkNoNodeIDforIDTandRIDT()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkNoNodeIDforIDTandRIDT" duration-ms="32251" started-at="2018-12-06T10:27:54Z" description="check IDT and Reverse IDT" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNoNodeIDforIDTandRIDT -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8033" started-at="2018-12-06T10:28:26Z" finished-at="2018-12-06T10:28:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkNoNodeIDforIDTandRIDT status=SUCCESS method=StockAdjustmentTests.checkNoNodeIDforIDTandRIDT()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkNoNodeIDforIDTandRIDT()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5046" started-at="2018-12-06T10:28:34Z" finished-at="2018-12-06T10:28:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkWHDelWeiRandomWeiArt()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkWHDelWeiRandomWeiArt()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkWHDelWeiRandomWeiArt" duration-ms="23050" started-at="2018-12-06T10:28:39Z" description="check Warehouse Over Delivery for Weighted and RandomWeighted Article" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWHDelWeiRandomWeiArt -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8051" started-at="2018-12-06T10:29:02Z" finished-at="2018-12-06T10:29:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkWHDelWeiRandomWeiArt status=SUCCESS method=StockAdjustmentTests.checkWHDelWeiRandomWeiArt()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkWHDelWeiRandomWeiArt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5441" started-at="2018-12-06T10:29:10Z" finished-at="2018-12-06T10:29:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkWHDeliveryCPBD()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkWHDeliveryCPBD()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkWHDeliveryCPBD" duration-ms="19184" started-at="2018-12-06T10:29:16Z" description="check WareHouse Delivery" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:29:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWHDeliveryCPBD -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8063" started-at="2018-12-06T10:29:35Z" finished-at="2018-12-06T10:29:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkWHDeliveryCPBD status=SUCCESS method=StockAdjustmentTests.checkWHDeliveryCPBD()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkWHDeliveryCPBD()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5614" started-at="2018-12-06T10:29:43Z" finished-at="2018-12-06T10:29:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkWHdelivery()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkWHdelivery()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="checkWHdelivery" duration-ms="20530" started-at="2018-12-06T10:29:49Z" description="check WareHouse Under/Over Delivery" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWHdelivery -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8066" started-at="2018-12-06T10:30:09Z" finished-at="2018-12-06T10:30:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkWHdelivery status=SUCCESS method=StockAdjustmentTests.checkWHdelivery()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.checkWHdelivery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5372" started-at="2018-12-06T10:30:17Z" finished-at="2018-12-06T10:30:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.cpbdArticleUnreceivedOrders()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cpbdArticleUnreceivedOrders()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="cpbdArticleUnreceivedOrders" duration-ms="19030" started-at="2018-12-06T10:30:22Z" description="CPBD EA Article - Unreceived Orders" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cpbdArticleUnreceivedOrders -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8039" started-at="2018-12-06T10:30:42Z" finished-at="2018-12-06T10:30:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cpbdArticleUnreceivedOrders status=SUCCESS method=StockAdjustmentTests.cpbdArticleUnreceivedOrders()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.cpbdArticleUnreceivedOrders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17342" started-at="2018-12-06T10:30:50Z" finished-at="2018-12-06T10:31:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.cpbpArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cpbpArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="cpbpArticles" duration-ms="50559" started-at="2018-12-06T10:31:07Z" description="check CPBP Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:31:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cpbpArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8023" started-at="2018-12-06T10:31:57Z" finished-at="2018-12-06T10:32:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cpbpArticles status=SUCCESS method=StockAdjustmentTests.cpbpArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.cpbpArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17513" started-at="2018-12-06T10:32:05Z" finished-at="2018-12-06T10:32:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.mpkAndCARArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="mpkAndCARArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="mpkAndCARArticles" duration-ms="126348" started-at="2018-12-06T10:32:23Z" description="MPK and CAR articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mpkAndCARArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8065" started-at="2018-12-06T10:34:29Z" finished-at="2018-12-06T10:34:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mpkAndCARArticles status=SUCCESS method=StockAdjustmentTests.mpkAndCARArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.mpkAndCARArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="19067" started-at="2018-12-06T10:34:37Z" finished-at="2018-12-06T10:34:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjArt()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjArt()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjArt" duration-ms="69053" started-at="2018-12-06T10:34:56Z" description="Verifying Stock Adjustment" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjArt -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8070" started-at="2018-12-06T10:36:06Z" finished-at="2018-12-06T10:36:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjArt status=SUCCESS method=StockAdjustmentTests.verifyStockAdjArt()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjArt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="18155" started-at="2018-12-06T10:36:14Z" finished-at="2018-12-06T10:36:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDesc()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjDesc()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjDesc" duration-ms="56340" started-at="2018-12-06T10:36:32Z" description="Verifying Stock Adjustment" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:37:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjDesc -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8040" started-at="2018-12-06T10:37:28Z" finished-at="2018-12-06T10:37:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjDesc status=SUCCESS method=StockAdjustmentTests.verifyStockAdjDesc()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDesc()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="16731" started-at="2018-12-06T10:37:36Z" finished-at="2018-12-06T10:37:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDisplayArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjDisplayArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjDisplayArticles" duration-ms="38783" started-at="2018-12-06T10:37:53Z" description="Verifying Stock Adjustment for Display Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjDisplayArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8063" started-at="2018-12-06T10:38:32Z" finished-at="2018-12-06T10:38:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjDisplayArticles status=SUCCESS method=StockAdjustmentTests.verifyStockAdjDisplayArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDisplayArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17101" started-at="2018-12-06T10:38:40Z" finished-at="2018-12-06T10:38:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDisplayArticlesDescription()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjDisplayArticlesDescription()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjDisplayArticlesDescription" duration-ms="40537" started-at="2018-12-06T10:38:57Z" description="Verifying Stock Adjustment for Display Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:39:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjDisplayArticlesDescription -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8080" started-at="2018-12-06T10:39:37Z" finished-at="2018-12-06T10:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjDisplayArticlesDescription status=SUCCESS method=StockAdjustmentTests.verifyStockAdjDisplayArticlesDescription()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDisplayArticlesDescription()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17385" started-at="2018-12-06T10:39:45Z" finished-at="2018-12-06T10:40:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDisplayArticlesEAN()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjDisplayArticlesEAN()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjDisplayArticlesEAN" duration-ms="41783" started-at="2018-12-06T10:40:03Z" description="Verifying Stock Adjustment for Display Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:40:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjDisplayArticlesEAN -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8039" started-at="2018-12-06T10:40:45Z" finished-at="2018-12-06T10:40:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjDisplayArticlesEAN status=SUCCESS method=StockAdjustmentTests.verifyStockAdjDisplayArticlesEAN()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjDisplayArticlesEAN()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="16961" started-at="2018-12-06T10:40:53Z" finished-at="2018-12-06T10:41:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjEAN()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjEAN()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjEAN" duration-ms="16996" started-at="2018-12-06T10:41:10Z" description="Verifying Stock Adjustment" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:41:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjEAN -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8046" started-at="2018-12-06T10:41:27Z" finished-at="2018-12-06T10:41:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjEAN status=SUCCESS method=StockAdjustmentTests.verifyStockAdjEAN()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjEAN()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5035" started-at="2018-12-06T10:41:35Z" finished-at="2018-12-06T10:41:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjLinkedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjLinkedArticles" duration-ms="41703" started-at="2018-12-06T10:41:40Z" description="Verifying Stock Adjustment for linked Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:42:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjLinkedArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8055" started-at="2018-12-06T10:42:21Z" finished-at="2018-12-06T10:42:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjLinkedArticles status=SUCCESS method=StockAdjustmentTests.verifyStockAdjLinkedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="16978" started-at="2018-12-06T10:42:29Z" finished-at="2018-12-06T10:42:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticlesDescription()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjLinkedArticlesDescription()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjLinkedArticlesDescription" duration-ms="34590" started-at="2018-12-06T10:42:46Z" description="Verifying Stock Adjustment for linked Articles - Descrption" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:43:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjLinkedArticlesDescription -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8039" started-at="2018-12-06T10:43:21Z" finished-at="2018-12-06T10:43:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjLinkedArticlesDescription status=SUCCESS method=StockAdjustmentTests.verifyStockAdjLinkedArticlesDescription()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticlesDescription()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17080" started-at="2018-12-06T10:43:29Z" finished-at="2018-12-06T10:43:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticlesEAN()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjLinkedArticlesEAN()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjLinkedArticlesEAN" duration-ms="43532" started-at="2018-12-06T10:43:46Z" description="Verifying Stock Adjustment for linked Articles - EAN" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:44:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjLinkedArticlesEAN -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8055" started-at="2018-12-06T10:44:30Z" finished-at="2018-12-06T10:44:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjLinkedArticlesEAN status=SUCCESS method=StockAdjustmentTests.verifyStockAdjLinkedArticlesEAN()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticlesEAN()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="16706" started-at="2018-12-06T10:44:38Z" finished-at="2018-12-06T10:44:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticlesPLU()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjLinkedArticlesPLU()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjLinkedArticlesPLU" duration-ms="31060" started-at="2018-12-06T10:44:54Z" description="Verifying Stock Adjustment for linked Articles - PLU" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:45:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjLinkedArticlesPLU -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8051" started-at="2018-12-06T10:45:25Z" finished-at="2018-12-06T10:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjLinkedArticlesPLU status=SUCCESS method=StockAdjustmentTests.verifyStockAdjLinkedArticlesPLU()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjLinkedArticlesPLU()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17112" started-at="2018-12-06T10:45:34Z" finished-at="2018-12-06T10:45:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjPLU()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjPLU()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjPLU" duration-ms="17660" started-at="2018-12-06T10:45:51Z" description="Verifying Stock Adjustment" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjPLU -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8048" started-at="2018-12-06T10:46:08Z" finished-at="2018-12-06T10:46:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjPLU status=SUCCESS method=StockAdjustmentTests.verifyStockAdjPLU()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjPLU()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5059" started-at="2018-12-06T10:46:16Z" finished-at="2018-12-06T10:46:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjRandomWeighedArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjRandomWeighedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjRandomWeighedArticles" duration-ms="35993" started-at="2018-12-06T10:46:21Z" description="Verifying Stock Adjustment for Random Weighed Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:46:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjRandomWeighedArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8074" started-at="2018-12-06T10:46:57Z" finished-at="2018-12-06T10:47:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjRandomWeighedArticles status=SUCCESS method=StockAdjustmentTests.verifyStockAdjRandomWeighedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjRandomWeighedArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="16842" started-at="2018-12-06T10:47:05Z" finished-at="2018-12-06T10:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjWeighedArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyStockAdjWeighedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifyStockAdjWeighedArticles" duration-ms="25772" started-at="2018-12-06T10:47:22Z" description="Verifying Stock Adjustment for Weighed Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:47:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStockAdjWeighedArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8063" started-at="2018-12-06T10:47:48Z" finished-at="2018-12-06T10:47:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyStockAdjWeighedArticles status=SUCCESS method=StockAdjustmentTests.verifyStockAdjWeighedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifyStockAdjWeighedArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="17004" started-at="2018-12-06T10:47:56Z" finished-at="2018-12-06T10:48:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupDisplayArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifylookupDisplayArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifylookupDisplayArticles" duration-ms="27140" started-at="2018-12-06T10:48:13Z" description="Verifying Stock Adjustment from lookup for linked Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:48:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifylookupDisplayArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8048" started-at="2018-12-06T10:48:40Z" finished-at="2018-12-06T10:48:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifylookupDisplayArticles status=SUCCESS method=StockAdjustmentTests.verifylookupDisplayArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupDisplayArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5046" started-at="2018-12-06T10:48:48Z" finished-at="2018-12-06T10:48:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupLinkedArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifylookupLinkedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifylookupLinkedArticles" duration-ms="24277" started-at="2018-12-06T10:48:53Z" description="Verifying Stock Adjustment from lookup for linked Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:49:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifylookupLinkedArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8064" started-at="2018-12-06T10:49:18Z" finished-at="2018-12-06T10:49:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifylookupLinkedArticles status=SUCCESS method=StockAdjustmentTests.verifylookupLinkedArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupLinkedArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5049" started-at="2018-12-06T10:49:26Z" finished-at="2018-12-06T10:49:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupRandomWeightArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifylookupRandomWeightArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifylookupRandomWeightArticles" duration-ms="20334" started-at="2018-12-06T10:49:31Z" description="Verifying Stock Adjustment from lookup for Random Weight Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:49:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifylookupRandomWeightArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8043" started-at="2018-12-06T10:49:51Z" finished-at="2018-12-06T10:49:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifylookupRandomWeightArticles status=SUCCESS method=StockAdjustmentTests.verifylookupRandomWeightArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupRandomWeightArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5068" started-at="2018-12-06T10:49:59Z" finished-at="2018-12-06T10:50:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupWeightArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifylookupWeightArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="verifylookupWeightArticles" duration-ms="20147" started-at="2018-12-06T10:50:04Z" description="Verifying Stock Adjustment from lookup for Weight Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:50:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifylookupWeightArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8051" started-at="2018-12-06T10:50:24Z" finished-at="2018-12-06T10:50:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifylookupWeightArticles status=SUCCESS method=StockAdjustmentTests.verifylookupWeightArticles()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.verifylookupWeightArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="setUp" is-config="true" duration-ms="5335" started-at="2018-12-06T10:50:32Z" finished-at="2018-12-06T10:50:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.wareHouseemptyORDERlist()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="wareHouseemptyORDERlist()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="wareHouseemptyORDERlist" duration-ms="31018" started-at="2018-12-06T10:50:38Z" description="check WareHouse Delivery" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:51:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wareHouseemptyORDERlist -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="flushReports" is-config="true" duration-ms="8021" started-at="2018-12-06T10:51:09Z" finished-at="2018-12-06T10:51:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wareHouseemptyORDERlist status=SUCCESS method=StockAdjustmentTests.wareHouseemptyORDERlist()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.StockAdjustmentTests.wareHouseemptyORDERlist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.StockAdjustmentTests@548e6d58]" name="tearDown" is-config="true" duration-ms="8244" started-at="2018-12-06T10:51:17Z" finished-at="2018-12-06T10:51:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- au.wow.ngbomain.tests.StockAdjustmentTests -->
      <class name="au.wow.ngbomain.tests.GoodsMovementTests">
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="loadXMLFile" is-config="true" duration-ms="141" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="7520" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:24:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsDisplay()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsDisplay()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsDisplay" duration-ms="24834" started-at="2018-12-06T10:24:06Z" description="Validating the Sale performed for a Display Set Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:24:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsDisplay -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3063" started-at="2018-12-06T10:24:30Z" finished-at="2018-12-06T10:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsDisplay status=SUCCESS method=GoodsMovementTests.VerifyGoodsDisplay()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsDisplay()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="6533" started-at="2018-12-06T10:24:34Z" finished-at="2018-12-06T10:24:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsDisplayExceptionAdjustment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsDisplayExceptionAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsDisplayExceptionAdjustment" duration-ms="28264" started-at="2018-12-06T10:24:40Z" description="Validating the Stock Adjustment performed for a Display Exception set Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsDisplayExceptionAdjustment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3050" started-at="2018-12-06T10:25:08Z" finished-at="2018-12-06T10:25:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsDisplayExceptionAdjustment status=SUCCESS method=GoodsMovementTests.VerifyGoodsDisplayExceptionAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsDisplayExceptionAdjustment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="19985" started-at="2018-12-06T10:25:11Z" finished-at="2018-12-06T10:25:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsDisplaySetAdjustment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsDisplaySetAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsDisplaySetAdjustment" duration-ms="29238" started-at="2018-12-06T10:25:31Z" description="Validating the Stock Adjustment performed for a Display set Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsDisplaySetAdjustment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3049" started-at="2018-12-06T10:26:01Z" finished-at="2018-12-06T10:26:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsDisplaySetAdjustment status=SUCCESS method=GoodsMovementTests.VerifyGoodsDisplaySetAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsDisplaySetAdjustment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="18487" started-at="2018-12-06T10:26:04Z" finished-at="2018-12-06T10:26:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsHAWAAdjustment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsHAWAAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsHAWAAdjustment" duration-ms="36715" started-at="2018-12-06T10:26:22Z" description="Validating the Stock Adjustment performed for a HAWA Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsHAWAAdjustment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3040" started-at="2018-12-06T10:26:59Z" finished-at="2018-12-06T10:27:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsHAWAAdjustment status=SUCCESS method=GoodsMovementTests.VerifyGoodsHAWAAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsHAWAAdjustment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="19109" started-at="2018-12-06T10:27:02Z" finished-at="2018-12-06T10:27:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTCPBD()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsIBTCPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsIBTCPBD" duration-ms="25976" started-at="2018-12-06T10:27:21Z" description="Validating the IBT performed for a CPBD article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:27:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsIBTCPBD -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3046" started-at="2018-12-06T10:27:47Z" finished-at="2018-12-06T10:27:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsIBTCPBD status=SUCCESS method=GoodsMovementTests.VerifyGoodsIBTCPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTCPBD()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="19194" started-at="2018-12-06T10:27:50Z" finished-at="2018-12-06T10:28:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTDisplayException()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsIBTDisplayException()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsIBTDisplayException" duration-ms="47990" started-at="2018-12-06T10:28:09Z" description="Validating the IBT performed for a Display Exception article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsIBTDisplayException -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3043" started-at="2018-12-06T10:28:57Z" finished-at="2018-12-06T10:29:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsIBTDisplayException status=SUCCESS method=GoodsMovementTests.VerifyGoodsIBTDisplayException()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTDisplayException()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="18929" started-at="2018-12-06T10:29:00Z" finished-at="2018-12-06T10:29:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTHAWA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsIBTHAWA()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsIBTHAWA" duration-ms="44149" started-at="2018-12-06T10:29:19Z" description="Validating the IBT performed for a HAWA article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsIBTHAWA -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3053" started-at="2018-12-06T10:30:03Z" finished-at="2018-12-06T10:30:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsIBTHAWA status=SUCCESS method=GoodsMovementTests.VerifyGoodsIBTHAWA()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTHAWA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="19070" started-at="2018-12-06T10:30:06Z" finished-at="2018-12-06T10:30:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTPBD()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsIBTPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsIBTPBD" duration-ms="44203" started-at="2018-12-06T10:30:25Z" description="Validating the IBT performed for a PBD article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:31:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsIBTPBD -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3049" started-at="2018-12-06T10:31:10Z" finished-at="2018-12-06T10:31:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsIBTPBD status=SUCCESS method=GoodsMovementTests.VerifyGoodsIBTPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTPBD()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="20382" started-at="2018-12-06T10:31:13Z" finished-at="2018-12-06T10:31:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTRandomWeighted()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsIBTRandomWeighted()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsIBTRandomWeighted" duration-ms="45029" started-at="2018-12-06T10:31:33Z" description="Validating the IBT performed for a Random Weighted article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsIBTRandomWeighted -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3071" started-at="2018-12-06T10:32:18Z" finished-at="2018-12-06T10:32:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsIBTRandomWeighted status=SUCCESS method=GoodsMovementTests.VerifyGoodsIBTRandomWeighted()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTRandomWeighted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="18836" started-at="2018-12-06T10:32:21Z" finished-at="2018-12-06T10:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTWeighted()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsIBTWeighted()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsIBTWeighted" duration-ms="46049" started-at="2018-12-06T10:32:40Z" description="Validating the IBT performed for a Weighted article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:33:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsIBTWeighted -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3035" started-at="2018-12-06T10:33:26Z" finished-at="2018-12-06T10:33:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsIBTWeighted status=SUCCESS method=GoodsMovementTests.VerifyGoodsIBTWeighted()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsIBTWeighted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="18393" started-at="2018-12-06T10:33:29Z" finished-at="2018-12-06T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsPBD()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsPBD" duration-ms="23094" started-at="2018-12-06T10:33:47Z" description="Validating the Sale performed for a PBD Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsPBD -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3033" started-at="2018-12-06T10:34:11Z" finished-at="2018-12-06T10:34:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsPBD status=SUCCESS method=GoodsMovementTests.VerifyGoodsPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsPBD()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="6043" started-at="2018-12-06T10:34:14Z" finished-at="2018-12-06T10:34:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVHAWA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsRTVHAWA()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsRTVHAWA" duration-ms="65490" started-at="2018-12-06T10:34:20Z" description="Validating the RTV performed for a HAWA article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsRTVHAWA -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3061" started-at="2018-12-06T10:35:25Z" finished-at="2018-12-06T10:35:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsRTVHAWA status=SUCCESS method=GoodsMovementTests.VerifyGoodsRTVHAWA()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVHAWA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="19182" started-at="2018-12-06T10:35:28Z" finished-at="2018-12-06T10:35:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVLitreArticles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsRTVLitreArticles()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsRTVLitreArticles" duration-ms="56715" started-at="2018-12-06T10:35:47Z" description="Validating the RTV performed for a litre article in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:36:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsRTVLitreArticles -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3019" started-at="2018-12-06T10:36:44Z" finished-at="2018-12-06T10:36:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsRTVLitreArticles status=SUCCESS method=GoodsMovementTests.VerifyGoodsRTVLitreArticles()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVLitreArticles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="18238" started-at="2018-12-06T10:36:47Z" finished-at="2018-12-06T10:37:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVLitreArticlesForOrderableUOM()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsRTVLitreArticlesForOrderableUOM()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsRTVLitreArticlesForOrderableUOM" duration-ms="57109" started-at="2018-12-06T10:37:05Z" description="Validating the RTV performed for a litre articles for Orderable UOM in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:38:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsRTVLitreArticlesForOrderableUOM -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3040" started-at="2018-12-06T10:38:02Z" finished-at="2018-12-06T10:38:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsRTVLitreArticlesForOrderableUOM status=SUCCESS method=GoodsMovementTests.VerifyGoodsRTVLitreArticlesForOrderableUOM()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVLitreArticlesForOrderableUOM()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="18903" started-at="2018-12-06T10:38:06Z" finished-at="2018-12-06T10:38:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVPBD()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsRTVPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsRTVPBD" duration-ms="55322" started-at="2018-12-06T10:38:24Z" description="Validating the RTV performed for a PBD article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:39:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsRTVPBD -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3031" started-at="2018-12-06T10:39:20Z" finished-at="2018-12-06T10:39:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsRTVPBD status=SUCCESS method=GoodsMovementTests.VerifyGoodsRTVPBD()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVPBD()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="19089" started-at="2018-12-06T10:39:23Z" finished-at="2018-12-06T10:39:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVPBDHigherUOM()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsRTVPBDHigherUOM()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsRTVPBDHigherUOM" duration-ms="56539" started-at="2018-12-06T10:39:42Z" description="Validating the RTV performed for a PBD article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsRTVPBDHigherUOM -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3030" started-at="2018-12-06T10:40:38Z" finished-at="2018-12-06T10:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsRTVPBDHigherUOM status=SUCCESS method=GoodsMovementTests.VerifyGoodsRTVPBDHigherUOM()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRTVPBDHigherUOM()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="18644" started-at="2018-12-06T10:40:41Z" finished-at="2018-12-06T10:41:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRWT()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsRWT()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsRWT" duration-ms="21163" started-at="2018-12-06T10:41:00Z" description="Validating the Sale performed for a RWT Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:41:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsRWT -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3054" started-at="2018-12-06T10:41:21Z" finished-at="2018-12-06T10:41:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsRWT status=SUCCESS method=GoodsMovementTests.VerifyGoodsRWT()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRWT()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="6378" started-at="2018-12-06T10:41:24Z" finished-at="2018-12-06T10:41:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRWTAdjustment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsRWTAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsRWTAdjustment" duration-ms="30096" started-at="2018-12-06T10:41:31Z" description="Validating the Stock Adjustment performed for a RWT Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:42:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsRWTAdjustment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3032" started-at="2018-12-06T10:42:01Z" finished-at="2018-12-06T10:42:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsRWTAdjustment status=SUCCESS method=GoodsMovementTests.VerifyGoodsRWTAdjustment()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsRWTAdjustment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="17968" started-at="2018-12-06T10:42:04Z" finished-at="2018-12-06T10:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSales()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsSales()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsSales" duration-ms="20089" started-at="2018-12-06T10:42:22Z" description="Validating the Sale performed for a Sales set Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:42:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsSales -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3034" started-at="2018-12-06T10:42:42Z" finished-at="2018-12-06T10:42:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsSales status=SUCCESS method=GoodsMovementTests.VerifyGoodsSales()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSales()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="6344" started-at="2018-12-06T10:42:45Z" finished-at="2018-12-06T10:42:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSalesHAWA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsSalesHAWA()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsSalesHAWA" duration-ms="20621" started-at="2018-12-06T10:42:51Z" description="Validating the Sale performed for a HAWA Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:43:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsSalesHAWA -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3019" started-at="2018-12-06T10:43:12Z" finished-at="2018-12-06T10:43:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsSalesHAWA status=SUCCESS method=GoodsMovementTests.VerifyGoodsSalesHAWA()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSalesHAWA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="6062" started-at="2018-12-06T10:43:15Z" finished-at="2018-12-06T10:43:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSalesSetAdjustmentforKG()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsSalesSetAdjustmentforKG()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsSalesSetAdjustmentforKG" duration-ms="28870" started-at="2018-12-06T10:43:21Z" description="Validating the Stock Adjustment performed for a Sales set Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:43:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsSalesSetAdjustmentforKG -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3062" started-at="2018-12-06T10:43:50Z" finished-at="2018-12-06T10:43:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsSalesSetAdjustmentforKG status=SUCCESS method=GoodsMovementTests.VerifyGoodsSalesSetAdjustmentforKG()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSalesSetAdjustmentforKG()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="setUp" is-config="true" duration-ms="17812" started-at="2018-12-06T10:43:53Z" finished-at="2018-12-06T10:44:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSalesWeighted()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="VerifyGoodsSalesWeighted()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="VerifyGoodsSalesWeighted" duration-ms="18467" started-at="2018-12-06T10:44:11Z" description="Validating the Sale performed for a Weighted Article type in Goods Movement Summary Report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:44:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGoodsSalesWeighted -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="flushReports" is-config="true" duration-ms="3064" started-at="2018-12-06T10:44:29Z" finished-at="2018-12-06T10:44:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGoodsSalesWeighted status=SUCCESS method=GoodsMovementTests.VerifyGoodsSalesWeighted()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GoodsMovementTests.VerifyGoodsSalesWeighted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.GoodsMovementTests@a1cdc6d]" name="tearDown" is-config="true" duration-ms="2114" started-at="2018-12-06T10:44:32Z" finished-at="2018-12-06T10:44:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- au.wow.ngbomain.tests.GoodsMovementTests -->
      <class name="au.wow.ngbomain.tests.DSCandPLUReportTests">
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="loadXMLFile" is-config="true" duration-ms="140" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="8910" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportAllDepartments()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDSCReportAllDepartments()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyDSCReportAllDepartments" duration-ms="87656" started-at="2018-12-06T10:24:07Z" description="Verifying Daily Stock Check Report for All Departments" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:25:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDSCReportAllDepartments -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3047" started-at="2018-12-06T10:25:35Z" finished-at="2018-12-06T10:25:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDSCReportAllDepartments status=SUCCESS method=DSCandPLUReportTests.verifyDSCReportAllDepartments()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportAllDepartments()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7305" started-at="2018-12-06T10:25:38Z" finished-at="2018-12-06T10:25:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportLitreArticle()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDSCReportLitreArticle()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyDSCReportLitreArticle" duration-ms="23637" started-at="2018-12-06T10:25:45Z" description="Verifying Daily Stock Check Report for Litre Articles " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDSCReportLitreArticle -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3046" started-at="2018-12-06T10:26:09Z" finished-at="2018-12-06T10:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDSCReportLitreArticle status=SUCCESS method=DSCandPLUReportTests.verifyDSCReportLitreArticle()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportLitreArticle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7064" started-at="2018-12-06T10:26:12Z" finished-at="2018-12-06T10:26:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportMeatDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDSCReportMeatDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyDSCReportMeatDepartment" duration-ms="22207" started-at="2018-12-06T10:26:19Z" description="Verifying Daily Stock Check Report for Meat Departments- Random weight, weight and Normal articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDSCReportMeatDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3055" started-at="2018-12-06T10:26:41Z" finished-at="2018-12-06T10:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDSCReportMeatDepartment status=SUCCESS method=DSCandPLUReportTests.verifyDSCReportMeatDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportMeatDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7078" started-at="2018-12-06T10:26:44Z" finished-at="2018-12-06T10:26:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportMultipleReasonCode()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDSCReportMultipleReasonCode()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyDSCReportMultipleReasonCode" duration-ms="82403" started-at="2018-12-06T10:26:51Z" description="Verifying Daily Stock Check Report for Articles with Multiple Reason Codes" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDSCReportMultipleReasonCode -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3021" started-at="2018-12-06T10:28:14Z" finished-at="2018-12-06T10:28:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDSCReportMultipleReasonCode status=SUCCESS method=DSCandPLUReportTests.verifyDSCReportMultipleReasonCode()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportMultipleReasonCode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7495" started-at="2018-12-06T10:28:17Z" finished-at="2018-12-06T10:28:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportPDBArticle()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDSCReportPDBArticle()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyDSCReportPDBArticle" duration-ms="23234" started-at="2018-12-06T10:28:24Z" description="Verifying Daily Stock Check Report for PDB Articles " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDSCReportPDBArticle -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3056" started-at="2018-12-06T10:28:47Z" finished-at="2018-12-06T10:28:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDSCReportPDBArticle status=SUCCESS method=DSCandPLUReportTests.verifyDSCReportPDBArticle()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportPDBArticle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7039" started-at="2018-12-06T10:28:50Z" finished-at="2018-12-06T10:28:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportPartialDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDSCReportPartialDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyDSCReportPartialDepartment" duration-ms="35725" started-at="2018-12-06T10:28:57Z" description="Verifying Daily Stock Check Report for PDB Articles " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDSCReportPartialDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3008" started-at="2018-12-06T10:29:33Z" finished-at="2018-12-06T10:29:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDSCReportPartialDepartment status=SUCCESS method=DSCandPLUReportTests.verifyDSCReportPartialDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyDSCReportPartialDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7075" started-at="2018-12-06T10:29:36Z" finished-at="2018-12-06T10:29:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportAllDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPLUReportAllDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyPLUReportAllDepartment" duration-ms="39767" started-at="2018-12-06T10:29:43Z" description="Verifying PLU Report for All Department " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPLUReportAllDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3027" started-at="2018-12-06T10:30:23Z" finished-at="2018-12-06T10:30:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPLUReportAllDepartment status=SUCCESS method=DSCandPLUReportTests.verifyPLUReportAllDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportAllDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7442" started-at="2018-12-06T10:30:26Z" finished-at="2018-12-06T10:30:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportDeletedPLU()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPLUReportDeletedPLU()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyPLUReportDeletedPLU" duration-ms="26747" started-at="2018-12-06T10:30:33Z" description="Verifying PLU Report for deleted PLU" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:31:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPLUReportDeletedPLU -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3062" started-at="2018-12-06T10:31:00Z" finished-at="2018-12-06T10:31:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPLUReportDeletedPLU status=SUCCESS method=DSCandPLUReportTests.verifyPLUReportDeletedPLU()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportDeletedPLU()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7312" started-at="2018-12-06T10:31:03Z" finished-at="2018-12-06T10:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportForArticleNumber()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPLUReportForArticleNumber()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyPLUReportForArticleNumber" duration-ms="50389" started-at="2018-12-06T10:31:11Z" description="Verifying PLU Report for Article num and Desc " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPLUReportForArticleNumber -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3047" started-at="2018-12-06T10:32:01Z" finished-at="2018-12-06T10:32:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPLUReportForArticleNumber status=SUCCESS method=DSCandPLUReportTests.verifyPLUReportForArticleNumber()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportForArticleNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7508" started-at="2018-12-06T10:32:04Z" finished-at="2018-12-06T10:32:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportForArticlePLU()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPLUReportForArticlePLU()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyPLUReportForArticlePLU" duration-ms="42169" started-at="2018-12-06T10:32:11Z" description="Verifying PLU Report for Article PLU Code " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:32:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPLUReportForArticlePLU -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3044" started-at="2018-12-06T10:32:54Z" finished-at="2018-12-06T10:32:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPLUReportForArticlePLU status=SUCCESS method=DSCandPLUReportTests.verifyPLUReportForArticlePLU()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportForArticlePLU()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7032" started-at="2018-12-06T10:32:57Z" finished-at="2018-12-06T10:33:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportMultiDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPLUReportMultiDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyPLUReportMultiDepartment" duration-ms="27385" started-at="2018-12-06T10:33:04Z" description="Verifying PLU Report for Multiple Departments" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:33:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPLUReportMultiDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3031" started-at="2018-12-06T10:33:31Z" finished-at="2018-12-06T10:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPLUReportMultiDepartment status=SUCCESS method=DSCandPLUReportTests.verifyPLUReportMultiDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportMultiDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7108" started-at="2018-12-06T10:33:34Z" finished-at="2018-12-06T10:33:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportPartialDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPLUReportPartialDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyPLUReportPartialDepartment" duration-ms="26126" started-at="2018-12-06T10:33:41Z" description="Verifying PLU Report for Partial Department " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPLUReportPartialDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3017" started-at="2018-12-06T10:34:07Z" finished-at="2018-12-06T10:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPLUReportPartialDepartment status=SUCCESS method=DSCandPLUReportTests.verifyPLUReportPartialDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportPartialDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="setUp" is-config="true" duration-ms="7364" started-at="2018-12-06T10:34:10Z" finished-at="2018-12-06T10:34:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportPrimaryDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPLUReportPrimaryDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="verifyPLUReportPrimaryDepartment" duration-ms="20581" started-at="2018-12-06T10:34:18Z" description="Verifying PLU Report for Primary Departments" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPLUReportPrimaryDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="flushReports" is-config="true" duration-ms="3031" started-at="2018-12-06T10:34:38Z" finished-at="2018-12-06T10:34:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPLUReportPrimaryDepartment status=SUCCESS method=DSCandPLUReportTests.verifyPLUReportPrimaryDepartment()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.DSCandPLUReportTests.verifyPLUReportPrimaryDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.DSCandPLUReportTests@6a2b953e]" name="tearDown" is-config="true" duration-ms="3142" started-at="2018-12-06T10:34:41Z" finished-at="2018-12-06T10:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- au.wow.ngbomain.tests.DSCandPLUReportTests -->
      <class name="au.wow.ngbomain.tests.oocreporttest">
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="loadXMLFile" is-config="true" duration-ms="140" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="7114" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:24:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.category()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="category()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="category" duration-ms="21428" started-at="2018-12-06T10:24:05Z" description="Multiple departments or Sub-categories- Category " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- category -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2125" started-at="2018-12-06T10:24:27Z" finished-at="2018-12-06T10:24:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=category status=SUCCESS method=oocreporttest.category()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.category()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6113" started-at="2018-12-06T10:24:29Z" finished-at="2018-12-06T10:24:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.datediscrepancy()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="datediscrepancy()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="datediscrepancy" duration-ms="15597" started-at="2018-12-06T10:24:35Z" description="Date should not exceed 28 days" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:24:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- datediscrepancy -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2058" started-at="2018-12-06T10:24:50Z" finished-at="2018-12-06T10:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=datediscrepancy status=SUCCESS method=oocreporttest.datediscrepancy()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.datediscrepancy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6308" started-at="2018-12-06T10:24:53Z" finished-at="2018-12-06T10:24:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.dateselectiondiscrepancy()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="dateselectiondiscrepancy()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="dateselectiondiscrepancy" duration-ms="27037" started-at="2018-12-06T10:24:59Z" description="Verifying Date Discrepancy Criteria" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:25:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateselectiondiscrepancy -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2049" started-at="2018-12-06T10:25:26Z" finished-at="2018-12-06T10:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dateselectiondiscrepancy status=SUCCESS method=oocreporttest.dateselectiondiscrepancy()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.dateselectiondiscrepancy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="18808" started-at="2018-12-06T10:25:28Z" finished-at="2018-12-06T10:25:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.multdept() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multdept()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="multdept" duration-ms="17289" started-at="2018-12-06T10:25:47Z" description="Multiple departments or Sub-categories- Department " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multdept -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2066" started-at="2018-12-06T10:26:04Z" finished-at="2018-12-06T10:26:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=multdept status=SUCCESS method=oocreporttest.multdept()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.multdept() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="7010" started-at="2018-12-06T10:26:06Z" finished-at="2018-12-06T10:26:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.nodepartment() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nodepartment()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="nodepartment" duration-ms="17639" started-at="2018-12-06T10:26:13Z" description="No Department selected" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nodepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2035" started-at="2018-12-06T10:26:31Z" finished-at="2018-12-06T10:26:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nodepartment status=SUCCESS method=oocreporttest.nodepartment()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.nodepartment() throws java.sql.SQLException,java.io.IOException,java.awt.AWTException,java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6069" started-at="2018-12-06T10:26:33Z" finished-at="2018-12-06T10:26:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.nodepartmentselect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nodepartmentselect()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="nodepartmentselect" duration-ms="16026" started-at="2018-12-06T10:26:39Z" description="No Department selected" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nodepartmentselect -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2047" started-at="2018-12-06T10:26:55Z" finished-at="2018-12-06T10:26:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nodepartmentselect status=SUCCESS method=oocreporttest.nodepartmentselect()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.nodepartmentselect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6363" started-at="2018-12-06T10:26:57Z" finished-at="2018-12-06T10:27:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.primarydepartment1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="primarydepartment1()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="primarydepartment1" duration-ms="27762" started-at="2018-12-06T10:27:03Z" description="Verifying Primary Department" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:27:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primarydepartment1 -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2042" started-at="2018-12-06T10:27:31Z" finished-at="2018-12-06T10:27:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=primarydepartment1 status=SUCCESS method=oocreporttest.primarydepartment1()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.primarydepartment1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="18708" started-at="2018-12-06T10:27:33Z" finished-at="2018-12-06T10:27:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.segment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="segment()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="segment" duration-ms="33278" started-at="2018-12-06T10:27:52Z" description="Multiple departments or Sub-categories- Segment " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- segment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2051" started-at="2018-12-06T10:28:25Z" finished-at="2018-12-06T10:28:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=segment status=SUCCESS method=oocreporttest.segment()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.segment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6440" started-at="2018-12-06T10:28:27Z" finished-at="2018-12-06T10:28:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.subcategory()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subcategory()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="subcategory" duration-ms="16611" started-at="2018-12-06T10:28:34Z" description="Multiple departments or Sub-categories- Subcategory " depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subcategory -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2049" started-at="2018-12-06T10:28:50Z" finished-at="2018-12-06T10:28:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=subcategory status=SUCCESS method=oocreporttest.subcategory()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.subcategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6046" started-at="2018-12-06T10:28:52Z" finished-at="2018-12-06T10:28:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifyactiontodaycount()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyactiontodaycount()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="verifyactiontodaycount" duration-ms="15188" started-at="2018-12-06T10:28:58Z" description="Verifying Action today count" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyactiontodaycount -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2037" started-at="2018-12-06T10:29:13Z" finished-at="2018-12-06T10:29:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyactiontodaycount status=SUCCESS method=oocreporttest.verifyactiontodaycount()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifyactiontodaycount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="18324" started-at="2018-12-06T10:29:16Z" finished-at="2018-12-06T10:29:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifypagination()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifypagination()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="verifypagination" duration-ms="17291" started-at="2018-12-06T10:29:34Z" description="Verifying Full Dept" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:29:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifypagination -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2020" started-at="2018-12-06T10:29:51Z" finished-at="2018-12-06T10:29:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifypagination status=SUCCESS method=oocreporttest.verifypagination()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifypagination()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6096" started-at="2018-12-06T10:29:53Z" finished-at="2018-12-06T10:29:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifyprintreport()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyprintreport()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="verifyprintreport" duration-ms="39613" started-at="2018-12-06T10:29:59Z" description="Verify Report Print" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyprintreport -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2040" started-at="2018-12-06T10:30:39Z" finished-at="2018-12-06T10:30:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyprintreport status=SUCCESS method=oocreporttest.verifyprintreport()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifyprintreport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="setUp" is-config="true" duration-ms="6337" started-at="2018-12-06T10:30:41Z" finished-at="2018-12-06T10:30:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifyreportpartial()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyreportpartial()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="verifyreportpartial" duration-ms="131100" started-at="2018-12-06T10:30:47Z" description="Verifying Partial Dept" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:32:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyreportpartial -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="flushReports" is-config="true" duration-ms="2033" started-at="2018-12-06T10:32:58Z" finished-at="2018-12-06T10:33:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyreportpartial status=SUCCESS method=oocreporttest.verifyreportpartial()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.oocreporttest.verifyreportpartial()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.oocreporttest@2f465398]" name="tearDown" is-config="true" duration-ms="3108" started-at="2018-12-06T10:33:00Z" finished-at="2018-12-06T10:33:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- au.wow.ngbomain.tests.oocreporttest -->
      <class name="au.wow.ngbomain.tests.GapscanReportTests">
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="loadXMLFile" is-config="true" duration-ms="78" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="9050" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.ActionrequiredAlldepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ActionrequiredAlldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="ActionrequiredAlldepartment" duration-ms="40970" started-at="2018-12-06T10:24:07Z" description="Action Required-All Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActionrequiredAlldepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2076" started-at="2018-12-06T10:24:48Z" finished-at="2018-12-06T10:24:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ActionrequiredAlldepartment status=SUCCESS method=GapscanReportTests.ActionrequiredAlldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.ActionrequiredAlldepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="20903" started-at="2018-12-06T10:24:50Z" finished-at="2018-12-06T10:25:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.actionrequiredpartialdepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="actionrequiredpartialdepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="actionrequiredpartialdepartment" duration-ms="39707" started-at="2018-12-06T10:25:11Z" description="Action Required-Partial Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:25:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- actionrequiredpartialdepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2048" started-at="2018-12-06T10:25:51Z" finished-at="2018-12-06T10:25:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=actionrequiredpartialdepartment status=SUCCESS method=GapscanReportTests.actionrequiredpartialdepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.actionrequiredpartialdepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="19785" started-at="2018-12-06T10:25:53Z" finished-at="2018-12-06T10:26:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.alldepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="alldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="alldepartment" duration-ms="32122" started-at="2018-12-06T10:26:13Z" description="All Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:26:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alldepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2017" started-at="2018-12-06T10:26:45Z" finished-at="2018-12-06T10:26:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alldepartment status=SUCCESS method=GapscanReportTests.alldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.alldepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="7357" started-at="2018-12-06T10:26:47Z" finished-at="2018-12-06T10:26:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.bothalldepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="bothalldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="bothalldepartment" duration-ms="38901" started-at="2018-12-06T10:26:54Z" description="Both-All Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:27:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bothalldepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2037" started-at="2018-12-06T10:27:33Z" finished-at="2018-12-06T10:27:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bothalldepartment status=SUCCESS method=GapscanReportTests.bothalldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.bothalldepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="20001" started-at="2018-12-06T10:27:35Z" finished-at="2018-12-06T10:27:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.bothpartialdepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="bothpartialdepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="bothpartialdepartment" duration-ms="38472" started-at="2018-12-06T10:27:55Z" description="Both-Partial Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bothpartialdepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2019" started-at="2018-12-06T10:28:34Z" finished-at="2018-12-06T10:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bothpartialdepartment status=SUCCESS method=GapscanReportTests.bothpartialdepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.bothpartialdepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="19830" started-at="2018-12-06T10:28:36Z" finished-at="2018-12-06T10:28:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.bothprimarydepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="bothprimarydepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="bothprimarydepartment" duration-ms="71412" started-at="2018-12-06T10:28:55Z" description="Both-Primary Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bothprimarydepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2030" started-at="2018-12-06T10:30:07Z" finished-at="2018-12-06T10:30:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bothprimarydepartment status=SUCCESS method=GapscanReportTests.bothprimarydepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.bothprimarydepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="7413" started-at="2018-12-06T10:30:09Z" finished-at="2018-12-06T10:30:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.partialdepartmentonly()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="partialdepartmentonly()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="partialdepartmentonly" duration-ms="38576" started-at="2018-12-06T10:30:16Z" description="Partial-Department-Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:30:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partialdepartmentonly -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2032" started-at="2018-12-06T10:30:55Z" finished-at="2018-12-06T10:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=partialdepartmentonly status=SUCCESS method=GapscanReportTests.partialdepartmentonly()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.partialdepartmentonly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="19518" started-at="2018-12-06T10:30:57Z" finished-at="2018-12-06T10:31:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.partialdepartmentreviewonly()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="partialdepartmentreviewonly()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="partialdepartmentreviewonly" duration-ms="38007" started-at="2018-12-06T10:31:16Z" description="Partial Department Reivewonly Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:31:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partialdepartmentreviewonly -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2048" started-at="2018-12-06T10:31:54Z" finished-at="2018-12-06T10:31:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=partialdepartmentreviewonly status=SUCCESS method=GapscanReportTests.partialdepartmentreviewonly()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.partialdepartmentreviewonly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="18451" started-at="2018-12-06T10:31:56Z" finished-at="2018-12-06T10:32:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.primarydepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="primarydepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="primarydepartment" duration-ms="66132" started-at="2018-12-06T10:32:15Z" description="primary Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:33:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- primarydepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2056" started-at="2018-12-06T10:33:21Z" finished-at="2018-12-06T10:33:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=primarydepartment status=SUCCESS method=GapscanReportTests.primarydepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.primarydepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="7507" started-at="2018-12-06T10:33:23Z" finished-at="2018-12-06T10:33:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.printreport()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printreport()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="printreport" duration-ms="30717" started-at="2018-12-06T10:33:31Z" description="Verify Print report" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printreport -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2045" started-at="2018-12-06T10:34:01Z" finished-at="2018-12-06T10:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=printreport status=SUCCESS method=GapscanReportTests.printreport()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.printreport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="7035" started-at="2018-12-06T10:34:03Z" finished-at="2018-12-06T10:34:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.reviewonlyalldepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="reviewonlyalldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="reviewonlyalldepartment" duration-ms="80160" started-at="2018-12-06T10:34:10Z" description="Review Only-All Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:35:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reviewonlyalldepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2049" started-at="2018-12-06T10:35:31Z" finished-at="2018-12-06T10:35:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reviewonlyalldepartment status=SUCCESS method=GapscanReportTests.reviewonlyalldepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.reviewonlyalldepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="setUp" is-config="true" duration-ms="7332" started-at="2018-12-06T10:35:33Z" finished-at="2018-12-06T10:35:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.reviewonlypartialdepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="reviewonlypartialdepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="reviewonlypartialdepartment" duration-ms="36680" started-at="2018-12-06T10:35:40Z" description="Review only-Partial Department Verification" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:36:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reviewonlypartialdepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="flushReports" is-config="true" duration-ms="2046" started-at="2018-12-06T10:36:17Z" finished-at="2018-12-06T10:36:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reviewonlypartialdepartment status=SUCCESS method=GapscanReportTests.reviewonlypartialdepartment()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.GapscanReportTests.reviewonlypartialdepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.GapscanReportTests@313b2ea6]" name="tearDown" is-config="true" duration-ms="3128" started-at="2018-12-06T10:36:19Z" finished-at="2018-12-06T10:36:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- au.wow.ngbomain.tests.GapscanReportTests -->
      <class name="au.wow.ngbomain.tests.InventoryReportTests">
        <test-method status="PASS" signature="loadXMLFile()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="loadXMLFile" is-config="true" duration-ms="156" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadXMLFile -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="4864" started-at="2018-12-06T10:23:58Z" finished-at="2018-12-06T10:24:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDeletedcheckbox()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDeletedcheckbox()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyDeletedcheckbox" duration-ms="113861" started-at="2018-12-06T10:24:03Z" description="Verify whether user can select Deleted, on Promotion and Non PI Articles" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:25:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeletedcheckbox -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="31" started-at="2018-12-06T10:25:57Z" finished-at="2018-12-06T10:25:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeletedcheckbox status=SUCCESS method=InventoryReportTests.verifyDeletedcheckbox()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDeletedcheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5373" started-at="2018-12-06T10:25:57Z" finished-at="2018-12-06T10:26:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDifferentSOSMPLReport()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDifferentSOSMPLReport()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyDifferentSOSMPLReport" duration-ms="126544" started-at="2018-12-06T10:26:02Z" description="Verify whether user is able to generate MPL report for different source of supply" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:28:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDifferentSOSMPLReport -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="16" started-at="2018-12-06T10:28:09Z" finished-at="2018-12-06T10:28:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDifferentSOSMPLReport status=SUCCESS method=InventoryReportTests.verifyDifferentSOSMPLReport()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDifferentSOSMPLReport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5120" started-at="2018-12-06T10:28:09Z" finished-at="2018-12-06T10:28:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDifferentSOSSOHReport()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDifferentSOSSOHReport()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyDifferentSOSSOHReport" duration-ms="94394" started-at="2018-12-06T10:28:14Z" description="Verify whether user is able to generate SOH report for different source of supply" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:29:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDifferentSOSSOHReport -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="31" started-at="2018-12-06T10:29:48Z" finished-at="2018-12-06T10:29:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDifferentSOSSOHReport status=SUCCESS method=InventoryReportTests.verifyDifferentSOSSOHReport()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDifferentSOSSOHReport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5503" started-at="2018-12-06T10:29:48Z" finished-at="2018-12-06T10:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDifferentSOSSOH_MPLReport()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDifferentSOSSOH_MPLReport()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyDifferentSOSSOH_MPLReport" duration-ms="123895" started-at="2018-12-06T10:29:54Z" description="Verify whether user is able to generate SOH &amp; MPL report for different source of supply" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDifferentSOSSOH_MPLReport -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="16" started-at="2018-12-06T10:31:58Z" finished-at="2018-12-06T10:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDifferentSOSSOH_MPLReport status=SUCCESS method=InventoryReportTests.verifyDifferentSOSSOH_MPLReport()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyDifferentSOSSOH_MPLReport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5347" started-at="2018-12-06T10:31:58Z" finished-at="2018-12-06T10:32:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportAdditonalCriteriaSOH()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyInventoryReportAdditonalCriteriaSOH()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyInventoryReportAdditonalCriteriaSOH" duration-ms="76591" started-at="2018-12-06T10:32:03Z" description="Verifying Inventory Report with SOH &amp; MPL and Additional criteria SOH" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:33:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryReportAdditonalCriteriaSOH -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="31" started-at="2018-12-06T10:33:20Z" finished-at="2018-12-06T10:33:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInventoryReportAdditonalCriteriaSOH status=SUCCESS method=InventoryReportTests.verifyInventoryReportAdditonalCriteriaSOH()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportAdditonalCriteriaSOH()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5636" started-at="2018-12-06T10:33:20Z" finished-at="2018-12-06T10:33:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportMPL()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyInventoryReportMPL()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyInventoryReportMPL" duration-ms="22006" started-at="2018-12-06T10:33:25Z" description="Verifying Inventory Report with MPL and Primary deparment Criteria" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryReportMPL -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="31" started-at="2018-12-06T10:33:47Z" finished-at="2018-12-06T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInventoryReportMPL status=SUCCESS method=InventoryReportTests.verifyInventoryReportMPL()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportMPL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5367" started-at="2018-12-06T10:33:47Z" finished-at="2018-12-06T10:33:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportMultiDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyInventoryReportMultiDepartment()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyInventoryReportMultiDepartment" duration-ms="31731" started-at="2018-12-06T10:33:53Z" description="Verifying Inventory Report with SOH &amp; MPL and multi deparment Criteria" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryReportMultiDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="48" started-at="2018-12-06T10:34:25Z" finished-at="2018-12-06T10:34:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInventoryReportMultiDepartment status=SUCCESS method=InventoryReportTests.verifyInventoryReportMultiDepartment()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportMultiDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5032" started-at="2018-12-06T10:34:25Z" finished-at="2018-12-06T10:34:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOH()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyInventoryReportSOH()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyInventoryReportSOH" duration-ms="21482" started-at="2018-12-06T10:34:30Z" description="Verifying Inventory Report with SOH and Primary deparment Criteria" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:34:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryReportSOH -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="32" started-at="2018-12-06T10:34:51Z" finished-at="2018-12-06T10:34:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInventoryReportSOH status=SUCCESS method=InventoryReportTests.verifyInventoryReportSOH()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOH()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5586" started-at="2018-12-06T10:34:51Z" finished-at="2018-12-06T10:34:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOH_MPL_AllDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyInventoryReportSOH_MPL_AllDepartment()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyInventoryReportSOH_MPL_AllDepartment" duration-ms="96120" started-at="2018-12-06T10:34:57Z" description="Verifying Inventory Report with SOH &amp; MPL and all deparment Criteria" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:36:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryReportSOH_MPL_AllDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="16" started-at="2018-12-06T10:36:33Z" finished-at="2018-12-06T10:36:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInventoryReportSOH_MPL_AllDepartment status=SUCCESS method=InventoryReportTests.verifyInventoryReportSOH_MPL_AllDepartment()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOH_MPL_AllDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5328" started-at="2018-12-06T10:36:33Z" finished-at="2018-12-06T10:36:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOH_MPL_PartialDepartment()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyInventoryReportSOH_MPL_PartialDepartment()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyInventoryReportSOH_MPL_PartialDepartment" duration-ms="46666" started-at="2018-12-06T10:36:38Z" description="Verifying Inventory Report with SOH &amp; MPL and partial deparment Criteria" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:37:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryReportSOH_MPL_PartialDepartment -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="15" started-at="2018-12-06T10:37:25Z" finished-at="2018-12-06T10:37:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInventoryReportSOH_MPL_PartialDepartment status=SUCCESS method=InventoryReportTests.verifyInventoryReportSOH_MPL_PartialDepartment()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOH_MPL_PartialDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5316" started-at="2018-12-06T10:37:25Z" finished-at="2018-12-06T10:37:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOHandMPL()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyInventoryReportSOHandMPL()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyInventoryReportSOHandMPL" duration-ms="65320" started-at="2018-12-06T10:37:30Z" description="Verifying Inventory Report with SOH &amp; MPL and Primary deparment Criteria" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:38:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryReportSOHandMPL -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="17" started-at="2018-12-06T10:38:35Z" finished-at="2018-12-06T10:38:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInventoryReportSOHandMPL status=SUCCESS method=InventoryReportTests.verifyInventoryReportSOHandMPL()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyInventoryReportSOHandMPL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5077" started-at="2018-12-06T10:38:36Z" finished-at="2018-12-06T10:38:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyLastSoldDate()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyLastSoldDate()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyLastSoldDate" duration-ms="63153" started-at="2018-12-06T10:38:41Z" description="Verify whether date format value is displayed correctly" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:39:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastSoldDate -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="17" started-at="2018-12-06T10:39:44Z" finished-at="2018-12-06T10:39:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastSoldDate status=SUCCESS method=InventoryReportTests.verifyLastSoldDate()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyLastSoldDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5318" started-at="2018-12-06T10:39:44Z" finished-at="2018-12-06T10:39:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyPBDUOM()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPBDUOM()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyPBDUOM" duration-ms="26804" started-at="2018-12-06T10:39:49Z" description="Verify whether PBD articles are getting displayed with 3 UOM" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:40:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPBDUOM -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="31" started-at="2018-12-06T10:40:16Z" finished-at="2018-12-06T10:40:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPBDUOM status=SUCCESS method=InventoryReportTests.verifyPBDUOM()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyPBDUOM()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5066" started-at="2018-12-06T10:40:16Z" finished-at="2018-12-06T10:40:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyPrintReportwithSeasonalActivity()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPrintReportwithSeasonalActivity()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyPrintReportwithSeasonalActivity" duration-ms="76604" started-at="2018-12-06T10:40:21Z" description="Verify whether user is able to print report by giving seasonal activity" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:41:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrintReportwithSeasonalActivity -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="17" started-at="2018-12-06T10:41:38Z" finished-at="2018-12-06T10:41:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrintReportwithSeasonalActivity status=SUCCESS method=InventoryReportTests.verifyPrintReportwithSeasonalActivity()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyPrintReportwithSeasonalActivity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5092" started-at="2018-12-06T10:41:38Z" finished-at="2018-12-06T10:41:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyPrintReportwithoutSeasonalActivity()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyPrintReportwithoutSeasonalActivity()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifyPrintReportwithoutSeasonalActivity" duration-ms="116789" started-at="2018-12-06T10:41:43Z" description="Verify whether user is able to print report without giving seasonal activity" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:43:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrintReportwithoutSeasonalActivity -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="16" started-at="2018-12-06T10:43:39Z" finished-at="2018-12-06T10:43:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrintReportwithoutSeasonalActivity status=SUCCESS method=InventoryReportTests.verifyPrintReportwithoutSeasonalActivity()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifyPrintReportwithoutSeasonalActivity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5391" started-at="2018-12-06T10:43:40Z" finished-at="2018-12-06T10:43:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifySITSOO()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifySITSOO()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifySITSOO" duration-ms="109481" started-at="2018-12-06T10:43:45Z" description="Verify whether SIT, SOO and days on hand are displayed correctly" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySITSOO -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="31" started-at="2018-12-06T10:45:34Z" finished-at="2018-12-06T10:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySITSOO status=SUCCESS method=InventoryReportTests.verifySITSOO()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifySITSOO()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5046" started-at="2018-12-06T10:45:34Z" finished-at="2018-12-06T10:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifySohDays()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifySohDays()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifySohDays" duration-ms="93525" started-at="2018-12-06T10:45:39Z" description="Verify whether user is able to enter only till 28 days" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:47:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySohDays -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="17" started-at="2018-12-06T10:47:13Z" finished-at="2018-12-06T10:47:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySohDays status=SUCCESS method=InventoryReportTests.verifySohDays()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifySohDays()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="setUp" is-config="true" duration-ms="5289" started-at="2018-12-06T10:47:13Z" finished-at="2018-12-06T10:47:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifySohValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1cbb87f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifySohValue()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="verifySohValue" duration-ms="110309" started-at="2018-12-06T10:47:18Z" description="Verify whether SOH value is displayed in proper format" depends-on-methods="au.wow.ngbomain.tests.Sampletest.check" finished-at="2018-12-06T10:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySohValue -->
        <test-method status="PASS" signature="flushReports(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="flushReports" is-config="true" duration-ms="17" started-at="2018-12-06T10:49:09Z" finished-at="2018-12-06T10:49:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySohValue status=SUCCESS method=InventoryReportTests.verifySohValue()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void au.wow.ngbomain.tests.InventoryReportTests.verifySohValue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:au.wow.ngbomain.tests.InventoryReportTests@623a8092]" name="tearDown" is-config="true" duration-ms="78" started-at="2018-12-06T10:49:09Z" finished-at="2018-12-06T10:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- au.wow.ngbomain.tests.InventoryReportTests -->
    </test> <!-- POC_tests -->
  </suite> <!-- StoresCentral_TestSuite -->
</testng-results>
