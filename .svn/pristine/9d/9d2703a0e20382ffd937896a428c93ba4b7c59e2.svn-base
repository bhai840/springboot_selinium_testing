package au.wow.ngbomain.tests;

import java.awt.AWTException;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Method;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.PageFactory;
import org.testng.ITestContext;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;

import au.wow.ngbo.utils.BasePage;
import au.wow.ngbo.utils.CustomExtentReports;
import au.wow.ngbo.utils.SQLWrapper;
import au.wow.ngbo.utils.TestBase;
import au.wow.ngbo.utils.TestContext;
import au.wow.ngbo.utils.TestStatus;
import au.wow.ngbo.utils.XMLDataReader;
//import au.wow.ngbomain.objects.ArticleDetailsObjects;
//import au.wow.ngbomain.objects.ArticleLookUpObjects;
//import au.wow.ngbomain.objects.EnhancedArticleLookUpObjects;
import au.wow.ngbomain.objects.OrderEnquiryObjects;
import au.wow.ngbomain.objects.StockTransferObjects;
import au.wow.ngbomain.pages.CommonFunctions;
import au.wow.ngbomain.pages.StockTransferPage;
import au.wow.ngbomain.pages.WoWLoginPage;
//import org.apache.xerces.impl.xs.identity.Selector.Matcher;
//import au.wow.ngbomain.pages.ArticleDetailsPage;
//import au.wow.ngbomain.pages.ArticleLookUpPage;
//import au.wow.ngbomain.pages.EnhancedArticleLookUpPage;


public class StockTransferTests extends TestBase {

	//Declare and initialize the logger, status, sql and page objects
	private Logger log = LogManager.getLogger(StockTransferTests.class);
	List<List<Object>> results;
	List<List<Object>> results1;
	TestStatus status;
	SQLWrapper sql = new SQLWrapper(log);
	WoWLoginPage loginPage;	StockTransferPage StockTrnsfrPage;
	StockTransferObjects StockTransferObj;
	BasePage BaseObj;
	CommonFunctions common;
	public static boolean isFirstTest=true;
	StoreProperties storeprop;
	OrderEnquiryObjects objOrderEnquiryObjects;
	String OrdNo;
	
	String Supplier;
	String username;
	List<List<Object>> result;
	List<List<Object>> result_temp;
	List<List<Object>> result1;
	List<List<Object>> results2;
	List<List<Object>> results3;
	List<List<Object>> results4;
	List<List<Object>> results5;
	int STranscount=0;
	public StockTransferTests(){
		super.log=log;
	}
	
	public static String mName="";
	public static String cName ="";
	public static ArrayList<String> methodList = new ArrayList<String>();
	public static  ExtentTest extLogger;
	public static ExtentReports extReport;	
	public static boolean isExceptionCaptured=false;
	public static WebDriver driver;
	public static XMLDataReader data;

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Store is created")
	public void IBTCreationfromStoretoStore() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+14;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflow(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));
				//ElementContains1(stockTransArtScenarios, stockTransArttestname, one, two);
				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver, "Received units of Article " +art+" is " +Recvdunits1+"  ****;;;Pass");
					//Report_AddStep("testcase","Received units of Article " +art+" is " +Recvdunits1+"  ****" , "", "", "Pass");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Pass");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+"; Pass");
					//Report_AddStep("testcase","***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****" ,"Calculated Value :: "+SOHaftercreation1,  "DB Value :: "+sohsql, "Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver, "Received units of Article " +art+" is " +Recvdunits1+"  ****;;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+"; Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");

			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){

				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");

			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{

						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	/*@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Cancellation of IBT")
	public void IBTCancellation() //throws SQLException, IOException, AWTException, ParseException
	{
		TestStatus status = getTestStatus();
		navToOrderEnq(status);
		//System.out.println("Order Page Details are loaded successfully");
		StockTrnsfrPage.waitFn();
		String OrderNum1 = data.getText("IBTOrderNumber");
		//System.out.println("trdhgfjh"+OrderNum1);
		StockTrnsfrPage.waitFn();
		//System.out.println(OrderNum1);
		StockTrnsfrPage.IBTOrderCancelFlow(StockTransferObj,OrderNum1 );
		waitFor(1);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Cancellation of Vendor Order")
	public void CancelVendorOrder() //throws SQLException, IOException, AWTException, ParseException
	{
		TestStatus status = getTestStatus();
		navToOrderEnq(status);
		//System.out.println("Order Page Details are loaded successfully");
		waitForJSandJQueryToLoad(driver);
		String OrderNum2 = data.getText("VendorOrderNumber");
		StockTrnsfrPage.waitFn();
		StockTrnsfrPage.vendorOrderCancelFlow(StockTransferObj, OrderNum2);
		waitFor(1);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
		status.assertAll();


	}*/

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to ALH for VERP Articles is created")
	public void IBTCreationfromStoretoALHforVERP() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();

		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		String msg = StockTrnsfrPage.IBTCreationflowforALHforVERP(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo,driver);

		if(msg.equals("Errors")){

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}

	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Store for VERP Articles is created")
	public void IBTCreationfromStoretoStoreforVERP() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList1 = new ArrayList();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("art_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "CostCenter";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforVERP(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore,  Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					//Report_AddStep("testcase","Received units of Article " +art+" is " +Recvdunits1+"  ****" , "", "", "Pass");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
					//Report_AddStep("testcase","***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****" ,"Calculated Value :: "+SOHaftercreation1,  "DB Value :: "+sohsql, "Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}
	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Cost Center for VERP Articles is created")
	public void IBTCreationfromStoretoCCforVERP() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "CostCenter";
			//System.out.println(sendStore);
		}	

		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforVERP(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore,  Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (1) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
				}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Cost Center for Consignment Articles is created")
	public void IBTCreationfromStoretoCCforConsignment() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");

		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "CostCenter";
			//System.out.println(sendStore);
		}	

		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforVERP(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore,  Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (1) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}



	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Cost Center for Consignment Articles is created")
	public void IBTCreationfromStoretoALHforConsignment() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "CostCenter";
			//System.out.println(sendStore);
		}	

		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforVERP(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore,  
				Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (1) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();

		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Store for Consignment Articles is created")
	public void IBTCreationfromStoretoStoreforConsignment() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");

		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "CostCenter";
			//System.out.println(sendStore);
		}	

		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforConsignment(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, 
				SiteTo, sendStore, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Display Articles is created")
	public void IBTCreationforDisplayArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();

		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		String fromStore = getContext().getStringProperty("store");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String costcenter = data.getText("CostCenter");
		String alh = data.getText("ALH");
		StockTrnsfrPage.IBTCreationflowforDisplayArticles(StockTransferObj, articlelist, DBList, Articleqty, SiteTo, costcenter, alh, fromStore,driver);
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
		waitForJSandJQueryToLoad(driver);
		status.assertAll();
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to ALH is created")
	public void IBTCreationfromStoretoALH() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}	
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflow(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore,Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));
				Double Recvdunits = (1) * Double.parseDouble(Articleqty);
				//Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to CostCenter is created")
	public void IBTCreationfromStoretoCostCenter() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "Costcenter";
			//System.out.println(sendStore);
		}	
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflow(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));
				Double Recvdunits = (1) * Double.parseDouble(Articleqty);
				//Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{

				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT NGBO Store to ISIS Store is created")
	public void IBTCreationfromNGBOStoretoISIS() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
	//	String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflow(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT from SMKT Store to BWS Store is created")
	public void IBTCreationfromSMKTtoBWSstore() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflow(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;; ; Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail ");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail ");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT from Store to Store is created for CPBD Articles")
	public void IBTCreationforCPBDfromStoretoStore() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
			results4 = sql.executeQuery(getContext(), CPBDArt);
			String CPBD_Art = results4.get(0).get(0).toString();
			String CPBD_Art_OM = results4.get(0).get(1).toString();
			String SOH_sql = data.getText("SOH").replace("art_no",CPBD_Art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom+":"+CPBD_Art+":"+CPBD_Art_OM;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforCPBD(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore,Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
				results4 = sql.executeQuery(getContext(), CPBDArt);
				String CPBD_Art = results4.get(0).get(0).toString();

				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",CPBD_Art);
				//String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(5))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT from Store to ALH is created for CPBD Articles")
	public void IBTCreationforCPBDfromStoretoALH() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");

		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
			results4 = sql.executeQuery(getContext(), CPBDArt);
			String CPBD_Art = results4.get(0).get(0).toString();
			String CPBD_Art_OM = results4.get(0).get(1).toString();
			String SOH_sql = data.getText("SOH").replace("art_no",CPBD_Art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom+":"+CPBD_Art+":"+CPBD_Art_OM;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforCPBD(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
				results4 = sql.executeQuery(getContext(), CPBDArt);
				String CPBD_Art = results4.get(0).get(0).toString();

				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",CPBD_Art);
				//String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = 1 * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);

			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT from Store to Cost Center is created for CPBD Articles")
	public void IBTCreationforCPBDfromStoretoCC() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+15;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "Costcenter";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
			results4 = sql.executeQuery(getContext(), CPBDArt);
			String CPBD_Art = results4.get(0).get(0).toString();
			String CPBD_Art_OM = results4.get(0).get(1).toString();
			String SOH_sql = data.getText("SOH").replace("art_no",CPBD_Art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom+":"+CPBD_Art+":"+CPBD_Art_OM;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforCPBD(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
				results4 = sql.executeQuery(getContext(), CPBDArt);
				String CPBD_Art = results4.get(0).get(0).toString();

				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",CPBD_Art);
				//String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = 1 * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);

			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}


	/*@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether ALH Returns is working")
	public void ALHReturns() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		String OrderNum = data.getText("OrderNo");

		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Details are loaded successfully");
		String articlesget = StockTrnsfrPage.IBTALHReturnstogetArticles(StockTransferObj, OrderNum,driver);
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);

		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), baseuom);
			String base_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTALHReturnstocalcualteSOH(StockTransferObj, OrderNum, articlelist, DBList,driver);
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art = articlelist.get(i);
			String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
			results1 = sql.executeQuery(getContext(), SOH_sql1);	
			String sohsql = results1.get(0).get(0).toString();
			sohsql = decimalFormat1(sohsql);
			String Str = sohsql;
			DBListSOH.addAll(StringToListCreation(Str));
			Double Recvdunits = (1) * Double.parseDouble((String) DBList2.get(i).get(0));
			//Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
			//System.out.println(Recvdunits);
			String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
			Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) + Recvdunits;
			String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

			//System.out.println(SOHaftercreation);
			if(SOHaftercreation1.equals(sohsql)){
				htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
				htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
				//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
				htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
			}
		}
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
		waitForJSandJQueryToLoad(driver);
		status.assertAll();
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}
*/
	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to DC is created")
	public void IBTCreationfromStoretoDC() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+15;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");

		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String ContactName = data.getText("ContactName");
		String AuthNo = data.getText("AuthNo");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String ArtType = "";
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "Costcenter";
			//System.out.println(sendStore);
		}	
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String issueuom = data.getText("IssueUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), issueuom);
			String issue_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+issue_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2  = StockTrnsfrPage.IBTCreationflowfromStoretoDC(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, ContactName, AuthNo, Supplier,username, ArtType,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));
				//Double Recvdunits = (1) * Double.parseDouble(Articleqty);
				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - 0;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");

			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10)) && results4.get(0).get(9).toString().equals(DBList2.get(0).get(13)) && results4.get(0).get(10).toString().equals(DBList2.get(0).get(14))){

				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Pass");
				/*	Report_AddStep("testcase","Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly" ,  "Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"]",
						"DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"]", "Pass");
				 */}
			else{
				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))
								&& results5.get(j).get(10).toString().equals(DBList2.get(i).get(13)) && results5.get(j).get(11).toString().equals(DBList2.get(i).get(14))){
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+", "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"]];Pass");
							/*	Report_AddStep("testcase","Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM, Contact Name, Authorization Number details are saved correctly" ,  "Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"]", 
							"DB Value is ["+results5.get(i).get(0).toString()+", "+results5.get(i).get(1).toString()+", "+results5.get(i).get(2).toString()+", "+results5.get(i).get(3).toString()+", "+results5.get(i).get(4).toString()+", "+results5.get(i).get(5).toString()+", "+results5.get(i).get(6).toString()+", "+results5.get(i).get(7).toString()+", "+results5.get(i).get(8).toString()+",  "+results5.get(i).get(9).toString()+", "+results5.get(i).get(10).toString()+",  "+results5.get(i).get(11).toString()+"]", "Pass");
							 */}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+", "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"]];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT from Store to DC is created for CPBD Articles")
	public void IBTCreationforCPBDfromStoretoDC() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String ContactName = data.getText("ContactName");
		String AuthNo = data.getText("AuthNo");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
			results4 = sql.executeQuery(getContext(), CPBDArt);
			String CPBD_Art = results4.get(0).get(0).toString();
			String CPBD_Art_OM = results4.get(0).get(1).toString();
			String SOH_sql = data.getText("SOH").replace("art_no",CPBD_Art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+base_uom+":"+CPBD_Art+":"+CPBD_Art_OM;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforCPBDtoDC(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo,sendStore, ContactName, AuthNo, Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String CPBDArt = data.getText("CPBD").replace("art_no",art);				 	
				results4 = sql.executeQuery(getContext(), CPBDArt);
				String CPBD_Art = results4.get(0).get(0).toString();

				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",CPBD_Art);
				//String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = 0.0;
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");

			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10)) && results4.get(0).get(9).toString().equals(DBList2.get(0).get(13)) && results4.get(0).get(10).toString().equals(DBList2.get(0).get(14))){

				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Pass");
				/*	Report_AddStep("testcase","Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly" ,  "Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"]",
						"DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"]", "Pass");
				 */}
			else{
				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);

			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))
								&& results5.get(j).get(10).toString().equals(DBList2.get(i).get(13)) && results5.get(j).get(11).toString().equals(DBList2.get(i).get(14))){
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+", "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"]];Pass");
							/*	Report_AddStep("testcase","Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM, Contact Name, Authorization Number details are saved correctly" ,  "Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"]", 
							"DB Value is ["+results5.get(i).get(0).toString()+", "+results5.get(i).get(1).toString()+", "+results5.get(i).get(2).toString()+", "+results5.get(i).get(3).toString()+", "+results5.get(i).get(4).toString()+", "+results5.get(i).get(5).toString()+", "+results5.get(i).get(6).toString()+", "+results5.get(i).get(7).toString()+", "+results5.get(i).get(8).toString()+",  "+results5.get(i).get(9).toString()+", "+results5.get(i).get(10).toString()+",  "+results5.get(i).get(11).toString()+"]", "Pass");
							 */}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+", "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"]];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	/*@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Store for ZBAK articles is created")
	public void IBTCreationfromStoretoStoreforZBAK() //throws SQLException, IOException, AWTException, ParseException
	{
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<String> childarticlelist = new ArrayList();
		List<String> NumDenList = new ArrayList();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		//List<List<String>> results4;
		TestStatus status = getTestStatus();
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget = data.getText("articles");
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String Childart = data.getText("ZBAK1").replace("art_no",art);
			results4 = sql.executeQuery(getContext(), Childart);

			String NumDem = data.getText("NumDem").replace("art_no",art);
			results3 = sql.executeQuery(getContext(), NumDem);

			String Linkdqty = data.getText("ZBAK").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), Linkdqty);

			//String Par_art = results3.get(0).get(0).toString();
			String num = results3.get(0).get(0).toString();
			String den = results3.get(0).get(1).toString();
			Double DeNu = Double.parseDouble(num)/Double.parseDouble(den);
			String DeNu1 = DeNu.toString();
			NumDenList.add(DeNu1);
			Report_AddStep("testcase","SOH of Bakery article "+result_temp.get(0).get(0)+" will be updated for the below components" , "", "", "Pass");
			for(int j=0;j<results4.size();j++){
				childarticlelist.add((String) results4.get(j).get(0));
				Report_AddStep("testcase","" +(String) results4.get(j).get(0), "", "", "Pass");
				String Str1 = ""+results4.get(j).get(0)+":"+NumDenList.get(i)+":"+result_temp.get(j).get(0)+":"+result_temp.get(j).get(2)+":"+result_temp.get(j).get(3);
				DBList1.addAll(StringToListCreation(Str1));
			}
		}

		for(int j=0;j<childarticlelist.size();j++){
			String childart =  childarticlelist.get(j);
			String SOH_sql = data.getText("SOH").replace("art_no",childart);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Str = ""+childarticlelist.get(j)+":"+soh;
			DBList.addAll(StringToListCreation(Str));
		}

		//String msg = StockTrnsfrPage.IBTCreationflow(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore);
		String msg = "STATUS";
		if(msg.equals("STATUS")){
			for(int i=0;i< childarticlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = childarticlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));
				String chld_om = DBList1.get(i).get(3).toString();
				String YLDvalue = DBList1.get(i).get(1).toString();
				//String num = results3.get(0).get(1).toString();
				Double Recvdunits = (Double.parseDouble(chld_om)) * Double.parseDouble(Articleqty) * (Double.parseDouble(YLDvalue));
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					Report_AddStep("testcase","Received units of Article " +art+" is " +Recvdunits1+"  ****" , "", "", "Pass");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Pass");
					Report_AddStep("testcase","***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****" ,"Calculated Value :: "+SOHaftercreation1,  "DB Value :: "+sohsql, "Pass");
				}
				else{
					Report_AddStep("testcase","Received units of Article " +art+" is " +Recvdunits1+"  ****" , "", "", "Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					Report_AddStep("testcase","***SOH was not updated properly after IBT Creation in Local DB for article "+art+" ****" , "Calculated Value :: "+SOHaftercreation1,  "DB Value :: "+sohsql, "Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Store is created for Item Linkage Articles")
	public void IBTCreationfromStoretoStoreforItmLnk() //throws SQLException, IOException, AWTException, ParseException
	{
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();

		TestStatus status = getTestStatus();
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget = data.getText("articles");
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String Itmlnk = data.getText("ITMLNK").replace("art_no",art);				 	
			results4 = sql.executeQuery(getContext(), Itmlnk);
			String ITM_Art = results4.get(0).get(1).toString();
			String ITM_Art_OM = results4.get(0).get(2).toString();
			String base_uom = results4.get(0).get(3).toString();
			String SOH_sql = data.getText("SOH").replace("art_no",ITM_Art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Str = ""+articlelist.get(i)+":"+soh+":"+ITM_Art+":"+ITM_Art_OM+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}

		//String msg = StockTrnsfrPage.IBTCreationflow(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore);
		String msg = "STATUS";
		if(msg.equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String Itmlnk = data.getText("ITMLNK").replace("art_no",art);				 	
				results4 = sql.executeQuery(getContext(), Itmlnk);
				String ITM_Art = results4.get(0).get(1).toString();
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",ITM_Art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(3))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));
				Report_AddStep("testcase","SOH of Item Linkage Child article "+art+" will be updated for the Parent Article "+ITM_Art+"" , "", "", "Pass");
				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					Report_AddStep("testcase","Received units of Article " +ITM_Art+" is " +Recvdunits1+"  ****" , "", "", "Pass");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Pass");
					Report_AddStep("testcase","***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****" ,"Calculated Value :: "+SOHaftercreation1,  "DB Value :: "+sohsql, "Pass");
				}
				else{
					Report_AddStep("testcase","Received units of Article " +ITM_Art+" is " +Recvdunits1+"  ****" , "", "", "Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					Report_AddStep("testcase","***SOH was not updated properly after IBT Creation in Local DB for article "+art+" ****" , "Calculated Value :: "+SOHaftercreation1,  "DB Value :: "+sohsql, "Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
	}*/

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether SOO, SIT values are displayed while creating IBT")
	public void CheckingSITSOOwhilecreatingIBT() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+8;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();

		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		/*results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);*/
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOO_SIT_sql = data.getText("SOOSSIT").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOO_SIT_sql);
			String soo;
			String sit;
			if(results.size() == 0){
				soo = "0";
				sit = "0";

			}
			if(results.get(0).get(1).toString().equals("")){
				soo = "0";
			}
			else{
				soo = results.get(0).get(1).toString();
				soo = decimalFormat1(soo);

			}
			if(results.get(0).get(2).toString().equals("")){
				sit = "0";
			}
			else{
				sit = results.get(0).get(2).toString();
				sit = decimalFormat1(sit);

			}
			String Str = ""+articlelist.get(i)+":"+soo+":"+sit;
			DBList.addAll(StringToListCreation(Str));

		}
		StockTrnsfrPage.checkingSOOSITValues(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo,driver);
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
		waitForJSandJQueryToLoad(driver);
		status.assertAll();
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

	/*@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Store is created by selecting Nearby Store")
	public void IBTCreationfromStoretoStorebyselectingNearbystore() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
		STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToStockTransfer(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("IBT page Details are loaded successfully");
		//String articlesget = data.getText("articles");
		String articlesget;
		if(getContext().getStringProperty("store").equals("3064")){
			 articlesget = data.getText("articles_3064");}
		else{
			 articlesget = data.getText("articles_1786");
		}
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget,driver);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");

		String sendStore;

		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowbyselectingNearbyStore(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, 
				Supplier, username,driver);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;;;Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",DBList2.get(0).get(2).toString());
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2).toString()) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3).toString()) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);

			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",DBList2.get(0).get(1).toString());
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname,driver));
			waitForJSandJQueryToLoad(driver);
			status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}
	}

*/	/*@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to DC is created by selecting Warehouse from drop down")
	public void IBTCreationfromStoretoStorebyselectingWarehouse() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
			STranscount=STranscount+10;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		navToStockTransfer(status);
		waitForJSandJQueryToLoad();
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget = data.getText("articles");
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String ContactName = data.getText("ContactName");
		String AuthNo = data.getText("AuthNo");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";

			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);

			}

			String issueuom = data.getText("IssueUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), issueuom);
			String issue_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+soh+":"+om+":"+issue_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowbyselectingWarehouse(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username, ContactName, AuthNo);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);
				String sohsql = "";
				if(results1.size() == 0){
					sohsql = "0";
				}
				else{
					sohsql = results1.get(0).get(0).toString();;
					sohsql = decimalFormat1(sohsql);
				}				 
				String Str = sohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = 0.0;
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(Double.toString(Recvdunits));
				Double SOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Pass");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver,"Received units of Article " +art+" is " +Recvdunits1+";;;Fail");
					//Report_AddStep("testcase","SOH Value calculated locally for article " +art+" is " +SOHaftercreation1+"  ****" , "", "", "Fail");
					htmlToExtent(cName,mName,extLogger,driver,"***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: "+SOHaftercreation1+";DB Value :: "+sohsql+";Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;; ; Pass");

			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5).toString()) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6).toString()) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail ");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8).toString()) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9).toString()) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10).toString()) && results4.get(0).get(9).toString().equals(DBList2.get(0).get(13).toString()) && results4.get(0).get(10).toString().equals(DBList2.get(0).get(14))){

				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Pass");
			}	
			else{
				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);

			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))
								&& results5.get(j).get(10).toString().equals(DBList2.get(i).get(13)) && results5.get(j).get(11).toString().equals(DBList2.get(i).get(14))){
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"], "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"], "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"];Fail");
						}
					}
				}
			}
			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
		else{
			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Store is created for Random Weight Articles")
	public void IBTCreationfromStoretoStoreforRWArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
			STranscount=STranscount+7;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		navToStockTransfer(status);
		waitForJSandJQueryToLoad();
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget = data.getText("articles");
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";
				pisoh = "0";
			}else if(results.get(0).get(1)==null && Double.parseDouble(results.get(0).get(0).toString())>0){
				pisoh = "0";
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
			}			
			else if(results.get(0).get(0)==null && Double.parseDouble(results.get(0).get(1).toString())>0){
				soh = "0";
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+pisoh+":"+om+":"+soh;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforRW(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String pisohsql = results1.get(0).get(1).toString();
				pisohsql = decimalFormat1(pisohsql);
				String Str = ""+sohsql+":"+pisohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				Double Recvdunits = (Double.parseDouble((String) DBList.get(i).get(2))) * Double.parseDouble(Articleqty);
				//System.out.println(Recvdunits);
				String Recvdunits1 = decimalFormat1(DBList2.get(i).get(13).toString());
				Double PISOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String PISOHaftercreation1 = decimalFormat1(Double.toString(PISOHaftercreation));
				Double SOHaftercreation = Double.parseDouble((String) DBList.get(i).get(3)) - Double.parseDouble(DBList2.get(i).get(14).toString());
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(PISOHaftercreation1.equals(pisohsql) && SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(14).toString())+", " +Recvdunits1+"  ****;;;Pass");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(14).toString())+", " +Recvdunits1+"  ****;;;Fail");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;; ; Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){

				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail ");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail ");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11))){				
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(i).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}

						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(i).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}

			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to Cost Center is created for Random Weight Articles")
	public void IBTCreationfromStoretoCCforRWArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
			STranscount=STranscount+7;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		navToStockTransfer(status);
		waitForJSandJQueryToLoad();
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget = data.getText("articles");
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";
				pisoh = "0";
			}else if(results.get(0).get(1)==null && Double.parseDouble(results.get(0).get(0).toString())>0){
				pisoh = "0";
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
			}			
			else if(results.get(0).get(0)==null && Double.parseDouble(results.get(0).get(1).toString())>0){
				soh = "0";
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+pisoh+":"+om+":"+soh+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforRW(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String pisohsql = results1.get(0).get(1).toString();
				pisohsql = decimalFormat1(pisohsql);
				String Str = ""+sohsql+":"+pisohsql;
				DBListSOH.addAll(StringToListCreation(Str));
				String Recvdunits1 = decimalFormat1(DBList2.get(i).get(13).toString());
				Double PISOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Double.parseDouble(Recvdunits1);
				String PISOHaftercreation1 = decimalFormat1(Double.toString(PISOHaftercreation));
				Double SOHaftercreation = Double.parseDouble((String) DBList.get(i).get(3)) - Double.parseDouble(DBList2.get(i).get(14).toString());
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(PISOHaftercreation1.equals(pisohsql) && SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(14).toString())+", " +Recvdunits1+"  ****;;;Pass");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(14).toString())+", " +Recvdunits1+"  ****;;;Fail");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;; ; Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){

				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail ");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail ");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to ALH is created for Random Weight Articles")
	public void IBTCreationfromStoretoALHforRWArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
			STranscount=STranscount+7;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		navToStockTransfer(status);
		waitForJSandJQueryToLoad();
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget = data.getText("articles");
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "ALH";
			//System.out.println(sendStore);
		}
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";
				pisoh = "0";
			}else if(results.get(0).get(1)==null && Double.parseDouble(results.get(0).get(0).toString())>0){
				pisoh = "0";
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
			}			
			else if(results.get(0).get(0)==null && Double.parseDouble(results.get(0).get(1).toString())>0){
				soh = "0";
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}

			String Baseuom = data.getText("BaseUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), Baseuom);
			String base_uom = results3.get(0).get(0).toString();

			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+pisoh+":"+om+":"+soh+":"+base_uom;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2 = StockTrnsfrPage.IBTCreationflowforRW(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, Supplier, username);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = results1.get(0).get(0).toString();
				sohsql = decimalFormat1(sohsql);
				String pisohsql = results1.get(0).get(1).toString();
				pisohsql = decimalFormat1(pisohsql);
				String Str = ""+sohsql+":"+pisohsql;
				DBListSOH.addAll(StringToListCreation(Str));

				String Recvdunits1 = decimalFormat1(DBList2.get(i).get(13).toString());
				Double PISOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Double.parseDouble(Recvdunits1);
				String PISOHaftercreation1 = decimalFormat1(Double.toString(PISOHaftercreation));
				Double SOHaftercreation = Double.parseDouble((String) DBList.get(i).get(3)) - Double.parseDouble(DBList2.get(i).get(14).toString());
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(PISOHaftercreation1.equals(pisohsql) && SOHaftercreation1.equals(sohsql)){
					htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(14).toString())+", " +Recvdunits1+"  ****;;;Pass");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Pass");
				}
				else{
					htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(14).toString())+", " +Recvdunits1+"  ****;;;Fail");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;; ; Pass");
			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){

				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail ");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10))){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Order Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+"];Fail ");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))){

							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Pass");
						}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+"];Fail");
						}
					}
				}
			}
			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");

			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
	}

@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "check whether IBT Store to DC is created for Random Weight Articles")
	public void IBTCreationfromStoretoDCforRWArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(stockTransArtpreCount2==-1){
			STranscount=STranscount+7;}
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBList2 = new ArrayList();
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		Supplier = getContext().getStringProperty("store");
		username = getContext().getStringProperty("username");

		TestStatus status = getTestStatus();
		navToStockTransfer(status);
		waitForJSandJQueryToLoad();
		//System.out.println("IBT page Details are loaded successfully");
		String articlesget = data.getText("articles");
		results = sql.executeQuery(getContext(), articlesget);
		String art2 = "";
		for (int a=1; a<=3;a++)
		{
		int num = common.RandomFromDB(results);
		String art1 = StockTrnsfrPage.randart(results, num);
		art2 = art2+art1+",";

		}

		articlelist = StockTrnsfrPage.articleSplit(art2);
		articlelist = StockTrnsfrPage.articleSplit(articlesget);
		String Frozentemp = data.getText("FrozenTemp");
		String Chilledtemp = data.getText("ChilledTemp");
		String ContactName = data.getText("ContactName");
		String AuthNo = data.getText("AuthNo");
		String Articleqty = data.getText("articleqty");
		String SiteTo = data.getText("siteTo");
		String sendStore;
		String Storefind = data.getText("Store").replace("store_no",SiteTo);
		results2 = sql.executeQuery(getContext(), Storefind);
		if(results2.size() == 0){
			sendStore = "Normalstore"; 
			//System.out.println(sendStore);
		}
		else
		{
			sendStore = "Costcenter";
			//System.out.println(sendStore);
		}	
		String ArtType = "RW";
		for(int i=0;i< articlelist.size();i++)
		{
			ArrayList<String> DB = new ArrayList();
			String art =  articlelist.get(i);
			String SOH_sql = data.getText("SOH").replace("art_no",art);
			results = sql.executeQuery(getContext(), SOH_sql);
			String soh;
			String pisoh;
			if(results.size() == 0){
				soh = "0";
				pisoh = "0";
			}else if(results.get(0).get(1)==null && Double.parseDouble(results.get(0).get(0).toString())>0){
				pisoh = "0";
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
			}			
			else if(results.get(0).get(0)==null && Double.parseDouble(results.get(0).get(1).toString())>0){
				soh = "0";
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}
			else{
				soh = results.get(0).get(0).toString();
				soh = decimalFormat1(soh);
				pisoh = results.get(0).get(1).toString();
				pisoh = decimalFormat1(pisoh);
			}			

			String issueuom = data.getText("IssueUOM").replace("art_no",art);				 	
			results3 = sql.executeQuery(getContext(), issueuom);
			String issue_uom = results3.get(0).get(0).toString();
			String OM_sql = data.getText("OM").replace("art_no",art);				 	
			result_temp = sql.executeQuery(getContext(), OM_sql);
			String om = result_temp.get(0).get(0).toString();
			om = decimalFormat1(om);
			String Str = ""+articlelist.get(i)+":"+pisoh+":"+om+":"+issue_uom+":"+soh;
			DBList.addAll(StringToListCreation(Str));

		}
		DBList2  = StockTrnsfrPage.IBTCreationflowfromStoretoDC(StockTransferObj, articlelist, Frozentemp, Chilledtemp, DBList, Articleqty, SiteTo, sendStore, ContactName, AuthNo, Supplier, username, ArtType);

		if(DBList2.get(0).get(0).equals("STATUS")){
			for(int i=0;i< articlelist.size();i++)
			{
				ArrayList<String> DB = new ArrayList();
				String art = articlelist.get(i);
				String SOH_sql1 = data.getText("SOHCALCULATION").replace("art_no",art);
				results1 = sql.executeQuery(getContext(), SOH_sql1);	
				String sohsql = "";
				String pisohsql = "";
				if(results1.size() == 0){
					sohsql = "0";
				}
				else{
					sohsql = results1.get(0).get(0).toString();;
					sohsql = decimalFormat1(sohsql);
				}
				if(results1.size() == 0){
					sohsql = "0";
					pisohsql = "0";
				}else if(results1.get(0).get(1)==null && Double.parseDouble(results1.get(0).get(0).toString())>0){
					pisohsql = "0";
					sohsql = results1.get(0).get(0).toString();
					sohsql = decimalFormat1(sohsql);
				}			
				else if(results1.get(0).get(0)==null && Double.parseDouble(results1.get(0).get(1).toString())>0){
					sohsql = "0";
					pisohsql = results1.get(0).get(1).toString();
					pisohsql = decimalFormat1(pisohsql);
				}
				else{
					sohsql = results1.get(0).get(0).toString();
					sohsql = decimalFormat1(sohsql);
					pisohsql = results1.get(0).get(1).toString();
					pisohsql = decimalFormat1(pisohsql);
				}
				String Str = sohsql;				
				DBListSOH.addAll(StringToListCreation(Str));
				//Double Recvdunits = (1) * Double.parseDouble(Articleqty);
				Double Recvdunits = 0.0;
				//System.out.println(Recvdunits);

				//String Recvdunits1 = "0";
				Double PISOHaftercreation = (Double.parseDouble((String) DBList.get(i).get(1))) - Recvdunits;
				String PISOHaftercreation1 = decimalFormat1(Double.toString(PISOHaftercreation));
				Double SOHaftercreation = Double.parseDouble((String) DBList.get(i).get(4)) - Recvdunits;
				String SOHaftercreation1 = decimalFormat1(Double.toString(SOHaftercreation));

				//System.out.println(SOHaftercreation);
				if(PISOHaftercreation1.equals(pisohsql) && SOHaftercreation1.equals(sohsql)){
					//htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(16).toString())+", " +Recvdunits1+"  ****;;;Pass");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Pass");
				}
				else{
					//htmlToExtent(cName,mName,extLogger,driver, "Weight, PI Qty entered for Article " +art+" is "+decimalFormat1(DBList2.get(i).get(16).toString())+", " +Recvdunits1+"  ****;;;Fail");
					htmlToExtent(cName,mName,extLogger,driver, "***SOH got updated properly after IBT Creation in Local DB for article "+art+" ****;Calculated Value :: ["+SOHaftercreation1+", "+PISOHaftercreation1+"];DB Value :: ["+sohsql+", "+pisohsql+"];Fail");
				}
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_DRAFT_IBT_ORDER table for each article ****;; ; Pass");

			String draftdetails = data.getText("DraftOrder").replace("site_no",SiteTo);
			results4 = sql.executeQuery(getContext(), draftdetails);

			if(results4.get(0).get(0).toString().equals(DBList2.get(0).get(2)) && results4.get(0).get(1).toString().equals(DBList2.get(0).get(3)) && results4.get(0).get(2).toString().equals(DBList2.get(0).get(4))){
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Site, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+", "+DBList2.get(0).get(4)+"];DB Value is ["+results4.get(0).get(0).toString()+", "+results4.get(0).get(1).toString()+", "+results4.get(0).get(2).toString()+"];Fail");
			}
			if(results4.get(0).get(3).toString().equals(DBList2.get(0).get(5)) && results4.get(0).get(4).toString().equals(DBList2.get(0).get(6)) && results4.get(0).get(5).toString().equals(DBList2.get(0).get(7))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Pass ");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER_TYPE, PICKUP DATE, AUTH DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(5)+", "+DBList2.get(0).get(6)+", "+DBList2.get(0).get(7)+"];DB Value is ["+results4.get(0).get(3).toString()+", "+results4.get(0).get(4).toString()+", "+results4.get(0).get(5).toString()+"];Fail ");
			}
			if(results4.get(0).get(6).toString().equals(DBList2.get(0).get(8)) && results4.get(0).get(7).toString().equals(DBList2.get(0).get(9)) && results4.get(0).get(8).toString().equals(DBList2.get(0).get(10)) && results4.get(0).get(9).toString().equals(DBList2.get(0).get(13)) && results4.get(0).get(10).toString().equals(DBList2.get(0).get(14))){

				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Pass");
				
			else{
				htmlToExtent(cName,mName,extLogger,driver, "Chilled Temp, Frozen Temp, Order Number, Contact Name, Authorization Number details are saved correctly;Local Value is ["+DBList2.get(0).get(8)+", "+DBList2.get(0).get(9)+", "+DBList2.get(0).get(10)+", "+DBList2.get(0).get(13)+", "+DBList2.get(0).get(14)+"];DB Value is ["+results4.get(0).get(6).toString()+", "+results4.get(0).get(7).toString()+", "+results4.get(0).get(8).toString()+", "+results4.get(0).get(9).toString()+", "+results4.get(0).get(10).toString()+"];Fail");
			}
			htmlToExtent(cName,mName,extLogger,driver,"**** Checking the Values saved in LOCAL_WOW_IBT_ORDER_COMMENTS table ****;;;Pass");
			String IBTComments = data.getText("IBTComments").replace("ord_no",DBList2.get(0).get(10).toString());
			results5 = sql.executeQuery(getContext(), IBTComments);
			for(int i=0;i< DBList2.size();i++)
			{
				for(int j=0;j<results5.size();j++){
					if(results5.get(j).get(8).toString().equals(DBList2.get(i).get(11).toString()))	{
						if(results5.get(j).get(0).toString().equals(DBList2.get(i).get(1)) && results5.get(j).get(1).toString().equals(DBList2.get(i).get(2)) && results5.get(j).get(2).toString().equals(DBList2.get(i).get(3))
								&& results5.get(j).get(3).toString().equals(DBList2.get(i).get(6)) && results5.get(j).get(4).toString().equals(DBList2.get(i).get(7)) && results5.get(j).get(5).toString().equals(DBList2.get(i).get(8))
								&& results5.get(j).get(6).toString().equals(DBList2.get(i).get(9)) && results5.get(j).get(7).toString().equals(DBList2.get(i).get(10)) && results5.get(j).get(8).toString().equals(DBList2.get(i).get(11)) && results5.get(j).get(9).toString().equals(DBList2.get(i).get(12))
								&& results5.get(j).get(10).toString().equals(DBList2.get(i).get(13)) && results5.get(j).get(11).toString().equals(DBList2.get(i).get(14))){
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+", "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"]];Pass");
							}
						else{
							htmlToExtent(cName,mName,extLogger,driver,"Supplier, Site, Username, PICKUP DATE, AUTH DATE, Chilled Temp, Frozen Temp, Order No, Article, UOM details are saved correctly;Local Value is ["+DBList2.get(i).get(1)+", "+DBList2.get(i).get(2)+", "+DBList2.get(i).get(3)+", "+DBList2.get(i).get(6)+", "+DBList2.get(i).get(7)+", "+DBList2.get(i).get(8)+", "+DBList2.get(i).get(9)+", "+DBList2.get(i).get(10)+", "+DBList2.get(i).get(11)+", "+DBList2.get(i).get(12)+", "+DBList2.get(i).get(13)+", "+DBList2.get(i).get(14)+"];DB Value is ["+results5.get(j).get(0).toString()+", "+results5.get(j).get(1).toString()+", "+results5.get(j).get(2).toString()+", "+results5.get(j).get(3).toString()+", "+results5.get(j).get(4).toString()+", "+results5.get(j).get(5).toString()+", "+results5.get(j).get(6).toString()+", "+results5.get(j).get(7).toString()+", "+results5.get(j).get(8).toString()+",  "+results5.get(j).get(9).toString()+", "+results5.get(j).get(10).toString()+",  "+results5.get(j).get(11).toString()+"]];Fail");
						}
					}
				}
			}
			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
		else{

			String draftdetails = data.getText("DraftOrder_error").replace("site_no",SiteTo);
			results1 = sql.executeQuery(getContext(), draftdetails);
			if(results1.get(0).get(0).toString().equals(DBList2.get(0).get(1)) && results1.get(0).get(1).toString().equals(DBList2.get(0).get(2)) && results1.get(0).get(2).toString().equals(DBList2.get(0).get(3))){
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Supplier, Username, Status details are saved correctly;Local Value is ["+DBList2.get(0).get(1)+", "+DBList2.get(0).get(2)+", "+DBList2.get(0).get(3)+"];DB Value is ["+results1.get(0).get(0).toString()+", "+results1.get(0).get(1).toString()+", "+results1.get(0).get(2).toString()+"];Fail");
			}
			if(results1.get(0).get(3).toString().equals(DBList2.get(0).get(4)) && results1.get(0).get(4).toString().equals(DBList2.get(0).get(5))){
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"ORDER TYPE, PICK UP DATE details are saved correctly;Local Value is ["+DBList2.get(0).get(4)+", "+DBList2.get(0).get(5)+"];DB Value is ["+results1.get(0).get(3).toString()+", "+results1.get(0).get(4).toString()+"];Fail");
			}

			loginPage.logoutFromAppl(stockTransArtScenarios, stockTransArttestname);
			waitForJSandJQueryToLoad();
			status.assertAll();
		}
	}	
*/	
	


	public void navToOrderEnq(TestStatus status) throws  AWTException 
	{
		log.info("---------------Login into Application--------------------");
		htmlToExtent(cName,mName,extLogger,driver, "---------------Login into Application--------------------;;;Pass");
		//Report_AddStep("testcase", "---------------Login into Application--------------------","","", "Pass");
		loginPage = new WoWLoginPage().createPage(getDriver1(), getContext(), log, status, data, WoWLoginPage.class);
		if(System.getProperty("store")==null){
			StoreNo = getContext().getStringProperty("store");
			htmlToExtent(cName,mName,extLogger,driver, "Login with the Store : " + getContext().getStringProperty("store")+";;;Pass");
			//Report_AddStep("testcase", "Login with the Store : " + getContext().getStringProperty("store"),"","", "Pass");
			//articleLookUpPage = loginPage.navToArticlLookUp(getContext().getStringProperty("store"));
			StockTrnsfrPage = loginPage.navToStockTransfer(getContext().getStringProperty("store"),driver);
		}else{
			storeprop.getStoreDetails(System.getProperty("store"));
			//System.out.println(store);
			StoreNo = store;
			htmlToExtent(cName,mName,extLogger,driver,"Login with the Store : " + store+";;;Pass");
			//Report_AddStep("testcase", "Login with the Store : " + store,"","", "Pass");
			//articleLookUpPage = loginPage.navToArticlLookUp(store);
			StockTrnsfrPage = loginPage.navToStockTransfer(store,driver);
		}

		log.info("-------------Navigate to Order Enquiry Page------------");
		htmlToExtent(cName,mName,extLogger,driver,"----------------Navigate to Order Enquiry Page--------------------;;;Pass");
		//Report_AddStep("testcase", "----------------Navigate to Order Enquiry Page--------------------","","", "Pass");
		StockTrnsfrPage.clickOnOrderEnquiry(StockTransferObj,driver);
	}

	public void navToStockTransfer(TestStatus status) throws  AWTException 
	{
		log.info("---------------Login into Application--------------------");
		htmlToExtent(cName,mName,extLogger,driver, "---------------Login into Application--------------------;;;Pass");
		loginPage = new WoWLoginPage().createPage(getDriver1(), getContext(), log, status, data, WoWLoginPage.class);
		if(System.getProperty("store")==null){
			StoreNo = getContext().getStringProperty("store");
			htmlToExtent(cName,mName,extLogger,driver, "Login with the Store : " + getContext().getStringProperty("store")+";;;Pass");
			//articleLookUpPage = loginPage.navToArticlLookUp(getContext().getStringProperty("store"));
			StockTrnsfrPage = loginPage.navToStockTransfer(getContext().getStringProperty("store"),driver);
		}else{
			storeprop.getStoreDetails(System.getProperty("store"));
			//System.out.println(store);
			StoreNo = store;
			htmlToExtent(cName,mName,extLogger,driver,"Login with the Store : " + store+";;;Pass");
			//articleLookUpPage = loginPage.navToArticlLookUp(store);
			StockTrnsfrPage = loginPage.navToStockTransfer(store,driver);
		}

		log.info("-------------Navigate to Stock Transfer Page------------");
		htmlToExtent(cName,mName,extLogger,driver,"----------------Navigate to Stock Transfer Page--------------------;;;Pass");
		//Report_AddStep("testcase", "----------------Navigate to Stock Transfer Page--------------------","","", "Pass");
		StockTrnsfrPage.clickOnstockTransfer(StockTransferObj,driver);
	}


	/*@BeforeMethod
	public void setUp(Method m,ITestContext testcontext) //throws IOException{	
		initializeTestcontext();
		//System.out.println("test1 - beforemethod");
		log.info("Loading Testdata for the test case: " + m.getName().toString());
		data.getTCNameFromChildren(m.getName().toString().trim());
		createDriver(getContext().getStringProperty("baseURL"), getContext().getStringProperty("browser")); setDriver(driver);
		loginPage = new WoWLoginPage().createPage(getDriver1(), getContext(), log, status, data, WoWLoginPage.class);
		testcontext.setAttribute("WebDriver", getDriver1());
		testcontext.setAttribute("Customreports", this.customreport);
		customreport.startTest(m.getName().toString());
		initializeTestStatus();
		reportPath = new File(getContext().getStringProperty("reportPath"));
		moduledesc = m.getName().toString().trim();
		dtmoduledesc = m.getAnnotation(Test.class).description();
		testcasesttime = new Date();
		//objArticleLookup = PageFactory.initElements(this.getDriver1(), ArticleLookUpObjects.class);
		StockTransferObj = PageFactory.initElements(this.getDriver1(), StockTransferObjects.class);
		StockTrnsfrPage = PageFactory.initElements(this.getDriver1(), StockTransferPage.class);
		objOrderEnquiryPage = PageFactory.initElements(this.getDriver1(), OrderEnquiryPage.class);
		objOrderEnquiryObjects = PageFactory.initElements(this.getDriver1(), OrderEnquiryObjects.class);
		//OrdrEnqTest = PageFactory.initElements(this.getDriver1(), OrderEnquiryTests.class);	

		BaseObj = PageFactory.initElements(this.getDriver1(), BasePage.class);
		common = PageFactory.initElements(this.getDriver1(), CommonFunctions.class);
		storeprop = PageFactory.initElements(this.getDriver1(), StoreProperties.class);


		Date date = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("MMddyyyy_hmmss");
		String formattedDate = sdf.format(date);
		//System.out.println(formattedDate); // 12/01/2011 4:48:16 PM
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		String formattedDate1 = dateFormat.format(date);
		//System.out.println(formattedDate1); // 12/01/2011 4:48:16 PM
		String dat = formattedDate1;
		Report_Header("testcase", reportPath , moduledesc, dat);

	}

	@BeforeClass
	public void loadXMLFile(){	
		//initializeTestcontext();
		//System.out.println("test1 - Beforeclass");
		data = new XMLDataReader(log);
		customreport=new CustomExtentReports();
		log.info("Loading data for the class: " );
		data.loadTestDataXML(System.getProperty("user.dir") + "\\TestData\\NGBO\\StockTransfer.xml");
		customreport.createExtentReport();
	}*/
	@BeforeMethod(alwaysRun=true)
	public void setUp(Method m9,ITestContext testcontext) throws IOException, InterruptedException{	
		waitFor(2);
		System.out.println("test1 - beforemethod");		
		isExceptionCaptured=false;			
		  mName=m9.getName().toString().trim();			
		  if(!methodList.contains(m9.getName().toString().trim())){
			  methodList.add(m9.getName().toString().trim());
			  extLogger = extReport.startTest(m9.getName().toString().trim());
		  }
		  initializeTestcontext();
		log.info("Loading Testdata for the test case: " + m9.getName().toString());
		data.getTCNameFromChildren(m9.getName().toString().trim());
		if(isFirstTest){
			driver=createDriver(TestContext.getStringProperty("baseURL"), TestContext.getStringProperty("browser"), cName, mName, extLogger,driver);
		}else{
			String title = driver.getCurrentUrl();
			if(title.contains("logginOut"))
			{
				driver.navigate().refresh();
				TimeUnit.SECONDS.sleep(5);
			}else{
				driver.navigate().refresh();
				TimeUnit.SECONDS.sleep(5);
				if(driver.findElements(By.xpath("//*[@class='homeLink']")).size()>0)
				{
					if(driver.findElement(By.xpath("//*[@class='homeLink']")).isDisplayed()){
						WebElement  home = driver.findElement(By.xpath("//*[@class='homeLink']"));
						scrolltoElement(home,driver);
						home.click();
						TimeUnit.SECONDS.sleep(5);
						loginPage.Logout(RoutinesArtScenarios, RoutinesArttestname, driver);
						driver.navigate().refresh();
						TimeUnit.SECONDS.sleep(5);}
				}
			}
		}
			isFirstTest=false;
		
		//driver=createDriver(TestContext.getStringProperty("baseURL"), TestContext.getStringProperty("browser")); 
			setDriver(driver);
		testcontext.setAttribute("WebDriver", driver);
		testcontext.setAttribute("Customreports", this.customreport);
		customreport.startTest(m9.getName().toString());
		initializeTestStatus();
		reportPath = new File(getContext().getStringProperty("reportPath"));
		stockTransArttestname = m9.getName().toString().trim();
		stockTransArttestdesc = m9.getAnnotation(Test.class).description();
		htmlToExtent(cName,mName,extLogger,driver,"<b><i><h4>Docker run - "+getContext().getStringProperty("isDocketRun")+"</h4></i></b>;;;Info");
		StockTransferObj = PageFactory.initElements(this.getDriver1(), StockTransferObjects.class);
		StockTrnsfrPage = PageFactory.initElements(this.getDriver1(), StockTransferPage.class);
		BaseObj = PageFactory.initElements(this.getDriver1(), BasePage.class);
		common = PageFactory.initElements(this.getDriver1(), CommonFunctions.class);
		storeprop = PageFactory.initElements(this.getDriver1(), StoreProperties.class);
	}

	@BeforeClass
	public void loadXMLFile(){	
		//initializeTestcontext();
		System.out.println("test1 - Beforeclass");
		data = new XMLDataReader(log);
		customreport=new CustomExtentReports();
		log.info("Loading data for the class: " );
		data.loadTestDataXML(System.getProperty("user.dir") + "\\TestData\\NGBO\\StockTransfer.xml");
		customreport.createExtentReport();		
		cName=this.getClass().getSimpleName();
		reportPath = new File(TestContext.getStringProperty("reportPath"));			
		extReport = new ExtentReports(TestContext.getStringProperty("reportPath") +"\\"+this.getClass().getSimpleName()+".html");
		classList.add(this.getClass().getSimpleName());
	}



	@AfterClass(alwaysRun=true)
	public void tearDown() throws IOException, ParseException{
		waitFor(1);
		System.out.println("afterclass");		
		sceCtMap.put(cName+"_totalCt", methodList.size());
		sceCtMap.put(cName+"_passCt", methodList.size() - extentList.get(cName).size());
		sceCtMap.put(cName+"_failCt", extentList.get(cName).size());
		tcCt.put(this.getClass().getSimpleName().toString(), STranscount);
		extReport.endTest(extLogger);
		extReport.flush();
		removeDriver();
		closeDriver(driver);
		waitFor(1);
		moduleName.put("Modules", stockTransArtModules);
		waitFor(1);		
		int StransArtM=STranscount;
		stockTransArtMC=""+StransArtM;
	}

	@AfterMethod(alwaysRun=true)
	protected void flushReports(ITestResult result9, Method m9) throws IOException, ParseException {
		System.out.println("AffterMethod");
		
		extReport.endTest(extLogger);
		extReport.flush();
		try{
			if(result9.getAttribute("isFail").equals("true")&& !isExceptionCaptured){
				htmlToExtent(cName,mName,extLogger,driver,"Iteration terminated due to error;;;INFO");	
				result9.removeAttribute("isFail");
			}}catch(Exception e ){}
		customreport.getExtentReport().endTest(customreport.getExtentTest());
		customreport.getExtentReport().flush();
		if(getResultStatusName(result9.getStatus()).equalsIgnoreCase("Fail")|| getResultStatusName(result9.getStatus()).equalsIgnoreCase("Info")){
			int cnt = stockTransArtpreCount2+1;
			htmlToExtent(cName,mName,extLogger,driver,"<b><i><h4>Completed Status : Iteration - "+ cnt +"</h4></i></b>;;;Info");
			stockTransArtpreCount2++;
		}
		if(stockTransArtpreCount2==reCount || getResultStatusName(result9.getStatus()).equalsIgnoreCase("Pass")){
			stockTransArtpreCount2=-1;
		}
	}

}