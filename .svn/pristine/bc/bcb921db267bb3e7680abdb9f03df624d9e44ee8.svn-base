package au.wow.ngbomain.tests;

import java.awt.AWTException;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Method;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.PageFactory;
import org.testng.ITestContext;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import au.wow.ngbo.utils.BasePage;
import au.wow.ngbo.utils.CustomExtentReports;
import au.wow.ngbo.utils.SQLWrapper;
import au.wow.ngbo.utils.TestBase;
import au.wow.ngbo.utils.TestContext;
import au.wow.ngbo.utils.TestStatus;
import au.wow.ngbo.utils.XMLDataReader;
//import au.wow.ngbomain.objects.ArticleDetailsObjects;
//import au.wow.ngbomain.objects.ArticleLookUpObjects;
//import au.wow.ngbomain.objects.EnhancedArticleLookUpObjects;
import au.wow.ngbomain.objects.OrderEnquiryObjects;
import au.wow.ngbomain.objects.ReceiveOrderObjects;
import au.wow.ngbomain.pages.CommonFunctions;
import au.wow.ngbomain.pages.ReceiveOrderPage;
import au.wow.ngbomain.pages.WoWLoginPage;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
//import org.apache.xerces.impl.xs.identity.Selector.Matcher;
//import au.wow.ngbomain.pages.ArticleDetailsPage;
//import au.wow.ngbomain.pages.ArticleLookUpPage;
//import au.wow.ngbomain.pages.EnhancedArticleLookUpPage;


public class ReceiveOrderTest extends TestBase {

	//Declare and initialize the logger, status, sql and page objects
	private Logger log = LogManager.getLogger(ReceiveOrderTest.class);
	List<List<Object>> results;
	List<List<Object>> results1;
	List<List<Object>> results2;
	List<List<Object>> results3;
	List<List<Object>> results23;
	List<List<Object>> resultsdummy;
	List<List<Object>> results_ord;
	TestStatus status;
	SQLWrapper sql = new SQLWrapper(log);
	WoWLoginPage loginPage;
	ReceiveOrderPage ReceiveOrderPage;
	ReceiveOrderObjects ReceiveOrderObj;
	BasePage BaseObj;
	CommonFunctions common;
	StoreProperties storeprop;
	public static boolean isFirstTest=true;
	OrderEnquiryObjects objOrderEnquiryObjects;
	ReceiveOrderTest RecOrdTest;
	ReceiveOrderPage RecOrdPage;
	ReceiveOrderObjects RecOrdObj;
	int RECcount=0;
	String OrdNo;

	List<List<Object>> result;

	List<List<Object>> result_temp;
	List<List<Object>> result1;
	List<List<Object>> result2;
	List<List<Object>> result3;
	List<List<Object>> result_temp1;
	List<List<Object>> result_temp2;
	List<List<Object>> result_temp3;
	List<List<Object>> resultart;
	List<List<Object>> resultart1;
	List<List<Object>> resultart2;
	List<List<Object>> resultart3;

	public ReceiveOrderTest(){
		super.log=log;
	}
	
	public static String mName="";
	public static String cName ="";
	public static ArrayList<String> methodList = new ArrayList<String>();
	public static  ExtentTest extLogger;
	public static ExtentReports extReport;	
	public static boolean isExceptionCaptured=false;
	public static WebDriver driver;
	public static XMLDataReader data;
		

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor Order in Full by giving high Temperature") //Vamshi
	public void ReceivingVendororderinFullbygivingHighTemperature() ////throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+12;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		//List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "VendorHighTemp";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);    
        results1 = executingQuery("vendorname", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("Artcount", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString();
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String Source = results1.get(0).get(1).toString();
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results3.get(0).get(1).toString());
		if(results3.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results3.get(0).get(0).toString());
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Source;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);

		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")|| result_temp.get(i).get(10).toString().equals("04")){
				RcvQty = "0 "+result_temp.get(i).get(3).toString();
				RcvTotQty = "0 "+result_temp2.get(0).get(0).toString();
			}else{
				RcvQty = Ordqty;
				RcvTotQty = OrdTotQty;
			}
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")|| result_temp.get(i).get(10).toString().equals("04")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(soh1.toString());
				}
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits.toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(Totqty.toString())+":"+decimalFormat1(PIqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				String RcvDispQty = "";
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String Rcvunits = "";
					if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")|| result_temp.get(i).get(10).toString().equals("04")){
						RcvDispQty = "0 "+resultart.get(k).get(2).toString();
						Rcvunits = "0";
					}
					else{
						RcvDispQty = OrdQty;
						Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
					}
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+RcvDispQty;
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+Rcvunits;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")|| result_temp.get(i).get(10).toString().equals("04")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(Totqty.toString());
				}
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.VendorOrdRecinFullforhighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after receiving the order ****;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
		}	
		status.assertAll();
		
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor Order in Full by Rejecting Not Ranged Articles") //Vamshi
	public void ReceivingVendororderinFullbyRejectingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		//List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "POReject";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname",  "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("Artcount", "ord_no", Ordnumber);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
    */
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString();
		String Source = results1.get(0).get(1).toString();
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results3.get(0).get(1).toString());
		if(results3.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results3.get(0).get(0).toString());
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Source;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);

		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
				RcvQty = "0 "+result_temp.get(i).get(3).toString();
				RcvTotQty = "0 "+result_temp2.get(0).get(0).toString();
			}else{
				RcvQty = Ordqty;
				RcvTotQty = OrdTotQty;
			}
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(soh1.toString());
				}
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits.toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(Totqty.toString())+":"+decimalFormat1(PIqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				String RcvDispQty = "";
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String Rcvunits = "";
					if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
						RcvDispQty = "0 "+resultart.get(k).get(2).toString();
						Rcvunits = "0";
					}
					else{
						RcvDispQty = OrdQty;
						Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
					}
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+RcvDispQty;
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+Rcvunits;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(Totqty.toString());
				}
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.VendorOrdRecinFullforhighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after receiving the order ****;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
		}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor Order in Full") //Vamshi
	public void ReceivingVendororderinFull() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+16;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		//List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");

		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		results2 = executingQuery("Artcount", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString();
		String Source = results1.get(0).get(1).toString();
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		String Method = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results2.get(0).get(1).toString());
		if(results2.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results2.get(0).get(0).toString());
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Source;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}

			RcvQty = Ordqty;
			RcvTotQty = OrdTotQty;

			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Rcvunits = decimalFormat1(soh1.toString());
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits.toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(Totqty.toString())+":"+decimalFormat1(PIqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String RcvDispQty = OrdQty;
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+RcvDispQty;
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.VendorOrdRecinFullforhighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor Order in Full by Accepting Not Ranged Articles") //Vamshi
	public void ReceivingVendororderinFullbyAcceptingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		//List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");

		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		results2 = executingQuery("Artcount", "ord_no", Ordnumber);
	   /* if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString();
		String usernm1 = resultart3.get(0).get(0).toString();
		String Source = results1.get(0).get(1).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		String Method = "POAccept";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results2.get(0).get(1).toString());
		if(results2.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results2.get(0).get(0).toString());
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Source;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}

			RcvQty = Ordqty;
			RcvTotQty = OrdTotQty;

			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Rcvunits = decimalFormat1(soh1.toString());
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits.toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(Totqty.toString())+":"+decimalFormat1(PIqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String RcvDispQty = OrdQty;
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+RcvDispQty;
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.VendorOrdRecinFullforhighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
		}	
		status.assertAll();
	}


	public List<List<Object>> executingQuery(String Tagname, String Fieldname, String Ordnumber) throws SQLException
	{
		List<List<Object>> results231 = new ArrayList<List<Object>>();
		String TempFlag = data.getText(Tagname).replace(Fieldname,Ordnumber);
		results231 = sql.executeQuery(getContext(), TempFlag);
		return results231;
	}

	public void CalculatingSOHforFull(List<List<Object>> DBListSOH) throws SQLException
	{
		for (int i=0;i<DBListSOH.size();i++){
			resultart1 = executingQuery("SOHSQL", "art_no", DBListSOH.get(i).get(0).toString());

			if(DBListSOH.get(i).get(1).toString().equals("N")){
				Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(2).toString()) + Double.parseDouble(DBListSOH.get(i).get(3).toString());
				String NewSOH1 = decimalFormat1(NewSOH.toString());
				if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1)){
					htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Values of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Pass");
				}else{
					htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Values of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Fail");
				}
			}
			else if(DBListSOH.get(i).get(1).toString().equals("Y")){
				Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(2).toString()) + Double.parseDouble(DBListSOH.get(i).get(4).toString());
				String NewSOH1 = decimalFormat1(NewSOH.toString());
				Double NewPISOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(DBListSOH.get(i).get(5).toString());
				String NewPISOH1 = decimalFormat1(NewPISOH.toString());

				if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1) && decimalFormat1(resultart1.get(0).get(1).toString()).toString().equals(NewPISOH1)){
					htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Values of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Pass");
				}else{
					htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Values of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Fail");
				}
			}
		}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving IBT Order in Full") //Vamshi
	public void ReceivingIBTorderinFull() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+16;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("IBTorder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart",  "ord_no", Ordnumber);
		result3 = executingQuery("TotArt",  "ord_no", Ordnumber);
		results3 = executingQuery("Tempflg",  "ord_no", Ordnumber);
		results2 = executingQuery("Artcount", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/
		String recv_store = results.get(0).get(4).toString();
		String send_store = results.get(0).get(5).toString();
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();

		String supplier = data.getText("vendorname").replace("rec_store",recv_store);
		results1 = sql.executeQuery(getContext(), supplier);
		String Recvstore = results1.get(0).get(0).toString() + " (" + recv_store +")";
		results1.clear();
		String supplier1 = data.getText("vendorname").replace("rec_store",send_store);
		results1 = sql.executeQuery(getContext(), supplier1);
		String Sendstore = results1.get(0).get(0).toString() + " (" + send_store +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results2.get(0).get(1).toString());
		if(results2.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results2.get(0).get(0).toString());
		}

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		Double RcvWgt = 0.0;
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();
			RcvQty = Ordqty;
			Double PIqty = Double.parseDouble(result_temp.get(i).get(11).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";
			//Double RcvWgt = 0.0;
			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				RcvTotQty = OrdTotQty;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				RcvTotQty = PIQty1;
				OM = OM_RW;
				RcvWgt += Totqty;
			}
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(Totqty.toString())+":"+decimalFormat1(PIqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+Sendstore+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results3.get(0).get(0).toString()+":"+Recvstore+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.IBTOrdRecinFull(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		RecOrdPage.IBTOrdRecinFullvthHighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after receiving the order ****;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);

		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving IBT Order in Full by accepting Not Ranged Articles") //Vamshi
	public void ReceivingIBTorderinFullbyAcceptingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("IBTorder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "IBTAccept";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart",  "ord_no", Ordnumber);
		result3 = executingQuery("TotArt",  "ord_no", Ordnumber);
		results3 = executingQuery("Tempflg",  "ord_no", Ordnumber);
		results2 = executingQuery("Artcount", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
*/

		String recv_store = results.get(0).get(4).toString();
		String send_store = results.get(0).get(5).toString();
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();

		String supplier = data.getText("vendorname").replace("rec_store",recv_store);
		results1 = sql.executeQuery(getContext(), supplier);
		String Recvstore = results1.get(0).get(0).toString() + " (" + recv_store +")";
		results1.clear();
		String supplier1 = data.getText("vendorname").replace("rec_store",send_store);
		results1 = sql.executeQuery(getContext(), supplier1);
		String Sendstore = results1.get(0).get(0).toString() + " (" + send_store +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";

		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results2.get(0).get(1).toString());
		if(results2.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results2.get(0).get(0).toString());
		}

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		Double RcvWgt = 0.0;
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();
			RcvQty = Ordqty;
			Double PIqty = Double.parseDouble(result_temp.get(i).get(11).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";
			//Double RcvWgt = 0.0;
			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				RcvTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				RcvTotQty = PIQty1;
				OM = OM_RW;
				RcvWgt += Totqty;
			}

			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){
				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(Totqty.toString())+":"+decimalFormat1(PIqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+Sendstore+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results3.get(0).get(0).toString()+":"+Recvstore+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.IBTOrdRecinFullvthHighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after receiving the order ****;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);

		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving IBT Order in Full by giving high Temperature") //Vamshi
	public void ReceivingIBTorderinFullbygivingHighTemp() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+16;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("IBTorder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");

		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart",  "ord_no", Ordnumber);
		result3 = executingQuery("TotArt",  "ord_no", Ordnumber);
		results3 = executingQuery("Tempflg",  "ord_no", Ordnumber);
		results2 = executingQuery("Artcount", "ord_no", Ordnumber);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		} */
		String recv_store = results.get(0).get(4).toString();
		String send_store = results.get(0).get(5).toString();
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String supplier = data.getText("vendorname").replace("rec_store",recv_store);
		results1 = sql.executeQuery(getContext(), supplier);
		String Recvstore = results1.get(0).get(0).toString() + " (" + recv_store +")";
		results1.clear();
		String supplier1 = data.getText("vendorname").replace("rec_store",send_store);
		results1 = sql.executeQuery(getContext(), supplier1);
		String Sendstore = results1.get(0).get(0).toString() + " (" + send_store +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		String Method = "IBTHighTemp";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results2.get(0).get(1).toString());
		if(results2.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results2.get(0).get(0).toString());
		}

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		Double RcvWgt = 0.0;
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(11).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";
			//Double RcvWgt = 0.0;
			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			if((result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")) && result_temp.get(i).get(4).toString().equals("Y")){
				RcvQty = "0 "+result_temp.get(i).get(3).toString();
				RcvTotQty = "0 "+result_temp2.get(0).get(0).toString();
				RcvWgt += 0.0;
			}else if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")){
				RcvQty = "0 "+result_temp.get(i).get(3).toString();
				RcvTotQty = "0 "+result_temp2.get(0).get(0).toString();
			}else{
				RcvQty = Ordqty;
				RcvTotQty = OrdTotQty;
			}
			if((!result_temp.get(i).get(10).toString().equals("01") && !result_temp.get(i).get(10).toString().equals("03")) && result_temp.get(i).get(4).toString().equals("Y")){
				RcvQty = Ordqty;
				RcvTotQty = OrdTotQty;
				RcvWgt += Totqty;
			}
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(soh1.toString());
				}
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits.toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String store_soh = "";
				String store_pi_soh = "";
				if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")){
					store_soh = "0";
					store_pi_soh = "0";
				}
				else{
					store_soh = decimalFormat1(Totqty.toString());
					store_pi_soh = decimalFormat1(PIqty.toString());
				}
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+store_soh+":"+store_pi_soh;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				String RcvDispQty = "";
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String Rcvunits = "";
					if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")){
						RcvDispQty = "0 "+resultart.get(k).get(2).toString();
						Rcvunits = "0";
					}
					else{
						RcvDispQty = OrdQty;
						Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
					}
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+RcvDispQty;
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+Rcvunits;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("01") || result_temp.get(i).get(10).toString().equals("03")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(Totqty.toString());
				}
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+Sendstore+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results3.get(0).get(0).toString()+":"+Recvstore+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.IBTOrdRecinFullvthHighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving IBT Order in Full by Rejecting Not Ranged Articles") //Vamshi
	public void ReceivingIBTorderinFullbyRejectingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("IBTorder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "IBTReject";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart",  "ord_no", Ordnumber);
		result3 = executingQuery("TotArt",  "ord_no", Ordnumber);
		results3 = executingQuery("Tempflg",  "ord_no", Ordnumber);
		results2 = executingQuery("Artcount", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/
		String recv_store = results.get(0).get(4).toString();
		String send_store = results.get(0).get(5).toString();
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String supplier = data.getText("vendorname").replace("rec_store",recv_store);
		results1 = sql.executeQuery(getContext(), supplier);
		String Recvstore = results1.get(0).get(0).toString() + " (" + recv_store +")";
		results1.clear();
		String supplier1 = data.getText("vendorname").replace("rec_store",send_store);
		results1 = sql.executeQuery(getContext(), supplier1);
		String Sendstore = results1.get(0).get(0).toString() + " (" + send_store +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(results2.get(0).get(1).toString());
		if(results2.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(results2.get(0).get(0).toString());
		}

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		Double RcvWgt = 0.0;
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(11).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";
			//Double RcvWgt = 0.0;
			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			if((result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")) && result_temp.get(i).get(4).toString().equals("Y")){
				RcvQty = "0 "+result_temp.get(i).get(3).toString();
				RcvTotQty = "0 "+result_temp2.get(0).get(0).toString();
				RcvWgt += 0.0;
			}else if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
				RcvQty = "0 "+result_temp.get(i).get(3).toString();
				RcvTotQty = "0 "+result_temp2.get(0).get(0).toString();
			}else{
				RcvQty = Ordqty;
				RcvTotQty = OrdTotQty;
			}
			if((!result_temp.get(i).get(10).toString().equals("DA") && !result_temp.get(i).get(10).toString().equals("ES")) && result_temp.get(i).get(4).toString().equals("Y")){
				RcvQty = Ordqty;
				RcvTotQty = OrdTotQty;
				RcvWgt += Totqty;
			}
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(soh1.toString());
				}
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits.toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String store_soh = "";
				String store_pi_soh = "";
				if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
					store_soh = "0";
					store_pi_soh = "0";
				}
				else{
					store_soh = decimalFormat1(Totqty.toString());
					store_pi_soh = decimalFormat1(PIqty.toString());
				}
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+store_soh+":"+store_pi_soh;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);
				String RcvDispQty = "";
				for(int k = 0; k < resultart.size();k++){

					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					String Rcvunits = "";
					if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
						RcvDispQty = "0 "+resultart.get(k).get(2).toString();
						Rcvunits = "0";
					}
					else{
						RcvDispQty = OrdQty;
						Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
					}
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+RcvDispQty;
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+soh+":"+Rcvunits;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Rcvunits = "";
				if(result_temp.get(i).get(10).toString().equals("DA") || result_temp.get(i).get(10).toString().equals("ES")){
					Rcvunits = "0";
				}
				else{
					Rcvunits = decimalFormat1(Totqty.toString());
				}
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+SOH1+":"+Rcvunits;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+RcvQty+":"+RcvTotQty+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+Sendstore+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results3.get(0).get(0).toString()+":"+Recvstore+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.IBTOrdRecinFullvthHighTemp(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}


	public List<String> CalculatingSOHforRW(String art) throws SQLException
	{
		List<String> DBListRWSOH1 = new ArrayList<String>();
		String soh = "0";
		String pi_soh = "0";
		String SOH_SQL = data.getText("SOHSQL").replace("art_no",art);
		resultart1 = sql.executeQuery(getContext(), SOH_SQL);

		if(resultart1.size() == 0){
			soh = "0";
			pi_soh = "0";
		}
		else if (resultart1.get(0).get(0).equals("") || resultart1.get(0).get(0)==null){
			soh = "0";
			pi_soh = decimalFormat1(resultart1.get(0).get(1).toString());}
		else if(resultart1.get(0).get(1).equals("") || resultart1.get(0).get(1) == null){
			soh = decimalFormat1(resultart1.get(0).get(0).toString());
			pi_soh = "0";}
		else{
			soh = decimalFormat1(resultart1.get(0).get(0).toString());
			pi_soh = decimalFormat1(resultart1.get(0).get(1).toString());

		}
		DBListRWSOH1.add(soh);
		DBListRWSOH1.add(pi_soh);
		return DBListRWSOH1;
	}



	/*

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor Order in Full")//Vamshi
	public void ReceivingOrderInFull() //throws SQLException, IOException, AWTException, ParseException
	{
		TestStatus status = getTestStatus();
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		String Ordnumber1 = data.getText("Vendororder2");
		String invoice = data.getText("Invoice");
		//System.out.println("Details are loaded successfully for the order"+Ordnumber1);
		RecOrdPage.VendorOrdRecInFull(RecOrdObj,Ordnumber1,invoice);

		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		status.assertAll();


	} 
	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving DC order in Full")//Vamshi
	public void ReceivingDcOrderInFull() //throws SQLException, IOException, AWTException, ParseException
	{
		TestStatus status = getTestStatus();
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		String ordernumber3 = data.getText("segmentorder");
		String Chill = data.getText("Chilltemp");
		String Docket = data.getText("DocketID");
		String carrier = data.getText("Carrier");
		String uldrec = data.getText("UldRcQty");
		String uldret = data.getText("UldRetQty");
		//System.out.println("uldret");
		RecOrdPage.DcOrderReceiveinFull(RecOrdObj,ordernumber3,Chill,Docket,carrier,uldrec,uldret);

	    log.info("-----------Logout from Application---------");
	    loginPage.logoutFromAppl();
	    status.assertAll();


	}

	 */

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order in Full") //Aswini
	public void ReceivingOrderFullWarehouse() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+16;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);

		String whsename = results.get(0).get(4).toString();


		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
	//	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
	/*	if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
 */

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1;
		String TotalRcvdWgt = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					RcvQty = Ordqty;
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						RcvTotQty = Totqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						RcvTotQty = PIQty1;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(result_temp.get(i).get(4).toString())+":"+decimalFormat1(PIqty_Disp.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){

							resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String RcvDispQty = OrdQty;
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	
			TotalRcvdWgt = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
			TotalRcvdWgt = "0";
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+TotalRcvdWgt+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));


		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.WhseOrdRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp);
		RecOrdPage.WhseOrdRecFullvthhighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order through Exception by giving High Temperature") //Aswini
	public void ReceivingWarehouseOrderThroughExceptionbygivingHighTemp() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "HighTemp";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);

		String whsename = results.get(0).get(4).toString();

		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/


		String Deldate = results3.get(0).get(3).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							for(int ak = 0; ak < resultart3.size();ak++){
								if(resultart.get(k).get(0).toString().equals(resultart3.get(ak).get(2).toString())){
									resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

									if(resultart1.size() == 0){
										soh = "0";
									}
									else{
										soh = decimalFormat1(resultart1.get(0).get(0).toString());
									}
									String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
									String OrdQty = decimalFormat1(resultart3.get(ak).get(4).toString())+" "+resultart3.get(ak).get(3).toString();
									String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString()+":"+resultart.get(k).get(3).toString();
									DBListDisp.addAll(StringToListCreation(Str_Disp));

									String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
									DBListSOH.addAll(StringToListCreation(Str_SOH));
								}
							}
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	
		}else{
			TotalDspwgt1 = "NA";
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		String Chck = "";

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.WhseOrdRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp);
		DBListSOH1 = RecOrdPage.WarehouseRecvThroughException(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order through Exception by Rejecting Non-Ranged Articles") //Aswini
	public void ReceivingWarehouseOrderThroughExceptionbyRejectngArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "ASNReject";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);

		String whsename = results.get(0).get(4).toString();

		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/


		String Deldate = results3.get(0).get(3).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							for(int ak = 0; ak < resultart3.size();ak++){
								if(resultart.get(k).get(0).toString().equals(resultart3.get(ak).get(2).toString())){
									resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

									if(resultart1.size() == 0){
										soh = "0";
									}
									else{
										soh = decimalFormat1(resultart1.get(0).get(0).toString());
									}
									String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
									String OrdQty = decimalFormat1(resultart3.get(ak).get(4).toString())+" "+resultart3.get(ak).get(3).toString();
									String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString()+":"+resultart.get(k).get(3).toString();
									DBListDisp.addAll(StringToListCreation(Str_Disp));

									String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
									DBListSOH.addAll(StringToListCreation(Str_SOH));
								}
							}
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	
		}else{
			TotalDspwgt1 = "NA";
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		String Chck = "";	

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.WhseOrdRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp);
		DBListSOH1 = RecOrdPage.WarehouseRecvThroughException(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order through Exception by Accepting Non-Ranged Articles") //Aswini
	public void ReceivingWarehouseOrderThroughExceptionbyAcceptingArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "ASNAccept";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);

		String whsename = results.get(0).get(4).toString();

		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/


		String Deldate = results3.get(0).get(3).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							for(int ak = 0; ak < resultart3.size();ak++){
								if(resultart.get(k).get(0).toString().equals(resultart3.get(ak).get(2).toString())){

									resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

									if(resultart1.size() == 0){
										soh = "0";
									}
									else{
										soh = decimalFormat1(resultart1.get(0).get(0).toString());
									}
									String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
									String OrdQty = decimalFormat1(resultart3.get(ak).get(4).toString())+" "+resultart3.get(ak).get(3).toString();
									String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString()+":"+resultart.get(k).get(3).toString();
									DBListDisp.addAll(StringToListCreation(Str_Disp));

									String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
									DBListSOH.addAll(StringToListCreation(Str_SOH));
								}
							}
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	
		}else{
			TotalDspwgt1 = "NA";
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		String Chck = "";

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.WhseOrdRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp);
		DBListSOH1 = RecOrdPage.WarehouseRecvThroughException(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}
	
	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order through Exception") //Aswini
	public void ReceivingWarehouseOrderThroughException1() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "";
		String Chck = "Exception";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);

		String whsename = results.get(0).get(4).toString();

		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
*/

		String Deldate = results3.get(0).get(3).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							for(int ak = 0; ak < resultart3.size();ak++){
								if(resultart.get(k).get(0).toString().equals(resultart3.get(ak).get(2).toString())){

									resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

									if(resultart1.size() == 0){
										soh = "0";
									}
									else{
										soh = decimalFormat1(resultart1.get(0).get(0).toString());
									}
									String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
									String OrdQty = decimalFormat1(resultart3.get(ak).get(4).toString())+" "+resultart3.get(ak).get(3).toString();
									String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString()+":"+resultart.get(k).get(3).toString();
									DBListDisp.addAll(StringToListCreation(Str_Disp));

									String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
									DBListSOH.addAll(StringToListCreation(Str_SOH));
								}
							}
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	
		}else{
			TotalDspwgt1 = "NA";
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));


		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.WhseOrdRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp);
		DBListSOH1 = RecOrdPage.WarehouseRecvThroughException(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}



	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order in Full by Accepting Not Ranged Articles") //Aswini
	public void ReceivingOrderFullWarehousebyAcceptingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "STOAccept";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);

		String whsename = results.get(0).get(4).toString();


		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
	//	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
	/*	if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
*/

		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1;
		String TotalRcvdWgt = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					RcvQty = Ordqty;
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						RcvTotQty = Totqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						RcvTotQty = PIQty1;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(result_temp.get(i).get(4).toString())+":"+decimalFormat1(PIqty_Disp.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String RcvDispQty = OrdQty;

							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	
			TotalRcvdWgt = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
			TotalRcvdWgt = "0";
		}
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+TotalRcvdWgt+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));


		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.WhseOrdRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp);
		RecOrdPage.WhseOrdRecFullvthhighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order in Full by giving high Temperature") //Aswini
	public void ReceivingOrderFullWarehousebygivingHighTemp() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "HighTemp";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String whsename = results.get(0).get(4).toString();
		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/


		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1;
		String TotalRcvdWgt = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());

		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}
		Double RcvWgt = 0.0;

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}

					if((result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
						RcvWgt += 0.0;
					}else if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
					}else{
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
					}
					if((!result_temp.get(i).get(9).toString().equals("01") && !result_temp.get(i).get(9).toString().equals("03")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
						RcvWgt += Double.parseDouble(result_temp.get(i).get(4).toString());
					}

					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;

						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(soh1.toString());
						}

						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String store_soh = "";
						String store_pi_soh = "";
						if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
							store_soh = "0";
							store_pi_soh = "0";
						}
						else{
							store_soh = decimalFormat1(result_temp.get(i).get(4).toString());
							store_pi_soh = decimalFormat1(PIqty_Disp.toString());
						}
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+store_soh+":"+store_pi_soh;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						String RcvDispQty = "";
						for(int k = 0; k < resultart.size();k++){

							resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();

							String Rcvunits = "";
							if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
								RcvDispQty = "0 "+resultart.get(k).get(2).toString();
								Rcvunits = "0";
							}
							else{
								RcvDispQty = DispQty;
								Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
							}

							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+Rcvunits;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);

						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(Totqty.toString());
						}

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	

		}else{
			TotalDspwgt1 = "NA";

		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));


		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.WhseOrdRecFullvthhighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order in Full by Rejecting Not ranged Articles") //Aswini
	public void ReceivingOrderFullWarehousebyRejectingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "STOReject";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String whsename = results.get(0).get(4).toString();
		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		result_temp = executingQuery("Artdet", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
*/

		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1;
		String TotalRcvdWgt = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());

		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}
		Double RcvWgt = 0.0;

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(result_temp.get(i).get(5).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";

					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}

					if((result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
						RcvWgt += 0.0;
					}else if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
					}else{
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
					}
					if((!result_temp.get(i).get(9).toString().equals("DA") && !result_temp.get(i).get(9).toString().equals("ES")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
						RcvWgt += Double.parseDouble(result_temp.get(i).get(4).toString());
					}

					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;

						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(soh1.toString());
						}

						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String store_soh = "";
						String store_pi_soh = "";
						if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
							store_soh = "0";
							store_pi_soh = "0";
						}
						else{
							store_soh = decimalFormat1(result_temp.get(i).get(4).toString());
							store_pi_soh = decimalFormat1(PIqty_Disp.toString());
						}
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+store_soh+":"+store_pi_soh;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",Ordnumber).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						String RcvDispQty = "";
						for(int k = 0; k < resultart.size();k++){

							resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();

							String Rcvunits = "";
							if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
								RcvDispQty = "0 "+resultart.get(k).get(2).toString();
								Rcvunits = "0";
							}
							else{
								RcvDispQty = DispQty;
								Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
							}

							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+Rcvunits;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);

						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(Totqty.toString());
						}

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	

		}else{
			TotalDspwgt1 = "NA";

		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));


		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		RecOrdPage.WhseOrdRecFullvthhighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order in Full") //Aswini
	public void ReceivingOrderFullVendorASN() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+16;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "";
		result = executingQuery("VBELN", "ord_no", Ordnumber);

		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();

		results = executingQuery("OrderDetails", "ord_no", VBELN);

		String vndr = results.get(0).get(4).toString();
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		results1 = executingQuery("Whsename", "vendor_no", vndr);
		results2 = executingQuery("TotCart", "ord_no", VBELN);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
/*		results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
*/

		String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotalRcvwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}
		int count = 0;
		for (int i =0;i<result_temp.size();i++){
			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());
			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";

					RcvQty = dispqty;
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						RcvTotQty = Totqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						RcvTotQty = PIQty1;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);

						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(result_temp.get(i).get(4).toString())+":"+decimalFormat1(PIqty_Disp.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){

							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);

							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String RcvDispQty =  OrdQty;
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;
			TotalRcvwgt1 = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
			TotalRcvwgt1 = "0";
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+TotalRcvwgt1+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.VendorASNRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd);
		RecOrdPage.VendorASNRecFullvthHighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order in Full by Accepting Not Ranged Articles") //Aswini
	public void ReceivingOrderFullVendorASNbyAcceptingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "ASNAccept";
		result = executingQuery("VBELN", "ord_no", Ordnumber);

		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();

		results = executingQuery("OrderDetails", "ord_no", VBELN);

		String vndr = results.get(0).get(4).toString();
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		results1 = executingQuery("Whsename", "vendor_no", vndr);
		results2 = executingQuery("TotCart", "ord_no", VBELN);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);

			String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotalRcvwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}
		int count = 0;
		for (int i =0;i<result_temp.size();i++){
			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());
			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";

					RcvQty = dispqty;
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						RcvTotQty = Totqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						RcvTotQty = PIQty1;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);

						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(result_temp.get(i).get(4).toString())+":"+decimalFormat1(PIqty_Disp.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){

							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);

							if(resultart1.size() == 0){
								soh = "0";
							} else if(resultart1.get(0).get(0)==null){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String RcvDispQty =  OrdQty;
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+decimalFormat1(Totqty.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;
			TotalRcvwgt1 = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
			TotalRcvwgt1 = "0";
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+TotalRcvwgt1+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//RecOrdPage.VendorASNRecFull(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd);
		RecOrdPage.VendorASNRecFullvthHighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order by Line by Line option") //Aswini
	public void ReceivingOrderVendorASNLineByLine() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "";
		result = executingQuery("VBELN", "ord_no", Ordnumber);
		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();
		results = executingQuery("OrderDetails", "ord_no", VBELN);
		String vndr = results.get(0).get(4).toString();
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		results1 = executingQuery("Whsename", "vendor_no", vndr);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
	*/	String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();

		int count = 0;
		for (int i =0;i<result_temp.size();i++){
			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());
			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString()); 
					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";

					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
					else if(results2.get(j).get(6).toString().equals("Y")){
						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);
							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(11).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		DBListSOH1 = RecOrdPage.VendorASNRecLinebyLine(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}
	
	/*@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor order by Line by Line option") //Aswini
	public void ReceivingVendororderLineByLine() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "vendor_no", vndr);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("Artcount", "ord_no", Ordnumber);
		results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
    
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + results1.get(0).get(1).toString() +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString());
		Integer Artcount = Integer.parseInt(decimalFormat1(results3.get(0).get(1).toString()));
		
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Artcount;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);

				for(int k = 0; k < resultart.size();k++){
					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+soh;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp2.get(0).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Chck = "";
		DBListSOH1 = RecOrdPage.VendorRecLinebyLine(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		status.assertAll();
	}
	
	
	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor order through Receive by Exception option") //Aswini
	public void ReceivingVendororderThroughException() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "";
		String Chck = "Exception";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "vendor_no", vndr);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("Artcount", "ord_no", Ordnumber);
		results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
    
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + results1.get(0).get(1).toString() +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString());
		Integer Artcount = Integer.parseInt(decimalFormat1(results3.get(0).get(0).toString()));
		
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Artcount;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);

				for(int k = 0; k < resultart.size();k++){
					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+soh;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp2.get(0).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		DBListSOH1 = RecOrdPage.VendorRecbyException(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		status.assertAll();
	}

	
	
	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor order by Line by Line option by giving High Temperature") //Aswini
	public void ReceivingVendororderLineByLinevthHighTemp() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "VendorHighTemp";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "vendor_no", vndr);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("Artcount", "ord_no", Ordnumber);
		results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + results1.get(0).get(1).toString() +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString());
		Integer Artcount = Integer.parseInt(decimalFormat1(results3.get(0).get(0).toString()));
		
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Artcount;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				
				String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);

				for(int k = 0; k < resultart.size();k++){
					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+soh;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp2.get(0).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Chck = "";
		DBListSOH1 = RecOrdPage.VendorRecLinebyLine(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		status.assertAll();
	}
*/
	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor order by Line by Line option by Rejecting Not Ranged Articles") //Aswini
	public void ReceivingVendororderLineByLinebyrejectingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "POReject";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "vendor_no", vndr);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("Artcount", "ord_no", Ordnumber);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
*/
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + results1.get(0).get(1).toString() +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString());
		Integer Artcount = Integer.parseInt(decimalFormat1(results3.get(0).get(0).toString()));
		
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Artcount;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);

				for(int k = 0; k < resultart.size();k++){
					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+soh;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp2.get(0).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Chck = "";
		executingQuery("Insertord", "ord_no", Ordnumber);
		DBListSOH1 = RecOrdPage.VendorRecLinebyLine(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor order by Line by Line option by Accepting Not Ranged Articles") //Aswini
	public void ReceivingVendororderLineByLinebyAcceptingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("Vendororder1");
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String Method = "POAccept";
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "vendor_no", vndr);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("Artcount", "ord_no", Ordnumber);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + results1.get(0).get(1).toString() +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString());
		Integer Artcount = Integer.parseInt(decimalFormat1(results3.get(0).get(0).toString()));
		
		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString())+":"+Artcount;
		DBList.addAll(StringToListCreation(Str));

		String OrdDet = data.getText("OrdDet").replace("ord_no",Ordnumber);
		result_temp = sql.executeQuery(getContext(), OrdDet);
		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(1).toString();

			String baseuom = data.getText("Base_UOM").replace("art_no",art);
			result_temp2 = sql.executeQuery(getContext(), baseuom);
			String OrdTotQty = "";
			String OM = "";
			String OM_1 = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString();
			String OM_RW = decimalFormat1(result_temp.get(i).get(6).toString()) +" " +result_temp2.get(0).get(0).toString()+" "+decimalFormat1(result_temp.get(i).get(5).toString())+" (EA)";
			String Ordqty = decimalFormat1(result_temp.get(i).get(2).toString()) +" " +result_temp.get(i).get(3).toString();
			Double Totqty = Double.parseDouble(result_temp.get(i).get(2).toString()) * Double.parseDouble(result_temp.get(i).get(6).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+result_temp2.get(0).get(0).toString();

			Double PIqty = Double.parseDouble(result_temp.get(i).get(5).toString()) * Double.parseDouble(result_temp.get(i).get(2).toString()); 
			String PIQty1 = decimalFormat1(Totqty.toString())+" KG ("+ decimalFormat1(PIqty.toString()) + " EA)";

			if(result_temp.get(i).get(4).toString().equals("N")){
				OrdTotQty = Totqty1;
				OM = OM_1;
			}else{
				OrdTotQty = PIQty1;
				OM = OM_RW;
			}
			
			String soh = "";
			String pi_soh = "";
			if(result_temp.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", art);
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if(result_temp.get(i).get(4).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(art);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (result_temp.get(i).get(7).toString().equals("0") && result_temp.get(i).get(9).toString().equals("Y")){

				String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
				resultart = sql.executeQuery(getContext(), DispArt);

				for(int k = 0; k < resultart.size();k++){
					String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
					resultart1 = sql.executeQuery(getContext(), SOH_SQL);

					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}
					String OrdQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
					
					String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+resultart.size()+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+soh;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(art, soh);
				String Str_SOH = ""+art+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(9).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp2.get(0).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(10).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}
		String Chck = "";
		executingQuery("Insertord", "ord_no", Ordnumber);
		DBListSOH1 = RecOrdPage.VendorRecLinebyLine(RecOrdObj,Ordnumber,invoice, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,DBListDisp,Method,Chck,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}



	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order through Receive By Exception option") //Aswini
	public void ReceivingOrderVendorASNThroughException() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "";
		result = executingQuery("VBELN", "ord_no", Ordnumber);
		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();
		results = executingQuery("OrderDetails", "ord_no", VBELN);
		String vndr = results.get(0).get(4).toString();
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		results1 = executingQuery("Whsename", "vendor_no", vndr);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
	*/	String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result3.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();

		int count = 0;
		for (int i =0;i<result_temp.size();i++){
			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());
			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString()); 
					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";

					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
					else if(results2.get(j).get(6).toString().equals("Y")){
						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);
							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(11).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		/*if (count > 0){
			TotalDspwgt1 = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
		}*/
		if(result2.get(0).get(1)==null){
			TotalDspwgt1 = "NA";
		}else if( result2.get(0).get(1).toString().equals("0.0")){
			TotalDspwgt1 = "NA";
		}
			else{
		
			TotalDspwgt1 = decimalFormat1(result2.get(0).get(1).toString());	
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		DBListSOH1 = RecOrdPage.VendorASNRecThroughException(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order by Line by Line option by giving High Temperature") //Aswini
	public void ReceivingOrderVendorASNLineByLinevthHighTemp() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
			
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "HighTemp";
		result = executingQuery("VBELN", "ord_no", Ordnumber);
		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();
		results = executingQuery("OrderDetails", "ord_no", VBELN);
		String vndr = results.get(0).get(4).toString();
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		results1 = executingQuery("Whsename", "vendor_no", vndr);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
	*/	String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();

		int count = 0;
		for (int i =0;i<result_temp.size();i++){
			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());
			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString()); 
					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";

					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
					else if(results2.get(j).get(6).toString().equals("Y")){
						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);
							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(11).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		DBListSOH1 = RecOrdPage.VendorASNRecLinebyLine(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order by Line by Line option by By Rejecting Not Ranged Articles") //Aswini
	public void ReceivingOrderVendorASNLineByLineByRejectingNotrangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "ASNReject";
		result = executingQuery("VBELN", "ord_no", Ordnumber);
		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();
		results = executingQuery("OrderDetails", "ord_no", VBELN);
		String vndr = results.get(0).get(4).toString();
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		results1 = executingQuery("Whsename", "vendor_no", vndr);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
	*/	String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();

		int count = 0;
		for (int i =0;i<result_temp.size();i++){
			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());
			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();
			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString()); 
					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";

					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
					else if(results2.get(j).get(6).toString().equals("Y")){
						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							for(int s = 0; s < resultart3.size();s++){
						
							if(resultart.get(k).get(0).toString().equals(resultart3.get(s).get(2).toString())){
							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);
							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(s).get(4).toString())+" "+resultart3.get(s).get(3).toString();
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(11).toString();;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		DBListSOH1 = RecOrdPage.VendorASNRecLinebyLine(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order by Line by Line option by By Accepting Not Ranged Articles") //Aswini
	public void ReceivingOrderVendorASNLineByLineByAcceptingNotrangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "ASNAccept";
		result = executingQuery("VBELN", "ord_no", Ordnumber);
		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();
		results = executingQuery("OrderDetails", "ord_no", VBELN);
		String vndr = results.get(0).get(4).toString();
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		results1 = executingQuery("Whsename", "vendor_no", vndr);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
	*/	String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();

		int count = 0;
		for (int i =0;i<result_temp.size();i++){
			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());
			String Totdispqty2 = "";
			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString()); 
					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";

					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";
					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
					else if(results2.get(j).get(6).toString().equals("Y")){
						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){
							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);
							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+decimalFormat1(resultart.get(k).get(1).toString())+":"+resultart.get(k).get(2).toString();
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+soh;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+results2.get(j).get(9).toString()+":"+SOH1;
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(11).toString();;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString();
		DBList.addAll(StringToListCreation(Str));
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);
		DBListSOH1 = RecOrdPage.VendorASNRecLinebyLine(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,resultsdummy,driver);
		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}



	public void CalculatingSOHforVndrASNLinebyLine(List<List<Object>> DBListSOH, List<List<Object>> DBListSOH1) throws SQLException
	{	
		for (int i=0;i<DBListSOH.size();i++){
			if(DBListSOH.get(i).get(2).toString().equals("1")){
				results2 = executingQuery("CPBDArticle", "art_no", DBListSOH.get(i).get(0).toString());
				resultart1 = executingQuery("SOHSQL", "art_no", results2.get(0).get(0).toString());
			}else{
				resultart1 = executingQuery("SOHSQL", "art_no", DBListSOH.get(i).get(0).toString());
			}
			for(int j=0;j<DBListSOH1.size();j++){
				if(DBListSOH.get(i).get(0).toString().equals(DBListSOH1.get(j).get(0).toString())){
					if(DBListSOH.get(i).get(1).toString().equals("N")){
						Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(DBListSOH1.get(j).get(1).toString());
						String NewSOH1 = decimalFormat1(NewSOH.toString());
						if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1)){
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Pass");
						}else{
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Fail");
						}
					}
					else if(DBListSOH.get(i).get(1).toString().equals("Y")){
						Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(DBListSOH1.get(j).get(1).toString());
						String NewSOH1 = decimalFormat1(NewSOH.toString());
						Double NewPISOH = Double.parseDouble(DBListSOH.get(i).get(4).toString()) + Double.parseDouble(DBListSOH1.get(j).get(2).toString());
						String NewPISOH1 = decimalFormat1(NewPISOH.toString());

						if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1) && decimalFormat1(resultart1.get(0).get(1).toString()).toString().equals(NewPISOH1)){
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Pass");
						}else{
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Fail");
						}
					}
				}
			}
		}
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order in Full by giving high Temperature") //Aswini
	public void ReceivingOrderFullVendorASNvthHighTemp() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+18;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "HighTemp";
		result = executingQuery("VBELN", "ord_no", Ordnumber);

		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();

		results = executingQuery("OrderDetails", "ord_no", VBELN);

		String vndr = results.get(0).get(4).toString();

		results1 = executingQuery("Whsename", "vendor_no", vndr);
		results2 = executingQuery("TotCart", "ord_no", VBELN);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
		//results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		/*if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}*/


		String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotalRcvwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();

		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}
		Double RcvWgt = 0.0;

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";

			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";

					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					if((result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
						RcvWgt += 0.0;
					}else if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
					}else{
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
					}
					if((!result_temp.get(i).get(9).toString().equals("01") && !result_temp.get(i).get(9).toString().equals("03")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
						RcvWgt += Double.parseDouble(result_temp.get(i).get(4).toString());
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);

						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(soh1.toString());
						}
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());

						String store_soh = "";
						String store_pi_soh = "";
						if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
							store_soh = "0";
							store_pi_soh = "0";
						}
						else{
							store_soh = decimalFormat1(result_temp.get(i).get(4).toString());
							store_pi_soh = decimalFormat1(PIqty_Disp.toString());
						}

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+store_soh+":"+store_pi_soh;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						String RcvDispQty = "";
						for(int k = 0; k < resultart.size();k++){

							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);

							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String Rcvunits = "";
							if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
								RcvDispQty = "0 "+resultart.get(k).get(2).toString();
								Rcvunits = "0";
							}
							else{
								RcvDispQty = DispQty;
								Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
							}

							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+Rcvunits;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);

						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("01") || result_temp.get(i).get(9).toString().equals("03")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(Totqty.toString());
						}

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;

		}else{
			TotalDspwgt1 = "NA";

		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));
		executingQuery("Insertord", "ord_no", Ordnumber);
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		RecOrdPage.VendorASNRecFullvthHighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		executingQuery("Insertord", "ord_no", Ordnumber);

		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Vendor ASN order in Full by Rejecting Not Ranged Articles") //Aswini
	public void ReceivingOrderFullVendorASNbyRejectingNotRangedArticles() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		String invoice = data.getText("Invoice");
		String Method = "ASNReject";
		result = executingQuery("VBELN", "ord_no", Ordnumber);

		String VBELN = result.get(0).get(0).toString();
		String Ord_no = result.get(0).get(1).toString();

		results = executingQuery("OrderDetails", "ord_no", VBELN);

		String vndr = results.get(0).get(4).toString();

		results1 = executingQuery("Whsename", "vendor_no", vndr);
		results2 = executingQuery("TotCart", "ord_no", VBELN);
		result3 = executingQuery("TotArt", "ord_no", VBELN);
		result2 = executingQuery("TotCart", "ord_no", VBELN);
		results3 = executingQuery("OrdCar", "ord_no", VBELN);
		result_temp = executingQuery("Artdet", "ord_no", VBELN);
		results2 = executingQuery("OrdDet", "ord_no", VBELN);
		resultart3 = executingQuery("usernm", "userid", username);
	
		resultsdummy = executingQuery("Artcount", "ord_no", VBELN);
		String suplrname = results1.get(0).get(0).toString() + " (" + vndr +")";
		String Deldate = results.get(0).get(2).toString();
		String onShwdate = results3.get(0).get(3).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1 = "";
		String TotalRcvwgt1 = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String usernm1 = resultart3.get(0).get(0).toString();

		String RcvQty1 = "";
		Integer TotqArtvthoutTempArt = Integer.parseInt(result3.get(0).get(0).toString()) - Integer.parseInt(resultsdummy.get(0).get(1).toString());
		if(resultsdummy.get(0).get(0)==null){
			RcvQty1 = "0";
		}else{
			RcvQty1 = decimalFormat1(resultsdummy.get(0).get(0).toString());
		}
		Double RcvWgt = 0.0;

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			results1 = executingQuery("Base_UOM", "art_no", result_temp.get(i).get(0).toString());

			String Totdispqty2 = "";

			Double Totqty = Double.parseDouble(result_temp.get(i).get(4).toString());
			String Totqty1 = decimalFormat1(Totqty.toString()) + " "+results1.get(0).get(0).toString();

			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";
			String RcvQty = "";
			String RcvTotQty = "";
			String dispqty = decimalFormat1(result_temp.get(i).get(3).toString()) +" " +result_temp.get(i).get(2).toString();

			for(int j =0;j<result_temp.size();j++){

				if(result_temp.get(i).get(0).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString();
					String OM_RW = decimalFormat1(results2.get(j).get(8).toString()) +" " +results1.get(0).get(0).toString()+" "+decimalFormat1(results2.get(j).get(7).toString())+" (EA)";
					Ordqty = decimalFormat1(results2.get(j).get(3).toString()) +" " +results2.get(j).get(4).toString();
					Double OrdTotqty = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(8).toString());
					OrdTotqty1 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString();

					Double PIqty_Ord = Double.parseDouble(results2.get(j).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());
					Double PIqty_Disp = Double.parseDouble(result_temp.get(i).get(3).toString()) * Double.parseDouble(results2.get(j).get(7).toString());

					String PIQty1 = decimalFormat1(result_temp.get(i).get(4).toString())+" KG ("+ decimalFormat1(PIqty_Disp.toString()) + " EA)";
					OrdTotQty2 = decimalFormat1(OrdTotqty.toString()) + " "+results1.get(0).get(0).toString() +" ("+ decimalFormat1(PIqty_Ord.toString()) + " EA)";

					if(results2.get(j).get(6).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					if((result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
						RcvWgt += 0.0;
					}else if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
						RcvQty = "0 "+results2.get(j).get(4).toString();
						RcvTotQty = "0 "+results1.get(0).get(0).toString();
					}else{
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
					}
					if((!result_temp.get(i).get(9).toString().equals("DA") && !result_temp.get(i).get(9).toString().equals("ES")) && results2.get(j).get(6).toString().equals("Y")){
						RcvQty = dispqty;
						RcvTotQty = Totdispqty2;
						RcvWgt += Double.parseDouble(result_temp.get(i).get(4).toString());
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(9).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(0).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);

						Double soh1 = Double.parseDouble(Totqty.toString()) * 24;
						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(soh1.toString());
						}
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(6).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(0).toString());

						String store_soh = "";
						String store_pi_soh = "";
						if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
							store_soh = "0";
							store_pi_soh = "0";
						}
						else{
							store_soh = decimalFormat1(result_temp.get(i).get(4).toString());
							store_pi_soh = decimalFormat1(PIqty_Disp.toString());
						}

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+store_soh+":"+store_pi_soh;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(9).toString().equals("0") && results2.get(j).get(11).toString().equals("Y")){

						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(0).toString()).replace("ord_no",VBELN);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",VBELN).replace("art_no",result_temp.get(i).get(0).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						String RcvDispQty = "";
						for(int k = 0; k < resultart.size();k++){

							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							resultart1 = sql.executeQuery(getContext(), SOH_SQL);

							if(resultart1.size() == 0){
								soh = "0";
							}else if(resultart1.get(0).get(0)==null){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String Rcvunits = "";
							if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
								RcvDispQty = "0 "+resultart.get(k).get(2).toString();
								Rcvunits = "0";
							}
							else{
								RcvDispQty = DispQty;
								Rcvunits = decimalFormat1(resultart.get(k).get(1).toString());
							}

							String Str_Disp = ""+result_temp.get(i).get(0).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty+":"+RcvDispQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(6).toString()+":"+soh+":"+Rcvunits;
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(0).toString(), soh);

						String Rcvunits = "";
						if(result_temp.get(i).get(9).toString().equals("DA") || result_temp.get(i).get(9).toString().equals("ES")){
							Rcvunits = "0";
						}
						else{
							Rcvunits = decimalFormat1(Totqty.toString());
						}

						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(6).toString()+":"+SOH1+":"+Rcvunits;
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
				}
			}
			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+result_temp.get(i).get(2).toString()+":"+result_temp.get(i).get(3).toString()+":"+result_temp.get(i).get(4).toString()+":"+result_temp.get(i).get(5).toString()+":"+OM+":"+dispqty+":"+Totdispqty2+":"+results1.get(0).get(0).toString()+":"+Ordqty+":"+OrdTotQty3+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(7).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+RcvQty+":"+RcvTotQty;
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;

		}else{
			TotalDspwgt1 = "NA";

		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result3.get(0).get(0).toString()+":"+TotOrdCar+":"+results3.get(0).get(2).toString()+":"+results2.get(0).get(12).toString()+":"+decimalFormat1(RcvWgt.toString())+":"+RcvQty1+":"+decimalFormat1(TotqArtvthoutTempArt.toString());
		DBList.addAll(StringToListCreation(Str));
		executingQuery("Insertord", "ord_no", Ordnumber);
		//System.out.println("Details are loaded successfully for the order" +Ordnumber);
		RecOrdPage.VendorASNRecFullvthHighTemp(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,invoice,usernm1,DBListDisp,DBListDispOrd,Method,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order in Full having Warehouse Sellable articles") //Aswini
	public void ReceivingOrderFullWarehouseSellable() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+16;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");

		results = executingQuery("OrderDetails", "ord_no", Ordnumber);

		String whsename = results.get(0).get(2).toString();

		results1 = executingQuery("Whsename", "DC_no", whsename);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		results3 = executingQuery("OrdCar", "ord_no", Ordnumber);
		resultart1 = executingQuery("TotArt", "ord_no", Ordnumber);
		results2 = executingQuery("OrdDet", "ord_no", Ordnumber);
		resultart2 = executingQuery("SOHDisp", "ord_no", Ordnumber);
	/*	results_ord = executingQuery("checkOrd", "ord_no", Ordnumber);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", Ordnumber);
		}
	*/	String Deldate = results3.get(0).get(3).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + whsename +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());
		String TotArt = decimalFormat1(resultart1.get(0).get(0).toString());
		String TotalDspwgt1 = "NA";
		String TotalRcvdWgt = "0";

		for (int i =0;i<results2.size();i++){

			String Str1 = ""+results2.get(i).get(0).toString()+":"+results2.get(i).get(1).toString()+":"+results2.get(i).get(2).toString()+":"+results2.get(i).get(3).toString()+":"+results2.get(i).get(4).toString()+":"+results2.get(i).get(5).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		for (int j=0;j<resultart2.size();j++){
			String soh = "";

			String SOH1 = CalculatingSOHforHAWA(resultart2.get(j).get(0).toString(), soh);
			String Str_SOH = ""+resultart2.get(j).get(0).toString()+":"+SOH1+":"+decimalFormat1(resultart2.get(j).get(1).toString());
			DBListSOH.addAll(StringToListCreation(Str_SOH));
		}

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(1).toString()+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+TotArt+":"+TotOrdCar+":"+TotalRcvdWgt;
		DBList.addAll(StringToListCreation(Str));
		executingQuery("Insertord", "ord_no", Ordnumber);

		//System.out.println("Details are loaded successfully for the order"+Ordnumber);
		RecOrdPage.WhseOrdRecFullSellable(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username,usernm1,driver);
		htmlToExtent(cName,mName,extLogger,driver,"**** Checking the SOH Updations after receiving the order;;;Pass");
		for (int i=0;i<DBListSOH.size();i++){

			resultart1 = executingQuery("SOHSQL", "art_no", DBListSOH.get(i).get(0).toString());
			Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(1).toString()) + Double.parseDouble(DBListSOH.get(i).get(2).toString());
			String NewSOH1 = decimalFormat1(NewSOH.toString());
			if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1)){
				htmlToExtent(cName,mName,extLogger,driver, "SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is "+NewSOH1+";DB Value is "+decimalFormat1(resultart1.get(0).get(0).toString())+";Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver, "SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is "+NewSOH1+";DB Value is "+decimalFormat1(resultart1.get(0).get(0).toString())+";Fail");
			}
		}
		executingQuery("Insertord", "ord_no", Ordnumber);
		//executingQuery("DeletingOrd", "ord_no", Ordnumber);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Receiving Warehouse order in Full having single Segment") //Aswini
	public void ReceivingSingleSegmentOrderFull() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+17;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();	
		List<List<Object>> DBListDispOrd = new ArrayList<List<Object>>();
		List<List<Object>> result_seg = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String Ordnumber = data.getText("orderNo");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");

		result_seg = executingQuery("SegDel", "ord_no", Ordnumber);
		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String seg_del = result_seg.get(0).get(0).toString();
		executingQuery("Insertord", "ord_no", seg_del);
		executingQuery("Insertord", "ord_no", Ordnumber);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", seg_del);
		results3 = executingQuery("OrdCar", "ord_no", seg_del);
		result_temp = executingQuery("Disp_det", "ord_no", seg_del);
		results2 = executingQuery("OrdDet", "ord_no", seg_del);
		/*results_ord = executingQuery("checkOrd", "ord_no", seg_del);
		if(results_ord.size()>0){
		}else{
			executingQuery("Insertord", "ord_no", seg_del);
		}
*/

		String Deldate = results3.get(0).get(3).toString();
		String Deldate2 = results3.get(0).get(4).toString();
		String onShwdate = results3.get(0).get(2).toString();
		String suplrname = results.get(0).get(2).toString();
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());
		String TotalDspwgt = decimalFormat1(result2.get(0).get(1).toString());
		String TotalDspwgt1;
		String TotalRcvdWgt = "";
		String TotOrdCar = decimalFormat1(results3.get(0).get(1).toString());

		int count = 0;
		for (int i =0;i<result_temp.size();i++){

			String Totdispqty2 = "";
			String Totqty1 = result_temp.get(i).get(3).toString();
			String PIQty1 = result_temp.get(i).get(8).toString();
			String OM = "";
			String Ordqty = "";
			String OrdTotqty1 = "";
			String OrdTotQty2 = "";
			String OrdTotQty3 = "";

			String dispqty =result_temp.get(i).get(2).toString();

			for(int j =0;j<results2.size();j++){

				if(result_temp.get(i).get(1).toString().equals(results2.get(j).get(2).toString())){
					String OM_1 = results2.get(j).get(5).toString();
					String OM_RW = results2.get(j).get(5).toString()+" "+decimalFormat1(results2.get(j).get(12).toString())+" (EA)";
					Ordqty = results2.get(j).get(3).toString(); 
					OrdTotqty1 = results2.get(j).get(10).toString();
					OrdTotQty2 = results2.get(j).get(11).toString();

					if(results2.get(j).get(4).toString().equals("N")){
						Totdispqty2 = Totqty1;
						OrdTotQty3 = OrdTotqty1;
						OM = OM_1;
					}else{
						Totdispqty2 = PIQty1;
						OrdTotQty3 = OrdTotQty2;
						OM = OM_RW;
						count+=1;
					}
					String soh = "";
					String pi_soh = "";
					if(results2.get(j).get(6).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", result_temp.get(i).get(1).toString());
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						Double soh1 = Double.parseDouble(result_temp.get(i).get(5).toString()) * 24;
						String Str_SOH = ""+resultart.get(0).get(0).toString()+":"+results2.get(j).get(4).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if(results2.get(j).get(4).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(result_temp.get(i).get(1).toString());
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(4).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(result_temp.get(i).get(6).toString())+":"+decimalFormat1(result_temp.get(i).get(7).toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}
					else if (results2.get(j).get(6).toString().equals("0") && results2.get(j).get(8).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",result_temp.get(i).get(1).toString()).replace("ord_no",seg_del);
						resultart = sql.executeQuery(getContext(), DispArt);

						String DispArtOrd = data.getText("DispArtOrd").replace("ord_no",seg_del).replace("art_no",result_temp.get(i).get(1).toString());
						resultart3 = sql.executeQuery(getContext(), DispArtOrd);
						for(int k = 0; k < resultart.size();k++){

							resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(0).toString());

							if(resultart1.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(resultart1.get(0).get(0).toString());
							}
							String DispQty = decimalFormat1(resultart.get(k).get(1).toString())+" "+resultart.get(k).get(2).toString();
							String OrdQty = decimalFormat1(resultart3.get(k).get(4).toString())+" "+resultart3.get(k).get(3).toString();
							String Str_Disp = ""+result_temp.get(i).get(1).toString()+":"+resultart.get(k).get(0).toString()+":"+DispQty+":"+resultart.size()+":"+OrdQty;
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_SOH = ""+resultart.get(k).get(0).toString()+":"+results2.get(j).get(4).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(1).toString());
							DBListSOH.addAll(StringToListCreation(Str_SOH));
						}
					}
					else{
						String SOH1 = CalculatingSOHforHAWA(result_temp.get(i).get(1).toString(), soh);
						String Str_SOH = ""+results2.get(j).get(2).toString()+":"+results2.get(j).get(4).toString()+":"+SOH1+":"+decimalFormat1(result_temp.get(i).get(5).toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}

				}
			}
			String Str1 = ""+Ordnumber+":"+result_temp.get(i).get(0).toString()+":"+result_temp.get(i).get(1).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty3+":"+dispqty+":"+Totdispqty2+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(10).toString()+":"+result_temp.get(i).get(11).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		if (count > 0){
			TotalDspwgt1 = TotalDspwgt;	
			TotalRcvdWgt = TotalDspwgt;
		}else{
			TotalDspwgt1 = "NA";
			TotalRcvdWgt = "0";
		}

		String Str = ""+Ordnumber+":"+result_seg.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+suplrname+":"+TotalCartons+":"+TotalDspwgt1+":"+result2.get(0).get(2).toString()+":"+TotOrdCar+":"+results2.get(0).get(9).toString()+":"+TotalRcvdWgt+":"+Deldate2;
		DBList.addAll(StringToListCreation(Str));

		//System.out.println("Details are loaded successfully for the order "+Ordnumber);
		RecOrdPage.WhseOrdRecSingleSegment(RecOrdObj,Ordnumber, DBList, DBList1,ChldTemp,FrznTemp,username, DBListDisp,usernm1,driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the SOH updations after receiving the order;;;Pass");
		CalculatingSOHforFull(DBListSOH);
		executingQuery("Insertord", "ord_no", seg_del);
		//executingQuery("DeletingOrd", "ord_no", seg_del);
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Correcting the received order in Browser") //Vamshi
	public void CorrectingtheReceivedVendororder1() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> results4 = new ArrayList<List<Object>>();
		List<List<Object>> resultart12 = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String RndmWgt = data.getText("RandomWgt");
		String Ordnumber = data.getText("Vendororder");

		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "vendor_no", vndr);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		result_temp = executingQuery("OrdDet", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("RecvngDet", "ord_no", Ordnumber);
		results4 = executingQuery("RecvArtDet", "ord_no", Ordnumber);
		results2 = executingQuery("Rcvdwgt", "ord_no", Ordnumber);

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + results1.get(0).get(1).toString() +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+results2.get(0).get(0).toString();
		DBList.addAll(StringToListCreation(Str));

		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(0).toString();
			String Ordqty = result_temp.get(i).get(2).toString();
			String Totqty1 = result_temp.get(i).get(3).toString();
			String PIQty1 = result_temp.get(i).get(3).toString()+" ("+ result_temp.get(i).get(4).toString() + ")";
			String OrdTotQty = "";
			String RcvdTotQty = "";
			String OM = "";
			String RecvdQty = "";
			String soh = "";
			String pi_soh = "";
			String Recv_OM = "";
			String OMvthoutUOM = decimalFormat1(result_temp.get(i).get(11).toString());			

			for (int j=0;j<results4.size();j++){

				if(art.equals(results4.get(j).get(0).toString())){
					Recv_OM = decimalFormat1(results4.get(j).get(13).toString());
					String OM_1 = results4.get(j).get(5).toString();
					String OM_RW = results4.get(j).get(5).toString() + " " +decimalFormat1(results4.get(j).get(11).toString())+ " (EA)";
					RecvdQty = results4.get(j).get(1).toString();
					String TotRcvdQty = results4.get(j).get(2).toString();
					String PIQtyRecvd1 = results4.get(j).get(3).toString()+" ("+ results4.get(j).get(4).toString() + ")";

					if(result_temp.get(i).get(5).toString().equals("N")){
						OrdTotQty = Totqty1;
						RcvdTotQty = TotRcvdQty;
						OM = OM_1;
					}else{
						OrdTotQty = PIQty1;
						RcvdTotQty = PIQtyRecvd1;
						OM = OM_RW;
					}
					if(art.equals(results4.get(j).get(0).toString()) && result_temp.get(i).get(6).toString().equals("0") && result_temp.get(i).get(8).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						for(int k = 0; k < resultart.size();k++){

							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							List<List<Object>> result_SOH = sql.executeQuery(getContext(), SOH_SQL);

							if(result_SOH.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(result_SOH.get(0).get(0).toString());
							}

							String OrdQty = resultart.get(k).get(1).toString();

							String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+OrdQty+":"+OrdQty+":"+OrdQty+":"+resultart.size()+":"+resultart.get(k).get(3).toString()+":"+resultart.get(k).get(4).toString();
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_Disp_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(2).toString());
							DBListSOH.addAll(StringToListCreation(Str_Disp_SOH));
						}
					}
					else if(result_temp.get(i).get(5).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(art);

						String Str_SOH = ""+art+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(results4.get(j).get(9).toString())+":"+decimalFormat1(results4.get(j).get(10).toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
					else if(result_temp.get(i).get(6).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", art);
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						Double soh1 = Double.parseDouble(results4.get(j).get(8).toString()) * 24;
						String Str_SOH = ""+art+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}else{
						String SOH1 = CalculatingSOHforHAWA(art, soh);

						String Str_SOH = ""+art+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+SOH1+":"+decimalFormat1(results4.get(j).get(8).toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}

					break;
				}

				if((results4.get(j).get(6))!=null){
					if(art.equals(results4.get(j).get(6).toString())){
						OrdTotQty = Totqty1;
						RecvdQty = "";
						RcvdTotQty = "NA";
						Recv_OM = "1";
						OM = result_temp.get(i).get(1).toString();
						if (result_temp.get(i).get(6).toString().equals("0") && result_temp.get(i).get(8).toString().equals("Y")){

							String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
							resultart = sql.executeQuery(getContext(), DispArt);

							String RcvdDispArt = data.getText("RecvDispArtDet").replace("art_no",art).replace("ord_no",Ordnumber);
							resultart12 = sql.executeQuery(getContext(), RcvdDispArt);

							for(int k = 0; k < resultart.size();k++){
								String OrdQty = resultart.get(k).get(1).toString();
								for(int s=0;s<resultart12.size();s++){
									if(resultart.get(k).get(0).toString().equals(resultart12.get(s).get(0).toString())){

										String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
										List<List<Object>> result_SOH = sql.executeQuery(getContext(), SOH_SQL);

										if(result_SOH.size() == 0){
											soh = "0";
										}
										else{
											soh = decimalFormat1(result_SOH.get(0).get(0).toString());
										}

										String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+OrdQty+":"+resultart12.get(s).get(1).toString()+":"+resultart12.get(s).get(2).toString()+":"+resultart.size()+":"+resultart12.get(s).get(7).toString()+":"+decimalFormat1(resultart12.get(s).get(8).toString());
										DBListDisp.addAll(StringToListCreation(Str_Disp));

										String Str_Disp_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+soh+":"+decimalFormat1(resultart12.get(s).get(6).toString());
										DBListSOH.addAll(StringToListCreation(Str_Disp_SOH));
									}
								}
							}
							break;
						}
					}
				}

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":NA:NA:"+RecvdQty+":"+RcvdTotQty+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(10).toString()+":"+OMvthoutUOM+":"+result_temp.get(i).get(12).toString()+":"+Recv_OM;
			DBList1.addAll(StringToListCreation(Str1));
		}

		//System.out.println("Details are loaded successfully for the order "+Ordnumber);
		DBListSOH1 = RecOrdPage.Correctingtheorder(RecOrdObj,Ordnumber, DBList, DBList1,username,usernm1,DBListDisp,results3,RndmWgt,driver);

		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		for (int i=0;i<DBListSOH.size();i++){
			if(DBListSOH.get(i).get(2).toString().equals("1")){
				results2 = executingQuery("CPBDArticle", "art_no", DBListSOH.get(i).get(0).toString());
				resultart1 = executingQuery("SOHSQL", "art_no", results2.get(0).get(0).toString());
			}else{
				resultart1 = executingQuery("SOHSQL", "art_no", DBListSOH.get(i).get(0).toString());
			}
			for(int j=0;j<DBListSOH1.size();j++){
				if(DBListSOH.get(i).get(0).toString().equals(DBListSOH1.get(j).get(0).toString())){
					if(DBListSOH.get(i).get(1).toString().equals("N")){
						Double diff = Double.parseDouble(DBListSOH1.get(j).get(1).toString()) - Double.parseDouble(DBListSOH.get(i).get(4).toString());
						Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(diff.toString());
						String NewSOH1 = decimalFormat1(NewSOH.toString());
						if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1)){
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Pass");
						}else{
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Fail");
						}
					}
					else if(DBListSOH.get(i).get(1).toString().equals("Y")){
						Double diff_wgt = Double.parseDouble(DBListSOH1.get(j).get(1).toString()) - Double.parseDouble(DBListSOH.get(i).get(5).toString());
						Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(diff_wgt.toString());
						String NewSOH1 = decimalFormat1(NewSOH.toString());
						Double diff_piqty = Double.parseDouble(DBListSOH1.get(j).get(2).toString()) - Double.parseDouble(DBListSOH.get(i).get(6).toString());
						Double NewPISOH = Double.parseDouble(DBListSOH.get(i).get(4).toString()) + Double.parseDouble(diff_piqty.toString());
						String NewPISOH1 = decimalFormat1(NewPISOH.toString());

						if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1) && decimalFormat1(resultart1.get(0).get(1).toString()).toString().equals(NewPISOH1)){
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Pass");
						}else{
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Fail");
						}
					}
				}
			}
		}
		List<List<Object>> results_transid = executingQuery("TransID", "ord_no", Ordnumber);
		executingQuery("DelEntries", "transid1", results_transid.get(0).get(0).toString());
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Correcting the received order by changing the OM of the articles in Browser") //Vamshi
	public void CorrectingtheReceivedVendororderbychangingOM() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+9;}
		List<List<Object>> DBList = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<List<Object>> DBListDisp1 = new ArrayList<List<Object>>();
		List<List<Object>> results4 = new ArrayList<List<Object>>();
		List<List<Object>> resultart12 = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String RndmWgt = data.getText("RandomWgt");
		String Ordnumber = data.getText("Vendororder1");

		results = executingQuery("OrderDetails", "ord_no", Ordnumber);
		String vndr = results.get(0).get(4).toString();
		results1 = executingQuery("vendorname", "vendor_no", vndr);
		resultart3 = executingQuery("usernm", "userid", username);
		result2 = executingQuery("TotCart", "ord_no", Ordnumber);
		result3 = executingQuery("TotArt", "ord_no", Ordnumber);
		result_temp = executingQuery("OrdDet", "ord_no", Ordnumber);
		results23 = executingQuery("Tempflg", "ord_no", Ordnumber);
		results3 = executingQuery("RecvngDet", "ord_no", Ordnumber);
		results4 = executingQuery("RecvArtDet", "ord_no", Ordnumber);
		results2 = executingQuery("Rcvdwgt", "ord_no", Ordnumber);

		String Deldate = results.get(0).get(1).toString();
		String onShwdate = results.get(0).get(2).toString();
		String suplrname = results1.get(0).get(0).toString() + " (" + results1.get(0).get(1).toString() +")";
		String usernm1 = resultart3.get(0).get(0).toString();
		String TotalCartons = decimalFormat1(result2.get(0).get(0).toString());

		String Str = ""+results.get(0).get(0).toString()+":"+Deldate+":"+onShwdate+":"+results.get(0).get(3).toString()+":"+suplrname+":"+TotalCartons+":"+result3.get(0).get(0).toString()+":"+usernm1+":"+results23.get(0).get(0).toString()+":"+results2.get(0).get(0).toString();
		DBList.addAll(StringToListCreation(Str));

		for (int i =0;i<result_temp.size();i++){
			String art = result_temp.get(i).get(0).toString();
			String Ordqty = result_temp.get(i).get(2).toString();
			String Totqty1 = result_temp.get(i).get(3).toString();
			String PIQty1 = result_temp.get(i).get(3).toString()+" ("+ result_temp.get(i).get(4).toString() + ")";
			String OrdTotQty = "";
			String RcvdTotQty = "";
			String OM = "";
			String RecvdQty = "";
			String soh = "";
			String pi_soh = "";
			String Recv_OM = "";
			String OMvthoutUOM = decimalFormat1(result_temp.get(i).get(11).toString());			

			for (int j=0;j<results4.size();j++){

				if(art.equals(results4.get(j).get(0).toString())){
					Recv_OM = decimalFormat1(results4.get(j).get(13).toString());
					String OM_1 = results4.get(j).get(5).toString();
					String OM_RW = results4.get(j).get(5).toString() + " " +decimalFormat1(results4.get(j).get(11).toString())+ " (EA)";
					RecvdQty = results4.get(j).get(1).toString();
					String TotRcvdQty = results4.get(j).get(2).toString();
					String PIQtyRecvd1 = results4.get(j).get(3).toString()+" ("+ results4.get(j).get(4).toString() + ")";

					if(result_temp.get(i).get(5).toString().equals("N")){
						OrdTotQty = Totqty1;
						RcvdTotQty = TotRcvdQty;
						OM = OM_1;
					}else{
						OrdTotQty = PIQty1;
						RcvdTotQty = PIQtyRecvd1;
						OM = OM_RW;
					}
					if(art.equals(results4.get(j).get(0).toString()) && result_temp.get(i).get(6).toString().equals("0") && result_temp.get(i).get(8).toString().equals("Y")){
						String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
						resultart = sql.executeQuery(getContext(), DispArt);

						for(int k = 0; k < resultart.size();k++){

							String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
							List<List<Object>> result_SOH = sql.executeQuery(getContext(), SOH_SQL);

							if(result_SOH.size() == 0){
								soh = "0";
							}
							else{
								soh = decimalFormat1(result_SOH.get(0).get(0).toString());
							}

							String OrdQty = resultart.get(k).get(1).toString();

							String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+OrdQty+":"+OrdQty+":"+OrdQty+":"+resultart.size()+":"+resultart.get(k).get(3).toString()+":"+resultart.get(k).get(4).toString();
							DBListDisp.addAll(StringToListCreation(Str_Disp));

							String Str_Disp1 = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+OrdQty+":NA:NA:"+OrdQty+":"+OrdQty+":"+resultart.size();
							DBListDisp1.addAll(StringToListCreation(Str_Disp1));

							String Str_Disp_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+soh+":"+decimalFormat1(resultart.get(k).get(2).toString());
							DBListSOH.addAll(StringToListCreation(Str_Disp_SOH));
						}
					}
					else if(result_temp.get(i).get(5).toString().equals("Y")){

						DBListRWSOH = CalculatingSOHforRW(art);

						String Str_SOH = ""+art+":"+result_temp.get(i).get(5).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString()+":"+decimalFormat1(results4.get(j).get(9).toString())+":"+decimalFormat1(results4.get(j).get(10).toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}
					else if(result_temp.get(i).get(6).toString().equals("1")){
						resultart = executingQuery("CPBDArticle", "art_no", art);
						String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
						Double soh1 = Double.parseDouble(results4.get(j).get(8).toString()) * 24;
						String Str_SOH = ""+art+":"+result_temp.get(i).get(5).toString()+":"+SOH1+":"+decimalFormat1(soh1.toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));

					}else{
						String SOH1 = CalculatingSOHforHAWA(art, soh);

						String Str_SOH = ""+art+":"+result_temp.get(i).get(5).toString()+":"+SOH1+":"+decimalFormat1(results4.get(j).get(8).toString());
						DBListSOH.addAll(StringToListCreation(Str_SOH));
					}

					break;
				}

				if((results4.get(j).get(6))!=null){
					if(art.equals(results4.get(j).get(6).toString())){
						OrdTotQty = Totqty1;
						RecvdQty = "";
						RcvdTotQty = "NA";
						Recv_OM = "1";
						OM = result_temp.get(i).get(1).toString();
						if (result_temp.get(i).get(6).toString().equals("0") && result_temp.get(i).get(8).toString().equals("Y")){

							String DispArt = data.getText("DispArt").replace("art_no",art).replace("ord_no",Ordnumber);
							resultart = sql.executeQuery(getContext(), DispArt);

							String RcvdDispArt = data.getText("RecvDispArtDet").replace("art_no",art).replace("ord_no",Ordnumber);
							resultart12 = sql.executeQuery(getContext(), RcvdDispArt);

							for(int k = 0; k < resultart.size();k++){
								String OrdQty = resultart.get(k).get(1).toString();
								for(int s=0;s<resultart12.size();s++){
									if(resultart.get(k).get(0).toString().equals(resultart12.get(s).get(0).toString())){

										String SOH_SQL = data.getText("SOHSQL").replace("art_no",resultart.get(k).get(0).toString());
										List<List<Object>> result_SOH = sql.executeQuery(getContext(), SOH_SQL);

										if(result_SOH.size() == 0){
											soh = "0";
										}
										else{
											soh = decimalFormat1(result_SOH.get(0).get(0).toString());
										}

										String Str_Disp = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+OrdQty+":"+resultart12.get(s).get(1).toString()+":"+resultart12.get(s).get(2).toString()+":"+resultart.size()+":"+resultart12.get(s).get(7).toString()+":"+decimalFormat1(resultart12.get(s).get(8).toString());
										DBListDisp.addAll(StringToListCreation(Str_Disp));

										String Str_Disp1 = ""+art+":"+resultart.get(k).get(0).toString()+":"+OrdQty+":"+OrdQty+":NA:NA:"+resultart12.get(s).get(1).toString()+":"+resultart12.get(s).get(2).toString()+":"+resultart.size();
										DBListDisp1.addAll(StringToListCreation(Str_Disp1));

										String Str_Disp_SOH = ""+resultart.get(k).get(0).toString()+":"+result_temp.get(i).get(5).toString()+":"+soh+":"+decimalFormat1(resultart12.get(s).get(6).toString());
										DBListSOH.addAll(StringToListCreation(Str_Disp_SOH));
									}
								}
							}
							break;
						}
					}
				}

			}

			String Str1 = ""+result_temp.get(i).get(0).toString()+":"+OM+":"+Ordqty+":"+OrdTotQty+":NA:NA:"+RecvdQty+":"+RcvdTotQty+":"+result_temp.get(i).get(5).toString()+":"+result_temp.get(i).get(6).toString()+":"+result_temp.get(i).get(8).toString()+":"+result_temp.get(i).get(9).toString()+":"+result_temp.get(i).get(10).toString()+":"+OMvthoutUOM+":"+result_temp.get(i).get(12).toString()+":"+Recv_OM;
			DBList1.addAll(StringToListCreation(Str1));
		}

		//System.out.println("Details are loaded successfully for the order "+Ordnumber);
		DBListSOH1 = RecOrdPage.CorrectingtheorderbychangingOM(RecOrdObj,Ordnumber, DBList, DBList1,username,usernm1,DBListDisp,results3,RndmWgt,DBListDisp1,driver);

		htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
		for (int i=0;i<DBListSOH.size();i++){
			resultart1 = executingQuery("SOHSQL", "art_no", DBListSOH.get(i).get(0).toString());
			for(int j=0;j<DBListSOH1.size();j++){
				if(DBListSOH.get(i).get(0).toString().equals(DBListSOH1.get(j).get(0).toString())){
					if(DBListSOH.get(i).get(1).toString().equals("N")){
						Double diff = Double.parseDouble(DBListSOH1.get(j).get(1).toString()) - Double.parseDouble(DBListSOH.get(i).get(3).toString());
						Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(2).toString()) + Double.parseDouble(diff.toString());
						String NewSOH1 = decimalFormat1(NewSOH.toString());
						if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1)){
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Pass");
						}else{
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Fail");
						}
					}
					else if(DBListSOH.get(i).get(1).toString().equals("Y")){
						Double diff_wgt = Double.parseDouble(DBListSOH1.get(j).get(1).toString()) - Double.parseDouble(DBListSOH.get(i).get(4).toString());
						Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(2).toString()) + Double.parseDouble(diff_wgt.toString());
						String NewSOH1 = decimalFormat1(NewSOH.toString());
						Double diff_piqty = Double.parseDouble(DBListSOH1.get(j).get(2).toString()) - Double.parseDouble(DBListSOH.get(i).get(5).toString());
						Double NewPISOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(diff_piqty.toString());
						String NewPISOH1 = decimalFormat1(NewPISOH.toString());

						if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1) && decimalFormat1(resultart1.get(0).get(1).toString()).toString().equals(NewPISOH1)){
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Pass");
						}else{
							htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(2).toString()+", "+DBListSOH.get(i).get(3).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Fail");
						}
					}
				}
			}
		}
		List<List<Object>> results_transid = executingQuery("TransID", "ord_no", Ordnumber);
		executingQuery("DelEntries", "transid1", results_transid.get(0).get(0).toString());
		log.info("-----------------Logout from Application------------------");
		htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Creating Order on Receipt for Vendor Supplied Articles") //Vamshi
	public void CreatingOrderOnReceipt() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+13;}
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String articlesget = data.getText("Articles");
		articlelist = RecOrdPage.articleSplit(articlesget);
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		resultart3 = executingQuery("usernm", "userid", username);
		String usernm1 = resultart3.get(0).get(0).toString();
		Integer count = 0;
		String Method = "";
		for(int i=0;i<articlelist.size();i++){
			results = executingQuery("ArtDet", "art_no", articlelist.get(i));
			String soh = "";
			String pi_soh = "";

			if (results.get(0).get(2)==null && results.get(0).get(3)==null){
				soh = "0";
				pi_soh = "0";
			}
			else if (results.get(0).get(2)==null){
				soh = "0";
				pi_soh = decimalFormat1(results.get(0).get(3).toString());
			}
			else if(results.get(0).get(3)==null){
				soh = decimalFormat1(results.get(0).get(2).toString());
				pi_soh = "0";}
			else{
				soh = decimalFormat1(results.get(0).get(2).toString());
				pi_soh = decimalFormat1(results. get(0).get(3).toString());
			}
			if (results.get(0).get(13).equals("")){

			}else{
				count++;
			}
			String Str1 = ""+results.get(0).get(0).toString()+":"+results.get(0).get(1).toString()+":"+soh+":"+pi_soh+":"+results.get(0).get(4).toString()+":"+results.get(0).get(5).toString()+":"+results.get(0).get(6).toString()+":"+results.get(0).get(7).toString()+":"+results.get(0).get(8).toString()+":"+results.get(0).get(9).toString()+":"+results.get(0).get(10).toString()+":"+results.get(0).get(11).toString()+":"+results.get(0).get(12).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		String SupplierName1 = DBList1.get(0).get(12).toString();

		for(int i=0;i<DBList1.size();i++){
			String soh= "";
			if(DBList1.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", DBList1.get(i).get(0).toString());
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				String Str_SOH = ""+DBList1.get(i).get(0).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
			else if(DBList1.get(i).get(6).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(DBList1.get(i).get(0).toString());
				String Str_SOH = ""+DBList1.get(i).get(0).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (DBList1.get(i).get(8).toString().equals("Y")  && DBList1.get(i).get(7).toString().equals("0")){
				String DispArt = data.getText("dispcomp").replace("art_no", DBList1.get(i).get(0).toString());
				resultart = sql.executeQuery(getContext(), DispArt);

				for(int k = 0; k < resultart.size();k++){
					resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(1).toString());
					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}

					String Str_Disp = ""+DBList1.get(i).get(0).toString()+":"+resultart.get(k).get(1).toString()+":"+resultart.get(k).get(2).toString()+":"+resultart.size();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(1).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+soh;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(DBList1.get(i).get(0).toString(), soh);
				String Str_SOH = ""+DBList1.get(i).get(0).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
		}
		executingQuery("DelDraft", "userid", username);
		DBListSOH1 = RecOrdPage.OrderOnReceiptFlow(DBList1,invoice,ChldTemp,FrznTemp,articlelist,RecOrdObj,DBListDisp,DBListSOH,usernm1,SupplierName1,count,Method,driver);


		if(DBListSOH1.get(0).get(0).toString().equals("Errors")){
			log.info("-----------------Logout from Application------------------");
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
			
		}else{
			htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
			/*for (int i=0;i<DBListSOH.size();i++){
				if(DBListSOH.get(i).get(2).toString().equals("1")){
					results2 = executingQuery("CPBDArticle", "art_no", DBListSOH.get(i).get(0).toString());
					resultart1 = executingQuery("SOHSQL", "art_no", results2.get(0).get(0).toString());
				}else{
					resultart1 = executingQuery("SOHSQL", "art_no", DBListSOH.get(i).get(0).toString());
				}
				for(int j=0;j<DBListSOH1.size();j++){
					if(DBListSOH.get(i).get(0).toString().equals(DBListSOH1.get(j).get(0).toString())){
						if(DBListSOH.get(i).get(1).toString().equals("N")){
							Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(DBListSOH1.get(j).get(1).toString());
							String NewSOH1 = decimalFormat1(NewSOH.toString());
							if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1)){
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Pass");
							}else{
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Fail");
							}
						}
						else if(DBListSOH.get(i).get(1).toString().equals("Y")){
							Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(DBListSOH1.get(j).get(1).toString());
							String NewSOH1 = decimalFormat1(NewSOH.toString());
							Double NewPISOH = Double.parseDouble(DBListSOH.get(i).get(4).toString()) + Double.parseDouble(DBListSOH1.get(j).get(2).toString());
							String NewPISOH1 = decimalFormat1(NewPISOH.toString());

							if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1) && decimalFormat1(resultart1.get(0).get(1).toString()).toString().equals(NewPISOH1)){
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Pass");
							}else{
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Fail");
							}
						}
					}
				}
			}*/
			CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
			log.info("-----------------Logout from Application------------------");
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();

	}

	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Creating Order on Receipt for Vendor Supplied Articles by changing OM") //Vamshi
	public void CreatingOrderOnReceiptbychangingOM() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+13;}
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String articlesget = data.getText("Articles");
		articlelist = RecOrdPage.articleSplit(articlesget);
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		resultart3 = executingQuery("usernm", "userid", username);
		String usernm1 = resultart3.get(0).get(0).toString();
		Integer count = 0;
		String Method = "ChangeOM";
		for(int i=0;i<articlelist.size();i++){
			results = executingQuery("ArtDet", "art_no", articlelist.get(i));
			String soh = "";
			String pi_soh = "";

			if (results.get(0).get(2)==null && results.get(0).get(3)==null){
				soh = "0";
				pi_soh = "0";
			}
			else if (results.get(0).get(2)==null){
				soh = "0";
				pi_soh = decimalFormat1(results.get(0).get(3).toString());
			}
			else if(results.get(0).get(3)==null){
				soh = decimalFormat1(results.get(0).get(2).toString());
				pi_soh = "0";}
			else{
				soh = decimalFormat1(results.get(0).get(2).toString());
				pi_soh = decimalFormat1(results.get(0).get(3).toString());
			}
			if (results.get(0).get(13).equals("")){

			}else{
				count++;
			}
			String Str1 = ""+results.get(0).get(0).toString()+":"+results.get(0).get(1).toString()+":"+soh+":"+pi_soh+":"+results.get(0).get(4).toString()+":"+results.get(0).get(5).toString()+":"+results.get(0).get(6).toString()+":"+results.get(0).get(7).toString()+":"+results.get(0).get(8).toString()+":"+results.get(0).get(9).toString()+":"+results.get(0).get(10).toString()+":"+results.get(0).get(11).toString()+":"+results.get(0).get(12).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		String SupplierName1 = DBList1.get(0).get(12).toString();

		for(int i=0;i<DBList1.size();i++){
			String soh= "";
			if(DBList1.get(i).get(7).toString().equals("1")){
				resultart = executingQuery("CPBDArticle", "art_no", DBList1.get(i).get(0).toString());
				String SOH1 = CalculatingSOHforCPBD(resultart.get(0).get(0).toString(), soh);
				String Str_SOH = ""+DBList1.get(i).get(0).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
			else if(DBList1.get(i).get(6).toString().equals("Y")){

				DBListRWSOH = CalculatingSOHforRW(DBList1.get(i).get(0).toString());
				String Str_SOH = ""+DBList1.get(i).get(0).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+DBListRWSOH.get(0).toString()+":"+DBListRWSOH.get(1).toString();
				DBListSOH.addAll(StringToListCreation(Str_SOH));

			}
			else if (DBList1.get(i).get(8).toString().equals("Y")  && DBList1.get(i).get(7).toString().equals("0")){
				String DispArt = data.getText("dispcomp").replace("art_no", DBList1.get(i).get(0).toString());
				resultart = sql.executeQuery(getContext(), DispArt);

				for(int k = 0; k < resultart.size();k++){
					resultart1 = executingQuery("SOHSQL", "art_no", resultart.get(k).get(1).toString());
					if(resultart1.size() == 0){
						soh = "0";
					}
					else{
						soh = decimalFormat1(resultart1.get(0).get(0).toString());
					}

					String Str_Disp = ""+DBList1.get(i).get(0).toString()+":"+resultart.get(k).get(1).toString()+":"+resultart.get(k).get(2).toString()+":"+resultart.size();
					DBListDisp.addAll(StringToListCreation(Str_Disp));

					String Str_SOH = ""+resultart.get(k).get(1).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+soh;
					DBListSOH.addAll(StringToListCreation(Str_SOH));
				}
			}
			else{
				String SOH1 = CalculatingSOHforHAWA(DBList1.get(i).get(0).toString(), soh);
				String Str_SOH = ""+DBList1.get(i).get(0).toString()+":"+DBList1.get(i).get(6).toString()+":"+DBList1.get(i).get(7).toString()+":"+SOH1;
				DBListSOH.addAll(StringToListCreation(Str_SOH));
			}
		}
		executingQuery("DelDraft", "userid", username);
		DBListSOH1 = RecOrdPage.OrderOnReceiptFlow(DBList1,invoice,ChldTemp,FrznTemp,articlelist,RecOrdObj,DBListDisp,DBListSOH,usernm1,SupplierName1,count,Method,driver);


		if(DBListSOH1.get(0).get(0).toString().equals("Errors")){
			log.info("-----------------Logout from Application------------------");
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
			
		}else{
			htmlToExtent(cName,mName,extLogger,driver, "**** Checking the SOH Updations after correcting the order ****;;;Pass");
			/*for (int i=0;i<DBListSOH.size();i++){
				if(DBListSOH.get(i).get(2).toString().equals("1")){
					results2 = executingQuery("CPBDArticle", "art_no", DBListSOH.get(i).get(0).toString());
					resultart1 = executingQuery("SOHSQL", "art_no", results2.get(0).get(0).toString());
				}else{
					resultart1 = executingQuery("SOHSQL", "art_no", DBListSOH.get(i).get(0).toString());
				}
				for(int j=0;j<DBListSOH1.size();j++){
					if(DBListSOH.get(i).get(0).toString().equals(DBListSOH1.get(j).get(0).toString())){
						if(DBListSOH.get(i).get(1).toString().equals("N")){
							Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(DBListSOH1.get(j).get(1).toString());
							String NewSOH1 = decimalFormat1(NewSOH.toString());
							if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1)){
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Pass");
							}else{
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+NewSOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+decimalFormat1(resultart1.get(0).get(0).toString())+"];Fail");
							}
						}
						else if(DBListSOH.get(i).get(1).toString().equals("Y")){
							Double NewSOH = Double.parseDouble(DBListSOH.get(i).get(3).toString()) + Double.parseDouble(DBListSOH1.get(j).get(1).toString());
							String NewSOH1 = decimalFormat1(NewSOH.toString());
							Double NewPISOH = Double.parseDouble(DBListSOH.get(i).get(4).toString()) + Double.parseDouble(DBListSOH1.get(j).get(2).toString());
							String NewPISOH1 = decimalFormat1(NewPISOH.toString());

							if(decimalFormat1(resultart1.get(0).get(0).toString()).equals(NewSOH1) && decimalFormat1(resultart1.get(0).get(1).toString()).toString().equals(NewPISOH1)){
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Pass");
							}else{
								htmlToExtent(cName,mName,extLogger,driver, "Previous SOH, New SOH Value of "+DBListSOH.get(i).get(0).toString()+" after receiving the order;Local Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+NewSOH1+", "+NewPISOH1+"];DB Value is ["+DBListSOH.get(i).get(3).toString()+", "+DBListSOH.get(i).get(4).toString()+"] ["+decimalFormat1(resultart1.get(0).get(0).toString())+", "+decimalFormat1(resultart1.get(0).get(1).toString())+"];Fail");
							}
						}
					}
				}
			}*/
			CalculatingSOHforVndrASNLinebyLine(DBListSOH,DBListSOH1);
			log.info("-----------------Logout from Application------------------");
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
			//status.assertAll();
		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();
	}


	@Test(dependsOnMethods={"au.wow.ngbomain.tests.Sampletest.check"},description = "Creating Order on Receipt for Vendor Supplied Articles by giving High Temperature") //Vamshi
	public void CreatingOrderOnReceiptvthTempCheck() //throws SQLException, IOException, AWTException, ParseException
	{
		if(ReceivingArtpreCount2==-1){
			RECcount =RECcount+7;}
		List<List<Object>> DBListSOH1 = new ArrayList<List<Object>>();
		List<List<Object>> DBList1 = new ArrayList<List<Object>>();
		List<List<Object>> DBListSOH = new ArrayList<List<Object>>();
		List<String> articlelist = new ArrayList();
		List<List<Object>> DBListDisp = new ArrayList<List<Object>>();
		List<String> DBListRWSOH = new ArrayList<String>();
		String username = getContext().getStringProperty("username");
		TestStatus status = getTestStatus();
		try{
		navToOrderEnq(status);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order Enquiry Opened");
		String articlesget = data.getText("Articles");
		articlelist = RecOrdPage.articleSplit(articlesget);
		String invoice = data.getText("Invoice");
		String ChldTemp = data.getText("Chilledtemp");
		String FrznTemp = data.getText("Frozentemp");
		resultart3 = executingQuery("usernm", "userid", username);
		String usernm1 = resultart3.get(0).get(0).toString();
		Integer count = 0;
		String Method = "HighTemp";
		for(int i=0;i<articlelist.size();i++){
			results = executingQuery("ArtDet", "art_no", articlelist.get(i));
			String soh = "";
			String pi_soh = "";

			if (results.get(0).get(2)==null && results.get(0).get(3)==null){
				soh = "0";
				pi_soh = "0";
			}
			else if (results.get(0).get(2)==null){
				soh = "0";
				pi_soh = decimalFormat1(results.get(0).get(3).toString());
			}
			else if(results.get(0).get(3)==null){
				soh = decimalFormat1(results.get(0).get(2).toString());
				pi_soh = "0";}
			else{
				soh = decimalFormat1(results.get(0).get(2).toString());
				pi_soh = decimalFormat1(results.get(0).get(3).toString());
			}
			if (results.get(0).get(13).equals("")){

			}else{
				count++;
			}
			String Str1 = ""+results.get(0).get(0).toString()+":"+results.get(0).get(1).toString()+":"+soh+":"+pi_soh+":"+results.get(0).get(4).toString()+":"+results.get(0).get(5).toString()+":"+results.get(0).get(6).toString()+":"+results.get(0).get(7).toString()+":"+results.get(0).get(8).toString()+":"+results.get(0).get(9).toString()+":"+results.get(0).get(10).toString()+":"+results.get(0).get(11).toString()+":"+results.get(0).get(12).toString();
			DBList1.addAll(StringToListCreation(Str1));
		}

		String SupplierName1 = DBList1.get(0).get(12).toString();


		executingQuery("DelDraft", "userid", username);
		DBListSOH1 = RecOrdPage.OrderOnReceiptFlow(DBList1,invoice,ChldTemp,FrznTemp,articlelist,RecOrdObj,DBListDisp,DBListSOH,usernm1,SupplierName1,count,Method,driver);


		if(DBListSOH1.get(0).get(0).toString().equals("Errors")){
			log.info("-----------------Logout from Application------------------");
			htmlToExtent(cName,mName,extLogger,driver,loginPage.logoutFromAppl(ReceivingArtScenarios,ReceivingArttestname,driver));
			

		}
		}
		catch (Exception e) {
			isExceptionCaptured=writeException(cName,mName,extLogger,driver,e);;  htmlToExtent(cName,mName,extLogger,driver,"Logout from application;;;Pass");
			}	
		status.assertAll();

	}


	public String CalculatingSOHforHAWA(String art, String soh) throws SQLException
	{

		resultart1 = executingQuery("SOHSQL", "art_no", art);
		if(resultart1.size() == 0){
			soh = "0";
		}else if(resultart1.get(0).get(0)==null){
			soh = "0";
	}
		else{
			soh = decimalFormat1(resultart1.get(0).get(0).toString());
		}

		return soh;
	}

	public String CalculatingSOHforCPBD(String art, String soh) throws SQLException
	{
		resultart1 = executingQuery("SOHSQL", "art_no", art);

		if(resultart1.size() == 0){
			soh = "0";
		}
		else if(resultart1.get(0).get(0)==null){
			soh = "0";
	}else
	{
			soh = decimalFormat1(resultart1.get(0).get(0).toString());
		}

		return soh;
	}


	public void navToOrderEnq(TestStatus status) throws AWTException 
	{
		log.info("---------------Login into Application--------------------");
		htmlToExtent(cName,mName,extLogger,driver, "---------------Login into Application--------------------;;;Pass");
		//Report_AddStep("testcase", "---------------Login into Application--------------------","","", "Pass");
		loginPage = new WoWLoginPage().createPage(driver, getContext(), log, status, data, WoWLoginPage.class);
		if(System.getProperty("store")==null){
			StoreNo = getContext().getStringProperty("store");
			htmlToExtent(cName,mName,extLogger,driver,"Login with the Store : " + getContext().getStringProperty("store")+";;;Pass");
			//Report_AddStep("testcase", "Login with the Store : " + getContext().getStringProperty("store"),"","", "Pass");
			//articleLookUpPage = loginPage.navToArticlLookUp(getContext().getStringProperty("store"));
			RecOrdPage = loginPage.navToReceive(getContext().getStringProperty("store"), driver);

		}else{
			storeprop.getStoreDetails(System.getProperty("store"));
			//System.out.println(store);
			StoreNo = store;
			htmlToExtent(cName,mName,extLogger,driver,"Login with the Store : " + store+";;;Pass");
			//Report_AddStep("testcase", "Login with the Store : " + store,"","", "Pass");
			//articleLookUpPage = loginPage.navToArticlLookUp(store);
			RecOrdPage = loginPage.navToReceive(store, driver);
		}

		log.info("-------------Navigate to Order Enquiry Page------------");
		htmlToExtent(cName,mName,extLogger,driver, "----------------Navigate to Order Enquiry Page--------------------;;;Pass");
		//Report_AddStep("testcase", "----------------Navigate to Order Enquiry Page--------------------","","", "Pass");
		RecOrdPage.clickOnOrderEnquiry(RecOrdObj,driver);
	}
	
	

	/*@BeforeMethod(alwaysRun=true)
	public void setUp(Method m,ITestContext testcontext) //throws IOException{	
		initializeTestcontext();
		//System.out.println("test1 - beforemethod");
		log.info("Loading Testdata for the test case: " + m.getName().toString());
		data.getTCNameFromChildren(m.getName().toString().trim());
		createDriver(getContext().getStringProperty("baseURL"), getContext().getStringProperty("browser"));
		testcontext.setAttribute("WebDriver", getDriver1());
		testcontext.setAttribute("Customreports", this.customreport);
		customreport.startTest(m.getName().toString());
		initializeTestStatus();
		reportPath = new File(getContext().getStringProperty("reportPath"));
		moduledesc = m.getName().toString().trim();
		dtmoduledesc = m.getAnnotation(Test.class).description();
		testcasesttime = new Date();
		RecOrdObj = PageFactory.initElements(driver, ReceiveOrderObjects.class);
		RecOrdPage = PageFactory.initElements(driver, ReceiveOrderPage.class);

		BaseObj = PageFactory.initElements(driver, BasePage.class);
		common = PageFactory.initElements(driver, CommonFunctions.class);
		storeprop = PageFactory.initElements(driver, StoreProperties.class);


		Date date = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("MMddyyyy_hmmss");
		String formattedDate = sdf.format(date);
		//System.out.println(formattedDate); // 12/01/2011 4:48:16 PM
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		String formattedDate1 = dateFormat.format(date);
		//System.out.println(formattedDate1); // 12/01/2011 4:48:16 PM
		String dat = formattedDate1;
		Report_Header("testcase", reportPath , moduledesc, dat);

	}


	@BeforeClass
	public void loadXMLFile(){	
		//initializeTestcontext();
		//System.out.println("test1 - Beforeclass");
		data = new XMLDataReader(log);
		customreport=new CustomExtentReports();
		log.info("Loading data for the class: " );
		data.loadTestDataXML(System.getProperty("user.dir") + "\\TestData\\NGBO\\RecOrd.xml");
		customreport.createExtentReport();
	}*/

	@BeforeMethod(alwaysRun=true)
	public void setUp(Method m9,ITestContext testcontext) throws IOException, InterruptedException
	{	
		waitFor(2);
		System.out.println("test1 - beforemethod");
		isExceptionCaptured=false;			
		mName=m9.getName().toString().trim();			
		if(!methodList.contains(m9.getName().toString().trim())){
			methodList.add(m9.getName().toString().trim());
			extLogger = extReport.startTest(m9.getName().toString().trim());
		}
		initializeTestcontext();
		log.info("Loading Testdata for the test case: " + m9.getName().toString());
		data.getTCNameFromChildren(m9.getName().toString().trim());
		if(isFirstTest){
			driver=createDriver(TestContext.getStringProperty("baseURL"), TestContext.getStringProperty("browser"), cName, mName, extLogger,driver);
		}else{
			String title = driver.getCurrentUrl();
			if(title.contains("logginOut"))
			{
				driver.navigate().refresh();
				TimeUnit.SECONDS.sleep(5);
			}else{
				driver.navigate().refresh();
				TimeUnit.SECONDS.sleep(5);
				if(driver.findElements(By.xpath("//*[@class='homeLink']")).size()>0)
				{
					if(driver.findElement(By.xpath("//*[@class='homeLink']")).isDisplayed()){
						WebElement  home = driver.findElement(By.xpath("//*[@class='homeLink']"));
						scrolltoElement(home,driver);
						home.click();
						TimeUnit.SECONDS.sleep(5);
						loginPage.Logout(RoutinesArtScenarios, RoutinesArttestname, driver);
						driver.navigate().refresh();
						TimeUnit.SECONDS.sleep(5);}
				}
			}
		}
			isFirstTest=false;
		
		//driver=createDriver(TestContext.getStringProperty("baseURL"), TestContext.getStringProperty("browser")); 
			setDriver(driver);
		testcontext.setAttribute("WebDriver", driver);
		testcontext.setAttribute("Customreports", this.customreport);
		customreport.startTest(m9.getName().toString());
		initializeTestStatus();
		reportPath = new File(getContext().getStringProperty("reportPath"));
		ReceivingArttestname = m9.getName().toString().trim();
		ReceivingArttestdesc = m9.getAnnotation(Test.class).description();
		htmlToExtent(cName,mName,extLogger,driver,"<b><i><h4>Docker run - "+getContext().getStringProperty("isDocketRun")+"</h4></i></b>;;;Info");
		RecOrdObj = PageFactory.initElements(driver, ReceiveOrderObjects.class);
		RecOrdPage = PageFactory.initElements(driver, ReceiveOrderPage.class);
		BaseObj = PageFactory.initElements(driver, BasePage.class);
		common = PageFactory.initElements(driver, CommonFunctions.class);
		storeprop = PageFactory.initElements(driver, StoreProperties.class);
	}

	@BeforeClass
	public void loadXMLFile(){	
		//initializeTestcontext();
		System.out.println("test1 - Beforeclass");
		data = new XMLDataReader(log);
		customreport=new CustomExtentReports();
		log.info("Loading data for the class: " );
		data.loadTestDataXML(System.getProperty("user.dir") + "\\TestData\\NGBO\\RecOrd.xml");
		customreport.createExtentReport();
		cName=this.getClass().getSimpleName();
		reportPath = new File(TestContext.getStringProperty("reportPath"));			
		extReport = new ExtentReports(TestContext.getStringProperty("reportPath") +"\\"+this.getClass().getSimpleName()+".html");
		classList.add(this.getClass().getSimpleName());
	}



	@AfterClass(alwaysRun=true)
	public void tearDown() //throws IOException, ParseException
	{
		waitFor(1);
		System.out.println("afterclass");		
		sceCtMap.put(cName+"_totalCt", methodList.size());
		sceCtMap.put(cName+"_passCt", methodList.size() - extentList.get(cName).size());
		sceCtMap.put(cName+"_failCt", extentList.get(cName).size());
		tcCt.put(this.getClass().getSimpleName().toString(), RECcount);
		//System.out.println(extentList);
		//System.out.println(methodList);
        extReport.endTest(extLogger);
		extReport.flush();
		removeDriver();
		closeDriver(driver);
		waitFor(1);
		moduleName.put("Modules", ReceivingArtModules);
		waitFor(1);
		int receivedArtM=RECcount;
		ReceivingArtMC=""+receivedArtM;
	}

	@AfterMethod(alwaysRun=true)
	protected void flushReports(ITestResult result9, Method m9) //throws IOException, ParseException 
	{
		System.out.println("AffterMethod");
		
		extReport.endTest(extLogger);
		extReport.flush();
		try{
			if(result9.getAttribute("isFail").equals("true")&& !isExceptionCaptured){
				htmlToExtent(cName,mName,extLogger,driver,"Iteration terminated due to error;;;INFO");	
				result9.removeAttribute("isFail");
			}}catch(Exception e ){}		
		customreport.getExtentReport().endTest(customreport.getExtentTest());
		customreport.getExtentReport().flush();
		waitFor(1);
		if(getResultStatusName(result9.getStatus()).equalsIgnoreCase("Fail")|| getResultStatusName(result9.getStatus()).equalsIgnoreCase("Info")){
			int cnt = ReceivingArtpreCount2+1;
			htmlToExtent(cName,mName,extLogger,driver,"<b><i><h4>Completed Status : Iteration - "+ cnt +"</h4></i></b>;;;Info");
			ReceivingArtpreCount2++;
		}
		if(ReceivingArtpreCount2==reCount || getResultStatusName(result9.getStatus()).equalsIgnoreCase("Pass")){
			ReceivingArtpreCount2=-1;
		}
	}

}




