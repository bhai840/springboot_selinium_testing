package au.wow.ngbomain.pages;

import java.awt.AWTException;
import java.awt.Robot;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.PageFactory;

import com.relevantcodes.extentreports.ExtentTest;

import au.wow.ngbo.utils.BasePage;
import au.wow.ngbo.utils.SQLWrapper;
import au.wow.ngbo.utils.XMLDataReader;
import au.wow.ngbomain.objects.ReceiveOrderObjects ;
import au.wow.ngbomain.objects.StockTransferObjects;
import au.wow.ngbomain.tests.ReceiveOrderTest ;
import au.wow.ngbomain.pages.WoWLoginPage;
import au.wow.ngbomain.pages.CommonFunctions;

public class ReceiveOrderPage extends BasePage {
	public static WebDriver driver;
    public void setDriver(WebDriver driver){
		this.driver=driver;
	}
	CommonFunctions common = PageFactory.initElements(driver, CommonFunctions.class);
	private Logger log = LogManager.getLogger(ReceiveOrderTest.class);
	SQLWrapper sql = new SQLWrapper(log);
	//ReceiveOrderObjects RecOrdObj;	
	//ReceiveOrderPage RecOrdPage;
	WoWLoginPage loginPage;
	ExtentTest extLogger=ReceiveOrderTest.extLogger;
	String cName= ReceiveOrderTest.cName;
	String mName=ReceiveOrderTest.mName;
	public static XMLDataReader data=ReceiveOrderTest.data;
   	


	public void clickOnOrderEnquiry(ReceiveOrderObjects ReceiveOrderObj,WebDriver driver) throws AWTException{
		//		waitForJSandJQueryToLoad(driver);
		waitFor(1);
		Point coordinates = ReceiveOrderObj.Orders.getLocation();
		Robot robot = new Robot();
		robot.mouseMove(coordinates.getX(),coordinates.getY()+100);

		Actions action = new Actions(driver);
		action.moveToElement(ReceiveOrderObj.Orders).click().build().perform();	
		waitFor(1);

		Point coordinates1 = ReceiveOrderObj.orderEnquiry.getLocation();
		Robot robo1t = new Robot();
		robo1t.mouseMove(coordinates1.getX(),coordinates1.getY()+100);

		Actions action2 = new Actions(driver);
		action2.moveToElement(ReceiveOrderObj.orderEnquiry).click().build().perform();
		waitFor(1);
		robot.mouseMove(5,5);	
	}
	public void waitFn(WebDriver driver)
	{
		waitForJSandJQueryToLoad(driver);
		//waitForPageToLoad();
	}

	public void scrolldown(WebDriver driver)
	{
		verticalScroll(driver);
	}

	public void scrollUp1(WebDriver driver)
	{
		scrollUp(driver);
	}

	public List<String> articleSplit(String articlesget){
		String[] arrSplit = articlesget.split(",");
		List<String> articlelist = new ArrayList<String>(Arrays.asList(arrSplit));

		return articlelist;
	}

	public void articlesaddition(List<String> articlelist,ReceiveOrderObjects RecOrdObj,List<List<Object>> DBList1,WebDriver driver) throws IOException
	{
		for (int i=1; i < articlelist.size();i++){

			String art = articlelist.get(i);
			//System.out.println(art);
			enterText(RecOrdObj.EntrArt2, art,driver);
			waitFor(2);
			click(RecOrdObj.ClckSrchAdd);
			waitForJSandJQueryToLoad(driver);
			if(DBList1.get(i).get(9).toString().equals("Y")){
				click(RecOrdObj.ClckPBD2);
				click(RecOrdObj.ClckAddToList);
				waitForJSandJQueryToLoad(driver);

			}
			if((DBList1.get(0).get(10).toString().equals("KG")) && (DBList1.get(0).get(6).toString().equals("N"))){
				
				click(RecOrdObj.ClckCAR);
				waitForJSandJQueryToLoad(driver);
			}
			htmlToExtent(cName,mName,extLogger,driver,"*** Article "+art+" is added successfully in Draft ***;;;Pass");
			//Report_AddStep("testcase","*** Article "+art+" is added successfully in Draft ***" , "", "", "Pass");
		}
	}

	public void VendorOrdRecinFullforhighTemp(ReceiveOrderObjects RecOrdObj,String Ordnumber, String Invoice,
			List<List<Object>> DBList, List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, 
			String username, String usernm1, List<List<Object>> DBListDisp, String Method,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+ChckSrc+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":AUTHORISED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(11).toString()+":"+DBList.get(0).get(5).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();
		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		//Report_AddStep("testcase","*** Checking the order header details displayed after opening the order" , "", "", "Pass");

		String OrdNo2 = RecOrdObj.ChckOrdNo.getText();
		String  String1 [] = splitString(OrdNo2,"#");
		String OrdNum = String1[1];
		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else if(ChckSrc.equals("STORE") && !DBList.get(0).get(3).toString().equals("") && !DBList.get(0).get(3).toString().equals("EMPTY")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(2).toString().equals(Createdby1)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}

		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+RecOrdObj.Gettotalqty.getText()+":"+RecOrdObj.Dispwgt.getText()+":"+RecOrdObj.ChckSealnumb.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(5).toString()+":NA:NA";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver,Applst,DBLst);
		DBLst.clear();
		Applst.clear();

		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
		}else{ 
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles are not displayed properly;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
		}
		if(DBList.get(0).get(8).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.Clrgrpby);
		ComparingArticlesinAuthorisedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"----Receiving the order in Full----;;;Pass");
		//Report_AddStep("testcase","3200 Site is added successfully in Draft" , "", "", "Pass");
		//System.out.println("Site is added in draft");
		click(RecOrdObj.ClickReceiveOrder);
		waitForJSandJQueryToLoad(driver);

		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		click(RecOrdObj.ClckRcvFull);
		enterText(RecOrdObj.EnterInvoice, Invoice,driver);
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("VendorHighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.contains("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
				waitForJSandJQueryToLoad(driver);
			}
		}else if(Method.equals("POReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Rejected the Not Ranged Articles in the order;;;Pass");
		}else if(Method.equals("POAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Accepted the Not Ranged Articles in the order;;;Pass");
		}
		scrolldown(driver);
		scrolldown(driver);

		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(9).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(9).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(9).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(9).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(DBList.get(0).get(10).toString()) && RecOrdObj.getOtherQty.getText().toString().equals("0")){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(10).toString()+", 0];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(10).toString()+", 0];Fail");
		}

		click(RecOrdObj.SubmitReceiving);
		if(Integer.parseInt(DBList.get(0).get(9).toString())>0){
			click(RecOrdObj.ClckContinue);}
		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){
			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}

			String ChckUpdatedFlag = RecOrdObj.UpdateRecvdFlag.getText();
			String ChckTrnsfr = RecOrdObj.ChkTransfr.getText();
			String ChckVndrAuthrizatn = RecOrdObj.ChkVendorClaim.getText();

			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #")){
				htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Fail");
			}


			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(3).toString().equals(DBList.get(0).get(9).toString()) && ValueList1.get(0).get(4).toString().equals("NA") && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(5).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", NA, "+DBList.get(0).get(5).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(9).toString()+", NA, "+DBList.get(0).get(5).toString()+"];Fail");
			}

			if(ValueList1.get(0).get(6).toString().equals("0") && ValueList1.get(0).get(7).toString().equals("NA") && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE IN FULL")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are [0, NA, "+usernm1+", RECEIVE IN FULL];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are [0, NA, "+usernm1+", RECEIVE IN FULL];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals(Invoice) && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Fail");
			}

			scrolldown(driver);

			if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);

			click(RecOrdObj.ClkRcvGrpBy);
			ComparingArticlesafterReceivingVndrOdrbygivinghighTemp(RecOrdObj,DBList1,DBListDisp,driver);
		}
	}



	public List<List<Object>> VendorRecLinebyLine(ReceiveOrderObjects RecOrdObj,String Ordnumber, String Invoice, 
			List<List<Object>> DBList, List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, 
			String username, String usernm1, List<List<Object>> DBListDisp, String Method, String Chck,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":AUTHORISED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(5).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();
		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		//Report_AddStep("testcase","*** Checking the order header details displayed after opening the order" , "", "", "Pass");

		String OrdNo2 = RecOrdObj.ChckOrdNo.getText();
		String  String1 [] = splitString(OrdNo2,"#");
		String OrdNum = String1[1];
		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else if(ChckSrc.equals("STORE") && !DBList.get(0).get(3).toString().equals("") && !DBList.get(0).get(3).toString().equals("EMPTY")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(2).toString().equals(Createdby1)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}

		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+RecOrdObj.Gettotalqty.getText()+":"+RecOrdObj.Dispwgt.getText()+":"+RecOrdObj.ChckSealnumb.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(5).toString()+":NA:NA";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
		}else{ 
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles are not displayed properly;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
		}
		if(DBList.get(0).get(8).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.Clrgrpby);
		ComparingArticlesinAuthorisedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"----Receiving the order through Line by Line option----;;;Pass");
		//Report_AddStep("testcase","3200 Site is added successfully in Draft" , "", "", "Pass");
		//System.out.println("Site is added in draft");
		click(RecOrdObj.ClickReceiveOrder);
		waitForJSandJQueryToLoad(driver);

		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		//click(RecOrdObj.ClckRcvFull);
		enterText(RecOrdObj.EnterInvoice, Invoice,driver);
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("VendorHighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.equals("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
				waitForJSandJQueryToLoad(driver);
			}
		}else if(Method.equals("POReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Rejected the Not Ranged Articles in the order;;;Pass");
		}else if(Method.equals("POAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
			click(RecOrdObj.ClseMsg);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Accepted the Not Ranged Articles in the order;;;Pass");
		}
		scrolldown(driver);
		scrolldown(driver);

		Integer ArtCount = 0;
		Integer TotQty = 0;
		Integer OtherQty = 0;
		Double TotRcvdWgt = 0.0;
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Review = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Art = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		List<List<Object>> Applst1 = new ArrayList<List<Object>>();
		List<List<Object>> DBLst1 = new ArrayList<List<Object>>();
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp2 = new ArrayList<List<Object>>();
		int count1 = 0;
		for(int k=1;k<=RecOrdObj.VndrRcvng.size();k++){
			if(k==2){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app2 = new ArrayList();
			List app_rcvd = new ArrayList();
			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String UOM = "";
			String PI_OM = "";
			String OM = "";
			String OMvthUOM = "";
			String OrdQTy = "";
			String TotOrdQty = "";
			String BaseUOM = "";
			String OrdQtyvthOutUOM = "";
			String OM2 = "";
			String DspWgt1 = "";
			String OrdQtyvthOutUOM2 = "";
			String Temp_ind = "";
			String NotRngd_ind = "";
			String TotRcvunits = "";
			String OrdQtyvthoutUOM1 = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(1).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(4).toString();
					Disp_ind = DBList1.get(m).get(5).toString();
					CPBD_ind = DBList1.get(m).get(10).toString();
					UOM = DBList1.get(m).get(3).toString();
					PI_OM = decimalFormat1(DBList1.get(m).get(12).toString());
					OM = decimalFormat1(DBList1.get(m).get(13).toString());
					OMvthUOM = DBList1.get(m).get(6).toString();
					OrdQtyvthoutUOM1 = decimalFormat1(DBList1.get(m).get(2).toString());
					OrdQTy = DBList1.get(m).get(7).toString();
					TotOrdQty = DBList1.get(m).get(8).toString();
					BaseUOM = DBList1.get(m).get(11).toString();
					if(Method.equals("VendorHighTemp")){
						Temp_ind = DBList1.get(m).get(14).toString();}
					else if(Method.equals("POReject")){
						Temp_ind = DBList1.get(m).get(14).toString();
					}else if(Method.equals("POAccept")){
						NotRngd_ind = DBList1.get(m).get(14).toString();
						Temp_ind = " ";
					}else{
						Temp_ind = " ";

					}
					if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04")){
						OrdQtyvthOutUOM2 = "0";
						TotRcvunits = "0 " +BaseUOM;
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						OrdQtyvthOutUOM2 = "0";
						TotRcvunits = "0";
					}else{
						OrdQtyvthOutUOM2 = decimalFormat1(DBList1.get(m).get(2).toString());
						TotRcvunits = TotOrdQty;
					}
					break;
				}
			}
			for(int l=1;l<=14;l++){
				if(l==4 ){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getOM1 = table.getText();
					String OM1 = "";
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OM2 = OMvthUOM;
					}else{
						String  String2 [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String2[0]) + " " +String2[1];
					}
					app.add(OM1);
				}else if(l==9){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getQty = table.getText();
					String  String2 [] = splitString(getQty," ");
					String Qty = decimalFormat1(String2[0]) + " " +String2[1];
					app.add(Qty);
				}
				else if(l==10){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}
					app.add(gettotordty2);
				}else if(l==12 || l ==11){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);					
					app.add(table.getText());
				}
				else if(l==13){
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						app.add(" ");
					}else if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue16, k,l,driver);
						String Rcvdqty = table.getText();
						app.add(Rcvdqty);
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
						if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
							String DspWgt = table1.getAttribute("value");
							if(table.getAttribute("disabled")!=null && table1.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
							app.add(DspWgt);
						}
					}
					else if(Rnd_wgt_ind.equals("Y")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						String Rcvdqty = table.getAttribute("value");
						WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
						String DspWgt = table1.getAttribute("value");
						app.add(Rcvdqty);
						app.add(DspWgt);
					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						if((Temp_ind.equals("03") || Temp_ind.equals("01")) || (Temp_ind.equals("DA") || Temp_ind.equals("ES")) || Temp_ind.equals("04")){
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty field is disabled ;;;Pass");
							}
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);
						}else{
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);	}			
					}
				}
				else if(l==14){
					String Rcvdqty = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty = table.getText();
					}else if(Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04"))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){					
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{					
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(Rcvdqty);
				}
				else if(l==2||l==3||l==5||l==6||l==7||l==8){

				}
				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst.add(app);
			if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA: :NA";
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if(Rnd_wgt_ind.equals("Y")){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+DspWgt1+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else{			
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}

			for(int n=1;n<=14;n++){
				String TotRcvdunits = "";
				Float TotRcvd_NUM = (float) 0;
				if(n==13){
					if(Rnd_wgt_ind.equals("Y")){
						WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
						String DiffQty1 = "";
						String RcvdQty1 = "";
						String TotRcvdQty = "";
						Double Wgt = 0.0;
						Double PIQty = 0.0;
						String TotRcvdQty_rej = "";
						if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
							RcvdQty1 = OrdQTy;
							TotRcvdQty = TotOrdQty;
							TotRcvdQty_rej = TotRcvdQty;
							ArtCount++;
							DiffQty1 = "0";
							Integer qty = Integer.parseInt(OrdQtyvthOutUOM2);
							TotQty += qty;
							PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							String gettotrcvdty3 = TotOrdQty.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							String Wgt1 = decimalFormat1(String[0]);
							Wgt = Double.parseDouble(Wgt1);
						}
						else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES") || Temp_ind.equals("04")){
							RcvdQty1 = "0 " +UOM;
							TotRcvdQty = "0 " +BaseUOM;
							if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								TotRcvdQty_rej = "0";
							}else{
								TotRcvdQty_rej = TotRcvdQty;
							}

							Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = 0 - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							Wgt = 0.0;
							PIQty = 0.0;
							ArtCount++;
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

							Integer qty = random_no(20) +1;
							ArtCount++;
							TotQty += qty;
							table.clear();
							table.sendKeys(""+qty);
							WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
							Wgt = random_no(20) +1.359;
							Enterweight.clear();
							Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
							click(clck);
							Double RcvQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = RcvQty - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							if(DiffQty1.equals("0")){
							}else{
								OtherQty++;
							}
							RcvdQty1 = qty.toString()+" "+UOM;

							PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
							TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
							TotRcvdQty_rej = TotRcvdQty;
						}
						app1.add(Art1);
						app1.add(TotRcvdQty_rej);
						String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
						Applst_Art.addAll(StringToListCreation(Str1_disp));
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

						if(DiffQty1.equals("0")){					
						}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}else{
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}

						click(clckchckBox);
						waitForJSandJQueryToLoad(driver);
					}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue14, k,n,driver);
						app1.add(Art1);
						app1.add("NA");
						click(table);
						waitForJSandJQueryToLoad(driver);
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA::NA:"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
						Applst_Rcvd_Disp = getValuesFromTable(RecOrdObj.UNRcvddispListSize);
						removeIndex(Applst_Rcvd_Disp, "9");
						removeIndex(Applst_Rcvd_Disp, "7");
						removeIndex(Applst_Rcvd_Disp, "2");
						removeIndex(Applst_Rcvd_Disp, "1");

						for(int as = 0;as<RecOrdObj.UNRcvddispListSize.size();as++){
							WebElement articl = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispart, as+1,driver);
							table = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispcheckrecvd, as+1,driver);
							WebElement TotOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotord, as+1,driver);
							WebElement ClckChxBox = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispChxBox, as+1,driver);
							Integer qty = 0;
							String Dispart = articl.getText();
							for(int ak=0;ak<DBListDisp.size();ak++){
								if(Art1.equals(DBListDisp.get(ak).get(0).toString()) && Dispart.equals(DBListDisp.get(ak).get(1).toString())){
									String DiffQty1 = "";
									String Rcvdqty = "";
									String TotRcvdQty1 = "";
									String DispRcvUnits = "";
									if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES") || Temp_ind.equals("04")){
										Rcvdqty = "0 " +BaseUOM;
										TotRcvdQty1 = "0 " +BaseUOM;
										DispRcvUnits = "0 " +BaseUOM;
										Double DiffQty = 0 - Double.parseDouble(DBListDisp.get(ak).get(5).toString());
										DiffQty1 = decimalFormat1(DiffQty.toString());										
										qty = 0;
									}else{
										qty = random_no(399) +1;
										table.clear();
										table.sendKeys(""+qty);
										WebElement table1 = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotrecvd, as+1,driver);
										click(TotOrdqty);

										Rcvdqty = qty.toString()+" "+DBListDisp.get(ak).get(5).toString();
										DispRcvUnits = DBListDisp.get(ak).get(2).toString();
										Double TotRcvdQty = qty * 1.0;
										TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + DBListDisp.get(ak).get(5).toString();
										Double DiffQty = qty - Double.parseDouble(DBListDisp.get(ak).get(4).toString());
										DiffQty1 = decimalFormat1(DiffQty.toString());

									}
									String Str1_disp_rcvd = ""+articl.getText()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":NA:NA:"+DispRcvUnits;
									Applst_Rcvd_Disp1.addAll(StringToListCreation(Str1_disp_rcvd));
									click(ClckChxBox);
									waitForJSandJQueryToLoad(driver);
									String Str1_disp = ""+articl.getText()+":"+qty;
									Applst_Art.addAll(StringToListCreation(Str1_disp));

									String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":NA:NA:"+Rcvdqty+":"+TotRcvdQty1+":"+DBListDisp.get(ak).get(3).toString();
									Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));

									if(DiffQty1.equals("0")){					
									}else{
										String Updt_rcvd_DB2 = ""+Dispart+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":NA:NA:"+Rcvdqty+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
										Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
									}
								}
							}
						}
						htmlToExtent(cName,mName,extLogger,driver, "***Comparing the component details of Display article*** "+Art1+";;;Pass");
						ElementContains1(cName, mName,extLogger,driver, Applst_Rcvd_Disp, Applst_Rcvd_Disp1);
						click(RecOrdObj.ClckOKDsip);
						waitForJSandJQueryToLoad(driver);
						//app1.add("");
					}else{
						String DiffQty1 = "";
						String RcvdQty1 = "";
						String TotRcvdQty1 = "";
						Double TotRcvdQty2 = 0.0;
						Integer qty = 0;
						String TotRcvdQty_rej = "";
						WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
						if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
							RcvdQty1 = OrdQTy;
							TotRcvdQty1 = TotOrdQty;
							TotRcvdQty_rej = TotRcvdQty1;
							ArtCount++;
							DiffQty1 = "0";
							qty = Integer.parseInt(OrdQtyvthOutUOM2);
							TotQty += qty;
						}
						else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES") || Temp_ind.equals("04")){
							RcvdQty1 = "0 " +UOM;
							TotRcvdQty1 = "0 " +BaseUOM;
							if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								TotRcvdQty_rej = "0";
							}else{
								TotRcvdQty_rej = TotRcvdQty1;
							}
							Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = 0 - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							ArtCount++;
						}else{
							ArtCount++;
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
							qty = random_no(20) +1;
							TotQty += qty;
							table.clear();
							table.sendKeys(""+qty);
							click(clck);
							RcvdQty1 = qty.toString()+" "+UOM;
							Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = TotRcvdQty - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							if(DiffQty1.equals("0")){
							}else{
								OtherQty++;
							}
							TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
							TotRcvdQty_rej = TotRcvdQty1;
						}
						if(CPBD_ind.equals("1")){
							TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
							String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
						}else{
							TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

						}

						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

						String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
						Applst_Art.addAll(StringToListCreation(Str1_disp));

						app1.add(Art1);
						app1.add(TotRcvdQty_rej);
						if(DiffQty1.equals("0")){					
						}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}else{
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}

						click(clckchckBox);
						waitForJSandJQueryToLoad(driver);
					}
				}else if(n==14){
					String Rcvdqty_1 = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty_1 = table.getText();
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04")))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1]+ " " +String[2]+ " " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
					}
					app2.add(Art1);
					app2.add(Rcvdqty_1);
				}
			}
			Applst1.add(app2);
			DBLst1.add(app1);
		}
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Article details before changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Total Received Qty details of each article after changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst1, DBLst1);
		List<List<Object>> Applst2 = new ArrayList<List<Object>>();
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Applst_Rcvd_Review.size()>0){
			for(int k=1;k<=RecOrdObj.VndrRcvngRvw.size();k++){
				if(k==2){
					scrolldown(driver);
				}
				WebElement table=null;
				List app = new ArrayList();
				table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,1,driver);
				String Art1 = table.getText();
				String Rnd_wgt_ind = "";
				String Disp_ind = "";
				String CPBD_ind = "";
				String Temp_ind = "";
				for(int m=0;m<DBList1.size();m++){
					if(Art1.equals(DBList1.get(m).get(1).toString())){
						Rnd_wgt_ind = DBList1.get(m).get(4).toString();
						Disp_ind = DBList1.get(m).get(5).toString();
						CPBD_ind = DBList1.get(m).get(10).toString();
						if(Method.equals("VendorHighTemp")){
							Temp_ind = DBList1.get(m).get(14).toString();}
						else if(Method.equals("POReject")){
							Temp_ind = DBList1.get(m).get(14).toString();}
						else{
							Temp_ind = " ";
						}
						break;
					}
				}
				for(int l=1;l<=12;l++){
					if(l==4 || l==8){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String getQty = table.getText();
						String  String2 [] = splitString(getQty," ");
						String Qty = decimalFormat1(String2[0]) + " " +String2[1];
						app.add(Qty);
					}
					else if(l==5){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}
					else if(l==9){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						else if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}
					else if(l==10){
						String Diff = "";
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue12, k,l,driver);
						if(table.getAttribute("class").equals("valueUp")){
							Diff = table.getText();
						}
						if(table.getAttribute("class").equals("valueDown")){
							Diff = "-"+table.getText()+"";
						}
						app.add(Diff);
					}
					else if(l==12){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue13, k,l,driver);
						click(table);
					}
					else if(l==2||l==3){

					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						app.add(table.getText());
					}
				}
				Applst2.add(app);

			}
			htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Review Discrepancies of each article***;;;Pass");
			ElementContains1(cName, mName,extLogger,driver, Applst2, Applst_Rcvd_Review);
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);
		}
		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(DBList.get(0).get(11).toString()) && RecOrdObj.getOtherQty.getText().toString().equals(decimalFormat1(OtherQty.toString()))){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(11).toString()+", "+decimalFormat1(OtherQty.toString())+"];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(11).toString()+", "+decimalFormat1(OtherQty.toString())+"];Fail");
		}

		click(RecOrdObj.SubmitReceiving);
		if(TotQty>0){
			click(RecOrdObj.ClckContinue);
		}
		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){
			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}

			String ChckUpdatedFlag = RecOrdObj.UpdateRecvdFlag.getText();
			String ChckTrnsfr = RecOrdObj.ChkTransfr.getText();
			String ChckVndrAuthrizatn = RecOrdObj.ChkVendorClaim.getText();

			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #")){
				htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Fail");
			}


			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(3).toString().equals(decimalFormat1(TotQty.toString())) && ValueList1.get(0).get(4).toString().equals("NA") && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(5).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+decimalFormat1(TotQty.toString())+", NA, "+DBList.get(0).get(5).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+decimalFormat1(TotQty.toString())+", NA, "+DBList.get(0).get(5).toString()+"];Fail");
			}

			if(ValueList1.get(0).get(6).toString().equals(decimalFormat1(TotRcvdWgt.toString())) && ValueList1.get(0).get(7).toString().equals("NA") && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE BY LINE")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", NA, "+usernm1+", RECEIVE BY LINE];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", NA, "+usernm1+", RECEIVE BY LINE];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals(Invoice) && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Fail");
			}

			scrolldown(driver);

			if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);

			click(RecOrdObj.ClkRcvGrpBy);
			ComparingArticlesafterRcvngVndrOrdrLineByLine(RecOrdObj,Applst_Rcvd,Applst_Rcvd_Disp2,driver);
		}
		return Applst_Art;
	}

	public List<List<Object>> VendorRecbyException(ReceiveOrderObjects RecOrdObj,String Ordnumber, String Invoice,
			List<List<Object>> DBList, List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, 
			String usernm1, List<List<Object>> DBListDisp, String Method, String Chck,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":AUTHORISED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(5).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();
		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		//Report_AddStep("testcase","*** Checking the order header details displayed after opening the order" , "", "", "Pass");

		String OrdNo2 = RecOrdObj.ChckOrdNo.getText();
		String  String1 [] = splitString(OrdNo2,"#");
		String OrdNum = String1[1];
		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else if(ChckSrc.equals("STORE") && !DBList.get(0).get(3).toString().equals("") && !DBList.get(0).get(3).toString().equals("EMPTY")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(2).toString().equals(Createdby1)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}

		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+RecOrdObj.Gettotalqty.getText()+":"+RecOrdObj.Dispwgt.getText()+":"+RecOrdObj.ChckSealnumb.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(5).toString()+":NA:NA";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
		}else{ 
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles are not displayed properly;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
		}
		if(DBList.get(0).get(8).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.Clrgrpby);
		ComparingArticlesinAuthorisedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"----Receiving the order through Line by Line option----;;;Pass");
		//Report_AddStep("testcase","3200 Site is added successfully in Draft" , "", "", "Pass");
		//System.out.println("Site is added in draft");
		click(RecOrdObj.ClickReceiveOrder);
		waitForJSandJQueryToLoad(driver);

		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		click(RecOrdObj.ClckRE);
		enterText(RecOrdObj.EnterInvoice, Invoice,driver);
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("VendorHighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.equals("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
				waitForJSandJQueryToLoad(driver);
			}
		}else if(Method.equals("POReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Rejected the Not Ranged Articles in the order;;;Pass");
		}else if(Method.equals("POAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
			click(RecOrdObj.ClseMsg);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Accepted the Not Ranged Articles in the order;;;Pass");
		}
		scrolldown(driver);
		scrolldown(driver);

		Integer ArtCount = 0;
		Integer TotQty = 0;
		Integer OtherQty = 0;
		Double TotRcvdWgt = 0.0;
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Review = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Art = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		List<List<Object>> Applst1 = new ArrayList<List<Object>>();
		List<List<Object>> DBLst1 = new ArrayList<List<Object>>();
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp2 = new ArrayList<List<Object>>();
		int count1 = 0;
		for(int k=1;k<=RecOrdObj.VndrRcvng.size();k++){
			if(k==2){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app2 = new ArrayList();
			List app_rcvd = new ArrayList();
			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String UOM = "";
			String PI_OM = "";
			String OM = "";
			String OMvthUOM = "";
			String OrdQTy = "";
			String TotOrdQty = "";
			String BaseUOM = "";
			String OrdQtyvthOutUOM = "";
			String OM2 = "";
			String DspWgt1 = "";
			String OrdQtyvthOutUOM2 = "";
			String Temp_ind = "";
			String NotRngd_ind = "";
			String TotRcvunits = "";
			String OrdQtyvthoutUOM1 = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(1).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(4).toString();
					Disp_ind = DBList1.get(m).get(5).toString();
					CPBD_ind = DBList1.get(m).get(10).toString();
					UOM = DBList1.get(m).get(3).toString();
					PI_OM = decimalFormat1(DBList1.get(m).get(12).toString());
					OM = decimalFormat1(DBList1.get(m).get(13).toString());
					OMvthUOM = DBList1.get(m).get(6).toString();
					OrdQtyvthoutUOM1 = decimalFormat1(DBList1.get(m).get(2).toString());
					OrdQTy = DBList1.get(m).get(7).toString();
					TotOrdQty = DBList1.get(m).get(8).toString();
					BaseUOM = DBList1.get(m).get(11).toString();
					if(Method.equals("VendorHighTemp")){
						Temp_ind = DBList1.get(m).get(14).toString();}
					else if(Method.equals("POReject")){
						Temp_ind = DBList1.get(m).get(14).toString();
					}else if(Method.equals("POAccept")){
						NotRngd_ind = DBList1.get(m).get(14).toString();
						Temp_ind = " ";
					}else{
						Temp_ind = " ";

					}
					if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04")){
						OrdQtyvthOutUOM2 = "0";
						TotRcvunits = "0 " +BaseUOM;
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						OrdQtyvthOutUOM2 = "0";
						TotRcvunits = "0";
					}else{
						OrdQtyvthOutUOM2 = decimalFormat1(DBList1.get(m).get(2).toString());
						TotRcvunits = TotOrdQty;
					}
					break;
				}
			}
			for(int l=1;l<=14;l++){
				if(l==4 ){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getOM1 = table.getText();
					String OM1 = "";
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OM2 = OMvthUOM;
					}else{
						String  String2 [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String2[0]) + " " +String2[1];
					}
					app.add(OM1);
				}else if(l==9){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getQty = table.getText();
					String  String2 [] = splitString(getQty," ");
					String Qty = decimalFormat1(String2[0]) + " " +String2[1];
					app.add(Qty);
				}
				else if(l==10){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}
					app.add(gettotordty2);
				}else if(l==12 || l ==11){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);				
					app.add(table.getText());
				}
				else if(l==13){
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						app.add(" ");
					}else if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue16, k,l,driver);
						String Rcvdqty = table.getText();
						app.add(Rcvdqty);
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
						if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
							String DspWgt = table1.getAttribute("value");
							if(table.getAttribute("disabled")!=null && table1.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
							app.add(DspWgt);
						}
					}
					else if(Rnd_wgt_ind.equals("Y")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						String Rcvdqty = table.getAttribute("value");
						WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
						String DspWgt = table1.getAttribute("value");
						app.add(Rcvdqty);
						app.add(DspWgt);
					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						if((Temp_ind.equals("03") || Temp_ind.equals("01")) || (Temp_ind.equals("DA") || Temp_ind.equals("ES")) || Temp_ind.equals("04")){
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty field is disabled ;;;Pass");
							}
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);
						}else{
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);	}			
					}
				}
				else if(l==14){
					String Rcvdqty = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty = table.getText();
					}else if(Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04"))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){					
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{					
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(Rcvdqty);
				}
				else if(l==2||l==3||l==5||l==6||l==7||l==8){

				}
				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst.add(app);
			if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA: :NA";
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if(Rnd_wgt_ind.equals("Y")){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+DspWgt1+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else{			
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+OrdQtyvthOutUOM2+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}
			String Rcvdqty_1 = "";
			for(int n=1;n<=14;n++){
				String TotRcvdunits = "";
				Float TotRcvd_NUM = (float) 0;
				if(n==13){
					if(k==1){
						if(Rnd_wgt_ind.equals("Y")){
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty = "";
							Double Wgt = 0.0;
							Double PIQty = 0.0;
							String TotRcvdQty_rej = "";
							if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
								RcvdQty1 = OrdQTy;
								TotRcvdQty = TotOrdQty;
								TotRcvdQty_rej = TotRcvdQty;
								ArtCount++;
								DiffQty1 = "0";
								Integer qty = Integer.parseInt(OrdQtyvthOutUOM2);
								TotQty += qty;
								PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								String gettotrcvdty3 = TotOrdQty.replace("\n", " ").replace("\r", " ");
								String  String [] = splitString(gettotrcvdty3," ");
								String Wgt1 = decimalFormat1(String[0]);
								Wgt = Double.parseDouble(Wgt1);
							}
							else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES") || Temp_ind.equals("04")){
								RcvdQty1 = "0 " +UOM;
								TotRcvdQty = "0 " +BaseUOM;
								if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									TotRcvdQty_rej = "0";
								}else{
									TotRcvdQty_rej = TotRcvdQty;
								}

								Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = 0 - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								Wgt = 0.0;
								PIQty = 0.0;
								ArtCount++;
							}else{
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

								Integer qty = random_no(20) +1;
								ArtCount++;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
								Wgt = random_no(20) +1.359;
								Enterweight.clear();
								Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
								click(clck);
								Double RcvQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = RcvQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								RcvdQty1 = qty.toString()+" "+UOM;

								PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
								TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
								TotRcvdQty_rej = TotRcvdQty;
							}
							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}

							click(clckchckBox);
							waitForJSandJQueryToLoad(driver);
						}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue14, k,n,driver);
							app1.add(Art1);
							app1.add("NA");
							click(table);
							waitForJSandJQueryToLoad(driver);
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA::NA:"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
							Applst_Rcvd_Disp = getValuesFromTable(RecOrdObj.UNRcvddispListSize);
							removeIndex(Applst_Rcvd_Disp, "9");
							removeIndex(Applst_Rcvd_Disp, "7");
							removeIndex(Applst_Rcvd_Disp, "2");
							removeIndex(Applst_Rcvd_Disp, "1");

							for(int as = 0;as<RecOrdObj.UNRcvddispListSize.size();as++){
								WebElement articl = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispart, as+1,driver);
								table = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispcheckrecvd, as+1,driver);
								WebElement TotOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotord, as+1,driver);
								WebElement ClckChxBox = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispChxBox, as+1,driver);
								Integer qty = 0;
								String Dispart = articl.getText();
								for(int ak=0;ak<DBListDisp.size();ak++){
									if(Art1.equals(DBListDisp.get(ak).get(0).toString()) && Dispart.equals(DBListDisp.get(ak).get(1).toString())){
										String DiffQty1 = "";
										String Rcvdqty = "";
										String TotRcvdQty1 = "";
										String DispRcvUnits = "";
										if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES") || Temp_ind.equals("04")){
											Rcvdqty = "0 " +BaseUOM;
											TotRcvdQty1 = "0 " +BaseUOM;
											DispRcvUnits = "0 " +BaseUOM;
											Double DiffQty = 0 - Double.parseDouble(DBListDisp.get(ak).get(5).toString());
											DiffQty1 = decimalFormat1(DiffQty.toString());										
											qty = 0;
										}else{
											qty = random_no(399) +1;
											table.clear();
											table.sendKeys(""+qty);
											WebElement table1 = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotrecvd, as+1,driver);
											click(TotOrdqty);

											Rcvdqty = qty.toString()+" "+DBListDisp.get(ak).get(5).toString();
											DispRcvUnits = DBListDisp.get(ak).get(2).toString();
											Double TotRcvdQty = qty * 1.0;
											TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + DBListDisp.get(ak).get(5).toString();
											Double DiffQty = qty - Double.parseDouble(DBListDisp.get(ak).get(4).toString());
											DiffQty1 = decimalFormat1(DiffQty.toString());

										}
										String Str1_disp_rcvd = ""+articl.getText()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":NA:NA:"+DispRcvUnits;
										Applst_Rcvd_Disp1.addAll(StringToListCreation(Str1_disp_rcvd));
										click(ClckChxBox);
										waitForJSandJQueryToLoad(driver);
										String Str1_disp = ""+articl.getText()+":"+qty;
										Applst_Art.addAll(StringToListCreation(Str1_disp));

										String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":NA:NA:"+Rcvdqty+":"+TotRcvdQty1+":"+DBListDisp.get(ak).get(3).toString();
										Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));

										if(DiffQty1.equals("0")){					
										}else{
											String Updt_rcvd_DB2 = ""+Dispart+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":NA:NA:"+Rcvdqty+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
											Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
										}
									}
								}
							}
							htmlToExtent(cName,mName,extLogger,driver, "***Comparing the component details of Display article*** "+Art1+";;;Pass");
							ElementContains1(cName, mName,extLogger,driver, Applst_Rcvd_Disp, Applst_Rcvd_Disp1);
							click(RecOrdObj.ClckOKDsip);
							waitForJSandJQueryToLoad(driver);
							//app1.add("");
						}else{
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty1 = "";
							Double TotRcvdQty2 = 0.0;
							Integer qty = 0;
							String TotRcvdQty_rej = "";
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
							if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
								RcvdQty1 = OrdQTy;
								TotRcvdQty1 = TotOrdQty;
								TotRcvdQty_rej = TotRcvdQty1;
								ArtCount++;
								DiffQty1 = "0";
								qty = Integer.parseInt(OrdQtyvthOutUOM2);
								TotQty += qty;
							}
							else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES") || Temp_ind.equals("04")){
								RcvdQty1 = "0 " +UOM;
								TotRcvdQty1 = "0 " +BaseUOM;
								if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									TotRcvdQty_rej = "0";
								}else{
									TotRcvdQty_rej = TotRcvdQty1;
								}
								Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = 0 - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								ArtCount++;
							}else{
								ArtCount++;
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
								qty = random_no(20) +1;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								click(clck);
								RcvdQty1 = qty.toString()+" "+UOM;
								Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = TotRcvdQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
								TotRcvdQty_rej = TotRcvdQty1;
							}
							if(CPBD_ind.equals("1")){
								TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
								String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));
							}else{
								TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

							}

							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}

							click(clckchckBox);
							waitForJSandJQueryToLoad(driver);
						}
					}else{
						if(Rnd_wgt_ind.equals("Y")){
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty = "";
							Double Wgt = 0.0;
							Double PIQty = 0.0;
							String TotRcvdQty_rej = "";
							Integer qty = Integer.parseInt(OrdQtyvthOutUOM2);
							ArtCount++;
							TotQty += qty;
							Wgt = Double.parseDouble(DspWgt1);
							Double RcvQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							RcvdQty1 = qty.toString()+" "+UOM;
							PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
							TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
							TotRcvdQty_rej = TotRcvdQty;

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

						}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
							app1.add(Art1);
							app1.add("NA");
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA::NA:"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							Integer qty = 0;
							for(int ak=0;ak<DBListDisp.size();ak++){
								if(Art1.equals(DBListDisp.get(ak).get(0).toString())){
									String DiffQty1 = "";
									String Rcvdqty = "";
									String TotRcvdQty1 = "";
									String DispRcvUnits = "";

									qty = Integer.parseInt(DBListDisp.get(ak).get(4).toString());

									Rcvdqty = qty.toString()+" "+DBListDisp.get(ak).get(5).toString();
									DispRcvUnits = DBListDisp.get(ak).get(2).toString();
									Double TotRcvdQty = qty * 1.0;
									TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + DBListDisp.get(ak).get(5).toString();

									String Str1_disp = ""+DBListDisp.get(ak).get(1).toString()+":"+qty;
									Applst_Art.addAll(StringToListCreation(Str1_disp));

									String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":NA:NA:"+Rcvdqty+":"+TotRcvdQty1+":"+DBListDisp.get(ak).get(3).toString();
									Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));
								}
							}
						}else{
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty1 = "";
							Double TotRcvdQty2 = 0.0;
							Integer qty = 0;
							String TotRcvdQty_rej = "";
							ArtCount++;
							qty = Integer.parseInt(OrdQtyvthOutUOM2);
							TotQty += qty;
							RcvdQty1 = qty.toString()+" "+UOM;
							Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(OrdQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
							TotRcvdQty_rej = TotRcvdQty1;
							if(CPBD_ind.equals("1")){
								TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
								String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));
							}else{
								TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

							}
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);

						}

					}
				}
				else if(n==14){

					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty_1 = table.getText();
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04")))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1]+ " " +String[2]+ " " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
					}			
					app2.add(Art1);
					app2.add(Rcvdqty_1);
				}
			}
			Applst1.add(app2);
			DBLst1.add(app1);
		}
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Article details before changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Total Received Qty details of each article after changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst1, DBLst1);
		List<List<Object>> Applst2 = new ArrayList<List<Object>>();
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(DBList1.size()>1){
		click(RecOrdObj.ClckyES);
		waitForJSandJQueryToLoad(driver);
		}
		if(Applst_Rcvd_Review.size()>0){
			for(int k=1;k<=RecOrdObj.VndrRcvngRvw.size();k++){
				if(k==2){
					scrolldown(driver);
				}
				WebElement table=null;
				List app = new ArrayList();
				table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,1,driver);
				String Art1 = table.getText();
				String Rnd_wgt_ind = "";
				String Disp_ind = "";
				String CPBD_ind = "";
				String Temp_ind = "";
				for(int m=0;m<DBList1.size();m++){
					if(Art1.equals(DBList1.get(m).get(1).toString())){
						Rnd_wgt_ind = DBList1.get(m).get(4).toString();
						Disp_ind = DBList1.get(m).get(5).toString();
						CPBD_ind = DBList1.get(m).get(10).toString();
						if(Method.equals("VendorHighTemp")){
							Temp_ind = DBList1.get(m).get(14).toString();}
						else if(Method.equals("POReject")){
							Temp_ind = DBList1.get(m).get(14).toString();}
						else{
							Temp_ind = " ";
						}
						break;
					}
				}
				for(int l=1;l<=12;l++){
					if(l==4 || l==8){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String getQty = table.getText();
						String  String2 [] = splitString(getQty," ");
						String Qty = decimalFormat1(String2[0]) + " " +String2[1];
						app.add(Qty);
					}
					else if(l==5){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}
					else if(l==9){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("04"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						else if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}
					else if(l==10){
						String Diff = "";
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue12, k,l,driver);
						if(table.getAttribute("class").equals("valueUp")){
							Diff = table.getText();
						}
						if(table.getAttribute("class").equals("valueDown")){
							Diff = "-"+table.getText()+"";
						}
						app.add(Diff);
					}
					else if(l==12){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue13, k,l,driver);
						click(table);
					}
					else if(l==2||l==3){

					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						app.add(table.getText());
					}
				}
				Applst2.add(app);

			}
			htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Review Discrepancies of each article***;;;Pass");
			ElementContains1(cName, mName,extLogger,driver, Applst2, Applst_Rcvd_Review);
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);
		}
		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(DBList.get(0).get(11).toString()) && RecOrdObj.getOtherQty.getText().toString().equals(decimalFormat1(OtherQty.toString()))){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(11).toString()+", "+decimalFormat1(OtherQty.toString())+"];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(11).toString()+", "+decimalFormat1(OtherQty.toString())+"];Fail");
		}

		click(RecOrdObj.SubmitReceiving);
		if(TotQty>0){
			click(RecOrdObj.ClckContinue);
		}
		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){
			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}

			String ChckUpdatedFlag = RecOrdObj.UpdateRecvdFlag.getText();
			String ChckTrnsfr = RecOrdObj.ChkTransfr.getText();
			String ChckVndrAuthrizatn = RecOrdObj.ChkVendorClaim.getText();

			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #")){
				htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Fail");
			}


			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(3).toString().equals(decimalFormat1(TotQty.toString())) && ValueList1.get(0).get(4).toString().equals("NA") && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(5).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+decimalFormat1(TotQty.toString())+", NA, "+DBList.get(0).get(5).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+decimalFormat1(TotQty.toString())+", NA, "+DBList.get(0).get(5).toString()+"];Fail");
			}

			if(ValueList1.get(0).get(6).toString().equals(decimalFormat1(TotRcvdWgt.toString())) && ValueList1.get(0).get(7).toString().equals("NA") && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE BY EXCEPTION")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", NA, "+usernm1+", RECEIVE BY EXCEPTION];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", NA, "+usernm1+", RECEIVE BY EXCEPTION];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals(Invoice) && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Fail");
			}

			scrolldown(driver);

			if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);

			click(RecOrdObj.ClkRcvGrpBy);
			ComparingArticlesafterRcvngVndrOrdrLineByLine(RecOrdObj,Applst_Rcvd,Applst_Rcvd_Disp2,driver);
		}
		return Applst_Art;
	}


	public List<List<Object>> CorrectingtheorderbychangingOM(ReceiveOrderObjects RecOrdObj,String Ordnumber, 
			List<List<Object>> DBList, List<List<Object>> DBList1, String username, String usernm1, 
			List<List<Object>> DBListDisp, List<List<Object>> RecvDet, String RndmWgt, List<List<Object>> DBListDisp1,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		String ChilledTemp1;
		String FrozenTemp1;
		if(RecvDet.get(0).get(5)==null){
			ChilledTemp1 = "NA";
		}else{
			ChilledTemp1 = RecvDet.get(0).get(5).toString();
		}
		if(RecvDet.get(0).get(6)==null){
			FrozenTemp1 = "NA";
		}else{
			FrozenTemp1 = RecvDet.get(0).get(6).toString();
		}
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		String Str1 = ""+DBList.get(0).get(0).toString()+":"+DBList.get(0).get(1).toString()+":RECEIVED:"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(5).toString()+":0";
		results1.addAll(StringToListCreation(Str1));
		checkingOrderDetails(RecOrdObj,results1,driver);

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String OrdNo1 = RecOrdObj.ChckOrdNo.getText();
		Long OrdNum =  Long.parseLong(OrdNo1.replaceAll("[^0-9\\.]+", ""));
		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		String onshowdate = RecOrdObj.ChckOnshwdate.getText();

		if(ChckSrc.equals("SUGO")){
			String onshowdate1 = RecOrdObj.ChckOnshwdate1.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Received") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(onshowdate) && DBList.get(0).get(2).toString().equals(onshowdate1)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else if(ChckSrc.equals("STORE") && DBList.get(0).get(3).toString().equals("") && !DBList.get(0).get(3).toString().equals("EMPTY")){
			String onshowdate1 = RecOrdObj.ChckOnshwdate1.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Received") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(onshowdate) && DBList.get(0).get(2).toString().equals(onshowdate1)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Received") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}

		if(DBList.get(0).get(8).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}


		if(RecOrdObj.ChckStat.getText().equals("Received")){
			htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
		}

		String ChckUpdatedFlag = RecOrdObj.UpdateRecvdFlag.getText();
		String ChckTrnsfr = RecOrdObj.ChkTransfr.getText();
		String ChckVndrAuthrizatn = RecOrdObj.ChkVendorClaim.getText();
		String RecvdTime = RecOrdObj.ChckRcvdtime.getText();

		ValueList1 = gettingValuesafterReceiving(RecOrdObj);

		if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #") && RecvdTime.equals(RecvDet.get(0).get(9).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Fail");
		}

		String Recv_appl = "NA:0:"+DBList.get(0).get(6).toString()+":"+decimalFormat1(RecvDet.get(0).get(3).toString())+":NA:"+DBList.get(0).get(5).toString()+":"+decimalFormat1(DBList.get(0).get(9).toString())+":NA:"+RecvDet.get(0).get(8).toString()+":"+ChilledTemp1+":"+FrozenTemp1+":"+RecvDet.get(0).get(7).toString()+":NA";
		DBlst.addAll(StringToListCreation(Recv_appl));

		String Recv_Brwsrappl = ""+ValueList1.get(0).get(0).toString()+":"+ValueList1.get(0).get(1).toString()+":"+ValueList1.get(0).get(2).toString()+":"+ValueList1.get(0).get(3).toString()+":"+ValueList1.get(0).get(4).toString()+":"+ValueList1.get(0).get(5).toString()+":"+decimalFormat1(ValueList1.get(0).get(6).toString())+":"+ValueList1.get(0).get(7).toString()+":"+ValueList1.get(0).get(8).toString()+":"+ValueList1.get(0).get(10).toString()+":"+ValueList1.get(0).get(11).toString()+":"+ValueList1.get(0).get(12).toString()+":"+ValueList1.get(0).get(13).toString();
		Applst.addAll(StringToListCreation(Recv_Brwsrappl));

		htmlToExtent(cName,mName,extLogger,driver,"**** Checking Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered, Total Weight Received, Total Dispatched Weight, Received User, Chilled Temp, Frozen Temp, Docket ID, Seal Number details;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
		DBlst.clear();
		Applst.clear();
		ValueList1.clear();

		scrolldown(driver);

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Pass");

		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Fail");	
		}


		scrolldown(driver);
		scrolldown(driver);

		click(RecOrdObj.ClkRcvGrpBy);
		comparingArticlesdurigcorrecting(RecOrdObj,DBList1,DBListDisp,driver);
		click(RecOrdObj.ClckUpdateQty);
		htmlToExtent(cName,mName,extLogger,driver,"*****Comparing the header details after clicking Updated Received Qty button******;;;Pass");
		Long OrdNum1 =  Long.parseLong(RecOrdObj.Chkordnum.getText().replaceAll("[^0-9\\.]+", ""));
		Long getRcvdArt =  Long.parseLong(RecOrdObj.Chklistofart.getText().replaceAll("[^0-9\\.]+", ""));

		String StrRcvd_appl = ""+OrdNum1.toString()+":"+RecOrdObj.Chksuplr.getText()+":"+RecOrdObj.Chkrcvdstatus.getText()+":"+RecOrdObj.ChkSave.getText()+":"+RecOrdObj.ChkCancel.getText()+":"+getRcvdArt.toString();
		Applst.addAll(StringToListCreation(StrRcvd_appl));

		String DB_appl = ""+Ordnumber+":"+DBList.get(0).get(4).toString()+":Received:Save:Cancel:"+DBList.get(0).get(6).toString();
		DBlst.addAll(StringToListCreation(DB_appl));

		ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
		DBlst.clear();
		Applst.clear();
		click(RecOrdObj.ChckOM);
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_units = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp2 = new ArrayList<List<Object>>();
		Integer TotQty = 0;
		Double TotRcvdWgt = 0.0;

		for(int k=1;k<=RecOrdObj.updaterecvd.size();k++){
			if(k==5){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app_rcvd = new ArrayList();

			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String UOM = "";
			String PI_OM = "";
			String OM = "";
			String OMvthUOM = "";
			String OrdQTy = "";
			String TotOrdQty = "";
			String BaseUOM = "";
			String RcvdQty = "";
			String TotRcvQty = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(0).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(8).toString();
					Disp_ind = DBList1.get(m).get(10).toString();
					CPBD_ind = DBList1.get(m).get(9).toString();
					UOM = DBList1.get(m).get(11).toString();
					PI_OM = decimalFormat1(DBList1.get(m).get(12).toString());
					OM = DBList1.get(m).get(15).toString();
					OMvthUOM = DBList1.get(m).get(1).toString();
					OrdQTy = DBList1.get(m).get(2).toString();
					TotOrdQty = DBList1.get(m).get(3).toString();
					RcvdQty = DBList1.get(m).get(6).toString();
					TotRcvQty = DBList1.get(m).get(7).toString();
					BaseUOM = DBList1.get(m).get(14).toString();
					break;
				}
			}
			for(int l=1;l<=11;l++){
				if(l==4){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					String getOM1 = table.getText();
					String  String1 [] = splitString(getOM1," ");
					String OM1 = decimalFormat1(String1[0]) + " " +String1[1];
					app.add(OM1);
				}
				else if(l==6){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotordty2);
				}
				else if(l==10){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					String gettotrcvdty2 = "";
					String gettotrcvdqty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
						gettotrcvdty2 = gettotrcvdqty1;
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotrcvdty2);
				}

				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst.add(app);

			for(int n=1;n<=11;n++){
				String TotRcvdunits = "";
				if(n==11){
					if(!Rnd_wgt_ind.equals("Y") && !Disp_ind.equals("Y")){
						app_rcvd.add(Art1);
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue15, k,n,driver);
						if(table.getAttribute("readonly")==null){
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,8,driver);
							Integer qty = random_no(29) +1;
							TotQty += qty;
							Actions action = new Actions(driver);
							action.moveToElement(table).doubleClick().perform();
							//table.clear();
							table.sendKeys(""+qty);
							click(clck);
							Float TotOrd_NUM =  Float.parseFloat(RcvdQty.replaceAll("[^0-9\\.]+", ""));

							Float TOtRcvqty = Float.parseFloat(TotOrd_NUM.toString()) * qty;
							String TotRcvdQty = decimalFormat1(TOtRcvqty.toString())+ " "+BaseUOM;
							String OM1 = decimalFormat1(qty.toString())+ " "+BaseUOM;
							app_rcvd.add(decimalFormat1(TOtRcvqty.toString()));

							String Updt_rcvd_DB1 = ""+Art1+":"+OM1+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
							htmlToExtent(cName,mName,extLogger,driver,"*****New OM changed for the article "+Art1+" is "+qty+"******;;;Pass");
						}

						else{

							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty+":"+TotRcvQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
						}
					}else{
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty+":"+TotRcvQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
					}
				}


			}
			if(!Rnd_wgt_ind.equals("Y") && !Disp_ind.equals("Y")){
				Applst_Rcvd_units.add(app_rcvd);
			}else{

			}

		}

		removeIndex(Applst, "10");
		removeIndex(Applst, "8");
		removeIndex(Applst, "2");
		removeIndex(Applst, "1");
		for(int i=0;i<Applst.size();i++){
			String Art = Applst.get(i).get(0).toString();
			for(int j=0;j<DBList1.size();j++){
				if(Art.equals(DBList1.get(j).get(0).toString())){
					String Updt_rcvd_DB = ""+DBList1.get(j).get(0).toString()+":"+DBList1.get(j).get(1).toString()+":"+DBList1.get(j).get(2).toString()+":"+DBList1.get(j).get(3).toString()+":"+DBList1.get(j).get(4).toString()+":"+DBList1.get(j).get(5).toString()+":"+DBList1.get(j).get(7).toString();
					DBlst.addAll(StringToListCreation(Updt_rcvd_DB));
					break;
				}
			}
		}
		htmlToExtent(cName,mName,extLogger,driver,"*****Comparing the article details after clicking Updated Received Qty button******;;;Pass");
		ElementContainsTemp(ReceivingArtScenarios,ReceivingArttestname, Applst, DBlst);
		DBlst.clear();
		Applst.clear();
		click(RecOrdObj.ClckSave);
		if(RecOrdObj.Chkmsg.getText().equals("Are you sure you want to save the changes?")){
			click(RecOrdObj.ClckYes);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver, ""+RecOrdObj.Chcksucessmsg.getText()+";;;Pass");
			click(RecOrdObj.Clcktitl);
		}else{
			htmlToExtent(cName,mName,extLogger,driver, "Unable to Correct the received order;;;Pass");
		}
		scrollUp(driver);
		scrollUp(driver);
		ValueList1 = gettingValuesafterReceiving(RecOrdObj);

		if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #") && RecvdTime.equals(RecvDet.get(0).get(9).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Fail");
		}

		String Recv_appl1 = "NA:0:"+DBList.get(0).get(6).toString()+":"+decimalFormat1(RecvDet.get(0).get(3).toString())+":NA:"+DBList.get(0).get(5).toString()+":"+decimalFormat1(DBList.get(0).get(9).toString())+":NA:"+RecvDet.get(0).get(8).toString()+":"+ChilledTemp1+":"+FrozenTemp1+":"+RecvDet.get(0).get(7).toString()+":NA";
		DBlst.addAll(StringToListCreation(Recv_appl1));

		String Recv_Brwsrappl1 = ""+ValueList1.get(0).get(0).toString()+":"+ValueList1.get(0).get(1).toString()+":"+ValueList1.get(0).get(2).toString()+":"+ValueList1.get(0).get(3).toString()+":"+ValueList1.get(0).get(4).toString()+":"+ValueList1.get(0).get(5).toString()+":"+decimalFormat1(ValueList1.get(0).get(6).toString())+":"+ValueList1.get(0).get(7).toString()+":"+ValueList1.get(0).get(8).toString()+":"+ValueList1.get(0).get(10).toString()+":"+ValueList1.get(0).get(11).toString()+":"+ValueList1.get(0).get(12).toString()+":"+ValueList1.get(0).get(13).toString();
		Applst.addAll(StringToListCreation(Recv_Brwsrappl1));

		htmlToExtent(cName,mName,extLogger,driver,"**** Checking Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered, Total Weight Received, Total Dispatched Weight, Received User, Chilled Temp, Frozen Temp, Docket ID, Seal Number details;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
		DBlst.clear();
		Applst.clear();

		scrolldown(driver);

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Pass");

		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Fail");	
		}


		scrolldown(driver);
		scrolldown(driver);

		click(RecOrdObj.ClkRcvGrpBy);
		htmlToExtent(cName,mName,extLogger,driver, "Comparing the article details after correcting the received order;;;Pass");
		ComparingArticlesafterCorrectingtheorder(RecOrdObj,Applst_Rcvd,DBListDisp1,driver);

		return Applst_Rcvd_units;

	}


	public List<List<Object>> Correctingtheorder(ReceiveOrderObjects RecOrdObj,String Ordnumber, List<List<Object>> DBList, 
			List<List<Object>> DBList1, String username, String usernm1, List<List<Object>> DBListDisp, List<List<Object>> RecvDet,
			String RndmWgt,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		String ChilledTemp1;
		String FrozenTemp1;
		if(RecvDet.get(0).get(5)==null){
			ChilledTemp1 = "NA";
		}else{
			ChilledTemp1 = RecvDet.get(0).get(5).toString();
		}
		if(RecvDet.get(0).get(6)==null){
			FrozenTemp1 = "NA";
		}else{
			FrozenTemp1 = RecvDet.get(0).get(6).toString();
		}
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		String Str1 = ""+DBList.get(0).get(0).toString()+":"+DBList.get(0).get(1).toString()+":RECEIVED:"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(5).toString()+":0";
		results1.addAll(StringToListCreation(Str1));
		checkingOrderDetails(RecOrdObj,results1,driver);

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String OrdNo1 = RecOrdObj.ChckOrdNo.getText();
		Long OrdNum =  Long.parseLong(OrdNo1.replaceAll("[^0-9\\.]+", ""));
		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		String onshowdate = RecOrdObj.ChckOnshwdate.getText();

		if(ChckSrc.equals("SUGO")){
			String onshowdate1 = RecOrdObj.ChckOnshwdate1.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Received") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(onshowdate) && DBList.get(0).get(2).toString().equals(onshowdate1)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else if(ChckSrc.equals("STORE") && DBList.get(0).get(3).toString().equals("") && !DBList.get(0).get(3).toString().equals("EMPTY")){
			String onshowdate1 = RecOrdObj.ChckOnshwdate1.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Received") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(onshowdate) && DBList.get(0).get(2).toString().equals(onshowdate1)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Received") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(2).toString().equals(onshowdate)){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Received, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(2).toString()+"];Fail");
			}
		}

		if(DBList.get(0).get(8).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		if(RecOrdObj.ChckStat.getText().equals("Received")){
			htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
		}

		String ChckUpdatedFlag = RecOrdObj.UpdateRecvdFlag.getText();
		String ChckTrnsfr = RecOrdObj.ChkTransfr.getText();
		String ChckVndrAuthrizatn = RecOrdObj.ChkVendorClaim.getText();
		String RecvdTime = RecOrdObj.ChckRcvdtime.getText();

		ValueList1 = gettingValuesafterReceiving(RecOrdObj);

		if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #") && RecvdTime.equals(RecvDet.get(0).get(9).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Fail");
		}

		String Recv_appl = "NA:0:"+DBList.get(0).get(6).toString()+":"+decimalFormat1(RecvDet.get(0).get(3).toString())+":NA:"+DBList.get(0).get(5).toString()+":"+decimalFormat1(DBList.get(0).get(9).toString())+":NA:"+RecvDet.get(0).get(8).toString()+":"+ChilledTemp1+":"+FrozenTemp1+":"+RecvDet.get(0).get(7).toString()+":NA";
		DBlst.addAll(StringToListCreation(Recv_appl));

		String Recv_Brwsrappl = ""+ValueList1.get(0).get(0).toString()+":"+ValueList1.get(0).get(1).toString()+":"+ValueList1.get(0).get(2).toString()+":"+ValueList1.get(0).get(3).toString()+":"+ValueList1.get(0).get(4).toString()+":"+ValueList1.get(0).get(5).toString()+":"+decimalFormat1(ValueList1.get(0).get(6).toString())+":"+ValueList1.get(0).get(7).toString()+":"+ValueList1.get(0).get(8).toString()+":"+ValueList1.get(0).get(10).toString()+":"+ValueList1.get(0).get(11).toString()+":"+ValueList1.get(0).get(12).toString()+":"+ValueList1.get(0).get(13).toString();
		Applst.addAll(StringToListCreation(Recv_Brwsrappl));

		htmlToExtent(cName,mName,extLogger,driver,"**** Checking Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered, Total Weight Received, Total Dispatched Weight, Received User, Chilled Temp, Frozen Temp, Docket ID, Seal Number details;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
		DBlst.clear();
		Applst.clear();
		ValueList1.clear();

		scrolldown(driver);

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Pass");

		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Fail");	
		}


		scrolldown(driver);
		scrolldown(driver);

		click(RecOrdObj.ClkRcvGrpBy);
		comparingArticlesdurigcorrecting(RecOrdObj,DBList1,DBListDisp,driver);
		click(RecOrdObj.ClckUpdateQty);
		htmlToExtent(cName,mName,extLogger,driver,"*****Comparing the header details after clicking Updated Received Qty button******;;;Pass");
		Long OrdNum1 =  Long.parseLong(RecOrdObj.Chkordnum.getText().replaceAll("[^0-9\\.]+", ""));
		Long getRcvdArt =  Long.parseLong(RecOrdObj.Chklistofart.getText().replaceAll("[^0-9\\.]+", ""));

		String StrRcvd_appl = ""+OrdNum1.toString()+":"+RecOrdObj.Chksuplr.getText()+":"+RecOrdObj.Chkrcvdstatus.getText()+":"+RecOrdObj.ChkSave.getText()+":"+RecOrdObj.ChkCancel.getText()+":"+getRcvdArt.toString();
		Applst.addAll(StringToListCreation(StrRcvd_appl));

		String DB_appl = ""+Ordnumber+":"+DBList.get(0).get(4).toString()+":Received:Save:Cancel:"+DBList.get(0).get(6).toString();
		DBlst.addAll(StringToListCreation(DB_appl));

		ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
		DBlst.clear();
		Applst.clear();
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_units = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp2 = new ArrayList<List<Object>>();
		Integer TotQty = 0;
		Double TotRcvdWgt = 0.0;

		for(int k=1;k<=RecOrdObj.updaterecvd.size();k++){
			if(k==5){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app_rcvd = new ArrayList();

			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String UOM = "";
			String PI_OM = "";
			String OM = "";
			String OMvthUOM = "";
			String OrdQTy = "";
			String TotOrdQty = "";
			String BaseUOM = "";
			String RcvdQty = "";
			String TotRcvQty = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(0).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(8).toString();
					Disp_ind = DBList1.get(m).get(10).toString();
					CPBD_ind = DBList1.get(m).get(9).toString();
					UOM = DBList1.get(m).get(11).toString();
					PI_OM = decimalFormat1(DBList1.get(m).get(12).toString());
					OM = DBList1.get(m).get(15).toString();
					OMvthUOM = DBList1.get(m).get(1).toString();
					OrdQTy = DBList1.get(m).get(2).toString();
					TotOrdQty = DBList1.get(m).get(3).toString();
					RcvdQty = DBList1.get(m).get(6).toString();
					TotRcvQty = DBList1.get(m).get(7).toString();
					BaseUOM = DBList1.get(m).get(14).toString();
					break;
				}
			}
			for(int l=1;l<=11;l++){
				if(l==4){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					String getOM1 = table.getText();
					String  String1 [] = splitString(getOM1," ");
					String OM1 = decimalFormat1(String1[0]) + " " +String1[1];
					app.add(OM1);
				}
				else if(l==6){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotordty2);
				}
				else if(l==10){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					String gettotrcvdty2 = "";
					String gettotrcvdqty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0") && gettotrcvdqty1.equals("NA")){
						gettotrcvdty2 = gettotrcvdqty1;
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(Disp_ind.equals("Y")  && CPBD_ind.equals("0") && !gettotrcvdqty1.equals("NA")){
						Integer TotRcvd_NUM =  Integer.parseInt(gettotrcvdqty1.replaceAll("[^0-9\\.]+", ""));
						TotQty += TotRcvd_NUM;
					}
					app.add(gettotrcvdty2);
				}

				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst.add(app);

			for(int n=1;n<=11;n++){
				String TotRcvdunits = "";
				Float TotRcvd_NUM = (float) 0;

				if(n==9){
					if(Rnd_wgt_ind.equals("Y")){
						app_rcvd.add(Art1);
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue12, k,n,driver);
						WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,n-1,driver);
						Integer qty = random_no(20) +1;
						TotQty += qty;
						table.clear();
						table.sendKeys(""+qty);
						WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue13, k,n,driver);
						Enterweight.clear();
						Enterweight.sendKeys(RndmWgt);
						click(clck);
						String RcvdQty1 = qty.toString()+" "+UOM;
						Integer PIQty = Integer.parseInt(PI_OM.toString()) * qty;
						String TotRcvdQty = RndmWgt+ " " +BaseUOM+ " ("+PIQty.toString()+" EA)";
						//app1.add(RcvdQty);
						TotRcvdWgt += Double.parseDouble(RndmWgt.toString());
						app_rcvd.add("51.236");
						app_rcvd.add(PIQty.toString());
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
					}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue14, k,n,driver);
						click(table);
						waitForJSandJQueryToLoad(driver);
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty+":"+TotRcvQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
						Applst_Rcvd_Disp = getValuesFromTable(RecOrdObj.RcvddispListSize);
						removeIndex(Applst_Rcvd_Disp, "7");
						removeIndex(Applst_Rcvd_Disp, "2");
						removeIndex(Applst_Rcvd_Disp, "1");

						for(int as = 0;as<RecOrdObj.RcvddispListSize.size();as++){
							WebElement articl = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.dispart, as+1,driver);
							table = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.dispcheckrecvd, as+1,driver);
							WebElement TotOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.dispchecktotord, as+1,driver);
							Integer qty = random_no(399) +1;
							String Dispart = articl.getText();
							for(int ak=0;ak<DBListDisp.size();ak++){
								if(Art1.equals(DBListDisp.get(ak).get(0).toString()) && Dispart.equals(DBListDisp.get(ak).get(1).toString())){
									table.clear();
									table.sendKeys(""+qty);
									WebElement table1 = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.dispchecktotrecvd, as+1,driver);
									click(TotOrdqty);
									String Str1_disp = ""+articl.getText()+":"+qty;
									Applst_Rcvd_units.addAll(StringToListCreation(Str1_disp));
									String Rcvdqty = qty.toString()+" "+DBListDisp.get(ak).get(7).toString();

									Double TotRcvdQty = qty * Double.parseDouble(DBListDisp.get(ak).get(8).toString());
									String TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + DBListDisp.get(ak).get(7).toString();

									String Str1_disp_rcvd = ""+articl.getText()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(3).toString()+":NA:NA:"+DBListDisp.get(ak).get(4).toString();
									Applst_Rcvd_Disp1.addAll(StringToListCreation(Str1_disp_rcvd));

									String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(3).toString()+":NA:NA:"+Rcvdqty+":"+TotRcvdQty1+":"+DBListDisp.get(ak).get(6).toString();
									Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));
								}

							}

						}
						htmlToExtent(cName,mName,extLogger,driver, "***Comparing the component details of Display article*** "+Art1+";;;Pass");
						ElementContains1(cName, mName,extLogger,driver, Applst_Rcvd_Disp, Applst_Rcvd_Disp1);
						click(RecOrdObj.ClckOK);
						waitForJSandJQueryToLoad(driver);
						//app1.add("");
					}else{
						app_rcvd.add(Art1);
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue12, k,n,driver);
						WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.tablevalue11, k,n-1,driver);
						Integer qty = random_no(20) +1;
						TotQty += qty;
						table.clear();
						table.sendKeys(""+qty);
						click(clck);
						String RcvdQty1 = qty.toString()+" "+UOM;
						Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
						Double TotRcvdQty2 = 0.0;
						String TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
						if(CPBD_ind.equals("1")){
							TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
							app_rcvd.add(decimalFormat1(TotRcvdQty2.toString()));
						}else{
							TotRcvdQty2 = qty * Double.parseDouble(OM.toString());
							app_rcvd.add(decimalFormat1(TotRcvdQty2.toString()));
						}
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

					}
				}

			}

			if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){

			}else{
				Applst_Rcvd_units.add(app_rcvd);
			}
		}

		removeIndex(Applst, "10");
		removeIndex(Applst, "8");
		removeIndex(Applst, "2");
		removeIndex(Applst, "1");
		for(int i=0;i<Applst.size();i++){
			String Art = Applst.get(i).get(0).toString();
			for(int j=0;j<DBList1.size();j++)
				if(Art.equals(DBList1.get(j).get(0).toString())){
					String Updt_rcvd_DB = ""+DBList1.get(j).get(0).toString()+":"+DBList1.get(j).get(1).toString()+":"+DBList1.get(j).get(2).toString()+":"+DBList1.get(j).get(3).toString()+":"+DBList1.get(j).get(4).toString()+":"+DBList1.get(j).get(5).toString()+":"+DBList1.get(j).get(7).toString();
					DBlst.addAll(StringToListCreation(Updt_rcvd_DB));
					break;
				}
		}
		htmlToExtent(cName,mName,extLogger,driver,"*****Comparing the article details after clicking Updated Received Qty button******;;;Pass");
		ElementContainsTemp(ReceivingArtScenarios,ReceivingArttestname, Applst, DBlst);
		DBlst.clear();
		Applst.clear();
		click(RecOrdObj.ClckSave);
		if(RecOrdObj.Chkmsg.getText().equals("Are you sure you want to save the changes?")){
			click(RecOrdObj.ClckYes);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver, ""+RecOrdObj.Chcksucessmsg.getText()+";;;Pass");
			click(RecOrdObj.Clcktitl);
		}else{
			htmlToExtent(cName,mName,extLogger,driver, "Unable to Correct the received order;;;Pass");
		}
		scrollUp(driver);
		scrollUp(driver);
		ValueList1 = gettingValuesafterReceiving(RecOrdObj);

		if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #") && RecvdTime.equals(RecvDet.get(0).get(9).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+", "+RecvdTime+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #, "+RecvDet.get(0).get(9).toString()+"];Fail");
		}

		String Recv_appl1 = "NA:0:"+DBList.get(0).get(6).toString()+":"+decimalFormat1(TotQty.toString())+":NA:"+DBList.get(0).get(5).toString()+":"+decimalFormat1(TotRcvdWgt.toString())+":NA:"+RecvDet.get(0).get(8).toString()+":"+ChilledTemp1+":"+FrozenTemp1+":"+RecvDet.get(0).get(7).toString()+":NA";
		DBlst.addAll(StringToListCreation(Recv_appl1));

		String Recv_Brwsrappl1 = ""+ValueList1.get(0).get(0).toString()+":"+ValueList1.get(0).get(1).toString()+":"+ValueList1.get(0).get(2).toString()+":"+ValueList1.get(0).get(3).toString()+":"+ValueList1.get(0).get(4).toString()+":"+ValueList1.get(0).get(5).toString()+":"+decimalFormat1(ValueList1.get(0).get(6).toString())+":"+ValueList1.get(0).get(7).toString()+":"+ValueList1.get(0).get(8).toString()+":"+ValueList1.get(0).get(10).toString()+":"+ValueList1.get(0).get(11).toString()+":"+ValueList1.get(0).get(12).toString()+":"+ValueList1.get(0).get(13).toString();
		Applst.addAll(StringToListCreation(Recv_Brwsrappl1));

		htmlToExtent(cName,mName,extLogger,driver,"**** Checking Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered, Total Weight Received, Total Dispatched Weight, Received User, Chilled Temp, Frozen Temp, Docket ID, Seal Number details;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
		DBlst.clear();
		Applst.clear();

		scrolldown(driver);

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Pass");

		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+DBList.get(0).get(6).toString()+";Fail");	
		}


		scrolldown(driver);
		scrolldown(driver);

		click(RecOrdObj.ClkRcvGrpBy);
		htmlToExtent(cName,mName,extLogger,driver, "Comparing the article details after correcting the received order;;;Pass");
		ComparingArticlesafterCorrectingtheorder(RecOrdObj,Applst_Rcvd,Applst_Rcvd_Disp2,driver);

		return Applst_Rcvd_units;

	}


	public int random_no(int max) {
		Random rand = new Random();
		int n = rand.nextInt(max);
		return n;
	}

	public void checkingOrderDetails(ReceiveOrderObjects RecOrdObj, List<List<Object>> results1,WebDriver driver) throws IOException{
		List<List<Object>> app = getValuesFromTable(RecOrdObj.Orddet);
		removeIndex(app, "8");
		removeIndex(app, "5");
		ElementContains1(cName, mName,extLogger,driver, app, results1);
		app.clear();
	}

	public void checkingOrderDetailsofOverdueOrder(ReceiveOrderObjects RecOrdObj, List<List<Object>> results1,WebDriver driver) throws IOException{
		List<List<Object>> app = getValuesFromTable(RecOrdObj.OrddetOverdue);

		removeIndex(app, "5");
		ElementContains1(cName, mName,extLogger,driver, app, results1);
		app.clear();
	}


	public void OpenOrderUpdate(ReceiveOrderObjects RecOrdObj,String Ordnumber,WebDriver driver){
		//Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);

	}

	public List<List<Object>> gettingValuesafterReceiving(ReceiveOrderObjects RecOrdObj){
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		String CheckPalletsReceived = RecOrdObj.ChckPltRecv.getText();
		String CheckTotPallets = RecOrdObj.ChckTotPlt.getText();
		String TotArt = RecOrdObj.ChckTotArt.getText();
		String TotCarRcvd = RecOrdObj.ChckTotCarRcv.getText();
		String TotDspQty = RecOrdObj.ChckTotDspqty.getText();
		String TotOrdQty = RecOrdObj.ChckTotOrdqty.getText();
		String TotWgtRcvd = RecOrdObj.ChckTotWgtRcv.getText();
		String TotDspWgt = RecOrdObj.ChckTotDspWgt.getText();
		String Recvdusr = RecOrdObj.ChckRcvdUsr.getText();
		String RecvdMthd = RecOrdObj.ChckRcvdMthd.getText();
		String ChckChldTemp = RecOrdObj.ChckChTmp.getText();
		String ChckFrznTemp = RecOrdObj.ChckFzTemp.getText();
		String ChckDcktNum = RecOrdObj.ChckDcktNum.getText();
		String ChckSealNum = RecOrdObj.ChckSealNum.getText();


		String AddValues = ""+CheckPalletsReceived+":"+CheckTotPallets+":"+TotArt+":"+TotCarRcvd+":"+TotDspQty+":"+TotOrdQty+":"+TotWgtRcvd+":"+TotDspWgt+":"+Recvdusr+":"+RecvdMthd+":"+ChckChldTemp+":"+ChckFrznTemp+":"+ChckDcktNum+":"+ChckSealNum;
		ValueList1.addAll(StringToListCreation(AddValues));
		return ValueList1;
	}

	public List<List<Object>> gettingValuesafterReceivingforSingleSegmentedOrder(ReceiveOrderObjects RecOrdObj){
		List<List<Object>> ValueList5 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = getValuesFromTable(RecOrdObj.receiveTable);
		removeIndex(ValueList1, "4");
		removeIndex(ValueList1, "2");
		removeIndex(ValueList1, "0");
		List<List<Object>> ValueList2 =getValuesFromTable(RecOrdObj.receiveTable1);
		List<List<Object>> ValueList3 =getValuesFromTable(RecOrdObj.receiveTable2); 
		List<List<Object>> ValueList4 =getValuesFromTable(RecOrdObj.receiveTable3); 
		String Dspwgt = "";

		if(ValueList1.get(2).get(1).toString().equals("NA")){
			Dspwgt = "NA";
		}else{
			Dspwgt = decimalFormat1(ValueList1.get(2).get(1).toString());
		}
		String AddValues = ""+ValueList1.get(0).get(0).toString()+":"+ValueList1.get(0).get(1).toString()+":"+ValueList1.get(0).get(2).toString()+":"+ValueList1.get(1).get(0).toString()+":"+ValueList1.get(1).get(1).toString()+":"+ValueList1.get(1).get(2).toString()+":"+decimalFormat1(ValueList1.get(2).get(0).toString())+":"+Dspwgt+":"+ValueList1.get(3).get(0).toString()+":"+ValueList2.get(0).get(3).toString()+":"+ValueList2.get(0).get(5).toString()+":"+ValueList3.get(0).get(1).toString()+":"+ValueList3.get(0).get(3).toString()+":"+ValueList4.get(0).get(1).toString()+":"+ValueList4.get(0).get(3).toString();
		ValueList5.addAll(StringToListCreation(AddValues));
		return ValueList5;
	}

	public List<List<Object>> gettingValuesafterReceivingforSegmentedDelivery(ReceiveOrderObjects RecOrdObj){
		List<List<Object>> ValueList5 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = getValuesFromTable(RecOrdObj.RecieveTableseg);
		removeIndex(ValueList1, "4");
		removeIndex(ValueList1, "2");
		removeIndex(ValueList1, "0");
		List<List<Object>> ValueList2 =getValuesFromTable(RecOrdObj.RecieveTableseg1);
		List<List<Object>> ValueList3 =getValuesFromTable(RecOrdObj.RecieveTableseg2); 
		List<List<Object>> ValueList4 =getValuesFromTable(RecOrdObj.RecieveTableseg3); 
		String Dspwgt = "";

		if(ValueList1.get(2).get(1).toString().equals("NA")){
			Dspwgt = "NA";
		}else{
			Dspwgt = decimalFormat1(ValueList1.get(2).get(1).toString());
		}
		String AddValues = ""+ValueList1.get(0).get(0).toString()+":"+ValueList1.get(0).get(1).toString()+":"+ValueList1.get(0).get(2).toString()+":"+ValueList1.get(1).get(0).toString()+":"+ValueList1.get(1).get(1).toString()+":"+ValueList1.get(1).get(2).toString()+":"+decimalFormat1(ValueList1.get(2).get(0).toString())+":"+Dspwgt+":"+ValueList1.get(3).get(0).toString()+":"+ValueList2.get(0).get(3).toString()+":"+ValueList2.get(0).get(5).toString()+":"+ValueList3.get(0).get(1).toString()+":"+ValueList3.get(0).get(3).toString()+":"+ValueList4.get(0).get(1).toString()+":"+ValueList4.get(0).get(3).toString();
		ValueList5.addAll(StringToListCreation(AddValues));
		return ValueList5;
	}

	public void ComparingArticlesafterReceivingVndrOdrbygivinghighTemp(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			/*String  String1 [] = splitString(getOM1," ");
			String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			gettotdspqty1 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(1).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(4).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(4).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if((DBList1.get(j).get(4).toString().equals("Y") && gettotrcvdqty1.equals("0 KG") && (DBList1.get(j).get(13).toString().equals("01") || DBList1.get(j).get(13).toString().equals("03"))) || (DBList1.get(j).get(4).toString().equals("Y") && gettotrcvdqty1.equals("0 KG") && (DBList1.get(j).get(13).toString().equals("DA") || DBList1.get(j).get(13).toString().equals("ES")))){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}else if(DBList1.get(j).get(4).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(6).toString()) && getdspqty1.equals("NA") && gettotdspqty1.equals("NA") && getOrdqty1.equals(DBList1.get(j).get(7).toString()) && gettotordty2.equals(DBList1.get(j).get(8).toString()) && getrcvdqty1.equals(DBList1.get(j).get(11).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(12).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+", NA, NA, "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(12).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+", NA, NA, "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(12).toString()+"];Fail");
					}
					if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(2).toString()) && getDispDspQty.equals("NA") && getDispTotDspQty.equals("NA") && getDispRcvQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(4).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+", NA, NA, "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+", NA, NA, "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}

	public void ComparingArticlesafterCorrectingtheorder(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			/*String  String1 [] = splitString(getOM1," ");
			String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			gettotdspqty1 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){
						gettotrcvdty2 = gettotrcvdqty1;
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(1).toString()) && getdspqty1.equals(DBList1.get(j).get(4).toString()) && gettotdspqty1.equals(DBList1.get(j).get(5).toString()) && getOrdqty1.equals(DBList1.get(j).get(2).toString()) && gettotordty2.equals(DBList1.get(j).get(3).toString()) && getrcvdqty1.equals(DBList1.get(j).get(6).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(7).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+ ", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are not displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+ ", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}
					if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"-----Display Article "+art+" is present in Order & checking the quantity of the components below-----;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(8).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(3).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(5).toString()) && getDispRcvQty.equals(DBListDisp.get(m).get(6).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(7).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(6).toString()+", "+DBListDisp.get(m).get(7).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(6).toString()+", "+DBListDisp.get(m).get(7).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}

	public void ComparingArticlesafterRcvngASNLineByLine(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			gettotdspqty1 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String gettotdspqty2 = "";
			String OM1 = "";
			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String getOM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(getOM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspqty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspqty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if((DBList1.get(j).get(8).toString().equals("Y") && (DBList1.get(j).get(11).toString().equals("03") || DBList1.get(j).get(11).toString().equals("01"))) || (DBList1.get(j).get(8).toString().equals("Y") && (DBList1.get(j).get(11).toString().equals("DA") || DBList1.get(j).get(11).toString().equals("ES")))){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}else if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){
						gettotrcvdty2 = gettotrcvdqty1;
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(1).toString()) && getdspqty1.equals(DBList1.get(j).get(4).toString()) && gettotdspqty2.equals(DBList1.get(j).get(5).toString()) && getOrdqty1.equals(DBList1.get(j).get(2).toString()) && gettotordty2.equals(DBList1.get(j).get(3).toString()) && getrcvdqty1.equals(DBList1.get(j).get(6).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(7).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+ ", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are not displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+ ", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}
					if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"-----Display Article "+art+" is present in Order & checking the quantity of the components below-----;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(8).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(3).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(5).toString()) && getDispRcvQty.equals(DBListDisp.get(m).get(6).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(7).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(6).toString()+", "+DBListDisp.get(m).get(7).toString()+"];Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(6).toString()+", "+DBListDisp.get(m).get(7).toString()+"];Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}

	public void ComparingArticlesafterRcvngVndrOrdrLineByLine(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			//String gettotdspqty2 = "";
			String OM1 = "";
			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String getOM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(getOM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}

					if((DBList1.get(j).get(8).toString().equals("Y") && (DBList1.get(j).get(11).toString().equals("03") || DBList1.get(j).get(11).toString().equals("01") || DBList1.get(j).get(11).toString().equals("04"))) || (DBList1.get(j).get(8).toString().equals("Y") && (DBList1.get(j).get(11).toString().equals("DA") || DBList1.get(j).get(11).toString().equals("ES")))){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}else if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){
						gettotrcvdty2 = gettotrcvdqty1;
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(1).toString()) && getdspqty1.equals(DBList1.get(j).get(4).toString()) && gettotdspqty1.equals(DBList1.get(j).get(5).toString()) && getOrdqty1.equals(DBList1.get(j).get(2).toString()) && gettotordty2.equals(DBList1.get(j).get(3).toString()) && getrcvdqty1.equals(DBList1.get(j).get(6).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(7).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+ ", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are not displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+ ", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}
					if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"-----Display Article "+art+" is present in Order & checking the quantity of the components below-----;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(8).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(3).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(5).toString()) && getDispRcvQty.equals(DBListDisp.get(m).get(6).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(7).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(6).toString()+", "+DBListDisp.get(m).get(7).toString()+"];Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(6).toString()+", "+DBListDisp.get(m).get(7).toString()+"];Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}


	public void comparingArticlesdurigcorrecting(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		htmlToExtent(cName,mName,extLogger,driver,"*****Comparing the Received details of the order******;;;Pass");
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			/*String  String1 [] = splitString(getOM1," ");
			String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			gettotdspqty1 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else if(DBList1.get(j).get(10).toString().equals("Y")  && DBList1.get(j).get(9).toString().equals("0")){
						gettotrcvdty2 = gettotrcvdqty1;
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(1).toString()) && getdspqty1.equals(DBList1.get(j).get(4).toString()) && gettotdspqty1.equals(DBList1.get(j).get(5).toString()) && getOrdqty1.equals(DBList1.get(j).get(2).toString()) && gettotordty2.equals(DBList1.get(j).get(3).toString()) && getrcvdqty1.equals(DBList1.get(j).get(6).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(7).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are not displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}
					if(DBList1.get(j).get(10).toString().equals("Y")  && DBList1.get(j).get(9).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"----Display Article "+art+" is present in Order & checking the quantity of the components below----;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(6).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(3).toString()) && getDispDspQty.equals("NA") && getDispTotDspQty.equals("NA") && getDispRcvQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(5).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", NA, NA, "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(3).toString()+", NA, NA, "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(5).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}

	}

	public void comparingArticlesafterCreatingOOR(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1,
			List<List<Object>> DBListDisp,WebDriver driver){
		htmlToExtent(cName,mName,extLogger,driver,"*****Comparing the Received details of the order******;;;Pass");
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			/*String  String1 [] = splitString(getOM1," ");
			String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			gettotdspqty1 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else if(DBList1.get(j).get(10).toString().equals("Y")  && DBList1.get(j).get(9).toString().equals("0")){
						gettotrcvdty2 = gettotrcvdqty1;
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(1).toString()) && getdspqty1.equals(DBList1.get(j).get(4).toString()) && gettotdspqty1.equals(DBList1.get(j).get(5).toString()) && getOrdqty1.equals(DBList1.get(j).get(2).toString()) && gettotordty2.equals(DBList1.get(j).get(3).toString()) && getrcvdqty1.equals(DBList1.get(j).get(6).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(7).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units, Received Qty, Total Received units Values are not displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspqty1+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}

				}
			}
		}

	}


	public void ComparingArticlesinAuthorisedStatus(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getArt1, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotOrdQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			/*String  String1 [] = splitString(getOM1," ");
			String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2="";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(1).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(4).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(4).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(6).toString()) && getOrdqty1.equals(DBList1.get(j).get(7).toString()) && gettotordty2.equals(DBList1.get(j).get(8).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units Values are displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units Values are not displayed correctly for article "+getart1+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+"];Fail");
					}
					if(DBList1.get(j).get(9).toString().equals("Y")  && DBList1.get(j).get(10).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispart, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(2).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}

	}

	public void ComparingArticlesinDispatchedStatus(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getArt1, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotOrdQty, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotDspQty, i,driver);
			String getart1=getart.getText();
			String getOM1 = getOM.getText();

			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";

			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String getOM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(getOM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(6).toString()) && getdspqty1.equals(DBList1.get(j).get(7).toString()) && gettotdspty2.equals(DBList1.get(j).get(8).toString()) && getOrdqty1.equals(DBList1.get(j).get(10).toString()) && gettotordty2.equals(DBList1.get(j).get(11).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(10).toString()+", "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(10).toString()+", "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+"];Fail");
					}

					if(DBList1.get(j).get(12).toString().equals("Y")  && DBList1.get(j).get(13).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispart1, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(2).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"];Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"];Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}

	}

	public void ComparingArticlesinDispatchedStatusforSegmentedOrder(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getArt1, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotOrdQty, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotDspQty, i,driver);
			String getart1=getart.getText();
			String getOM1 = getOM.getText();

			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";

			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(2).toString();
				if(getart1.equals(art)){
					/*String  String1 [] = splitString(getOM1," ");
					String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(3).toString()) && getdspqty1.equals(DBList1.get(j).get(6).toString()) && gettotdspty2.equals(DBList1.get(j).get(7).toString()) && getOrdqty1.equals(DBList1.get(j).get(4).toString()) && gettotordty2.equals(DBList1.get(j).get(5).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}

					if(DBList1.get(j).get(10).toString().equals("Y")  && DBList1.get(j).get(9).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispart1, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(4).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}

	}

	public void ComparingArticlesinDispatchedStatusforSegmentedDelivery(ReceiveOrderObjects RecOrdObj, 
			List<List<Object>> DBList1, List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getArtSeg, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOMSeg, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQtySeg, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotOrdQtySeg, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQtySeg, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotDspQtySeg, i,driver);
			String getart1=getart.getText();
			String getOM1 = getOM.getText();

			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";

			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String OM1 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(2).toString();
				if(getart1.equals(art)){
					/*String String1 [] = splitString(getOM1," ");
					String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(OM1.equals(DBList1.get(j).get(3).toString()) && getdspqty1.equals(DBList1.get(j).get(6).toString()) && gettotdspty2.equals(DBList1.get(j).get(7).toString()) && getOrdqty1.equals(DBList1.get(j).get(4).toString()) && gettotordty2.equals(DBList1.get(j).get(5).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}

					if(DBList1.get(j).get(10).toString().equals("Y")  && DBList1.get(j).get(9).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispart1, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(4).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}

	}

	public void ComparingArticlesafterReceivingVndrASNOdr(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, 
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";
			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}

					if(OM1.equals(DBList1.get(j).get(6).toString()) && getdspqty1.equals(DBList1.get(j).get(7).toString()) && gettotdspty2.equals(DBList1.get(j).get(8).toString()) && getOrdqty1.equals(DBList1.get(j).get(10).toString()) && gettotordty2.equals(DBList1.get(j).get(11).toString()) && getrcvdqty1.equals(DBList1.get(j).get(7).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(8).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(10).toString()+", "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(10).toString()+", "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+"];Fail");
					}
					if(DBList1.get(j).get(12).toString().equals("Y")  && DBList1.get(j).get(13).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispRcvQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(2).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}

	public void ComparingArticlesafterReceivingVndrASNOdrvthHighTemp(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1,
			List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";
			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art)){
					/*String  String1 [] = splitString(getOM1," ");
					String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if((DBList1.get(j).get(14).toString().equals("Y") && (DBList1.get(j).get(15).toString().equals("01") || DBList1.get(j).get(15).toString().equals("03")) && gettotrcvdqty1.equals("0 KG")) || (DBList1.get(j).get(14).toString().equals("Y") && (DBList1.get(j).get(15).toString().equals("ES") || DBList1.get(j).get(15).toString().equals("DA")) && gettotrcvdqty1.equals("0 KG"))){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					else if(DBList1.get(j).get(14).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}

					if(OM1.equals(DBList1.get(j).get(6).toString()) && getdspqty1.equals(DBList1.get(j).get(7).toString()) && gettotdspty2.equals(DBList1.get(j).get(8).toString()) && getOrdqty1.equals(DBList1.get(j).get(10).toString()) && gettotordty2.equals(DBList1.get(j).get(11).toString()) && getrcvdqty1.equals(DBList1.get(j).get(16).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(17).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(10).toString()+", "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+", "+DBList1.get(j).get(16).toString()+", "+DBList1.get(j).get(17).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(10).toString()+", "+DBList1.get(j).get(11).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(8).toString()+", "+DBList1.get(j).get(16).toString()+", "+DBList1.get(j).get(17).toString()+"];Fail");
					}
					if(DBList1.get(j).get(12).toString().equals("Y")  && DBList1.get(j).get(13).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispRcvQty.equals(DBListDisp.get(m).get(5).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(5).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(5).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(5).toString()+", "+DBListDisp.get(m).get(5).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}


	public void ComparingArticlesafterReceivingSinglesgmntOdr(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";
			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(2).toString();
				if(getart1.equals(art)){
					/*String  String1 [] = splitString(getOM1," ");
					String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}

					if(OM1.equals(DBList1.get(j).get(3).toString()) && getdspqty1.equals(DBList1.get(j).get(6).toString()) && gettotdspty2.equals(DBList1.get(j).get(7).toString()) && getOrdqty1.equals(DBList1.get(j).get(4).toString()) && gettotordty2.equals(DBList1.get(j).get(5).toString()) && getrcvdqty1.equals(DBList1.get(j).get(6).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(7).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}
					if(DBList1.get(j).get(10).toString().equals("Y")  && DBList1.get(j).get(9).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispRcvQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(2).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}

	public void ComparingArticlesafterReceivingSinglesgmntDlvy(ReceiveOrderObjects RecOrdObj, List<List<Object>> DBList1, List<List<Object>> DBListDisp,WebDriver driver){
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArtSeg, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOMseg, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQtyseg1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQtyseg1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQtyseg1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQtyseg1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQtyseg, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQtyseg, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";
			String OM1 = "";
			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(2).toString();
				if(getart1.equals(art)){
					/*String  String1 [] = splitString(getOM1," ");
					String OM1 = decimalFormat1(String1[0]) + " " +String1[1];*/
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String get_OM2 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(get_OM2," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotdspqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotdspqty1," ");
						gettotdspty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					if(DBList1.get(j).get(8).toString().equals("Y")){
						String gettotrcvdty3 = gettotrcvdqty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotrcvdqty1," ");
						gettotrcvdty2 = decimalFormat1(String[0]) + " " +String[1];
					}

					if(OM1.equals(DBList1.get(j).get(3).toString()) && getdspqty1.equals(DBList1.get(j).get(6).toString()) && gettotdspty2.equals(DBList1.get(j).get(7).toString()) && getOrdqty1.equals(DBList1.get(j).get(4).toString()) && gettotordty2.equals(DBList1.get(j).get(5).toString()) && getrcvdqty1.equals(DBList1.get(j).get(6).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(7).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+", "+DBList1.get(j).get(6).toString()+", "+DBList1.get(j).get(7).toString()+"];Fail");
					}
					if(DBList1.get(j).get(10).toString().equals("Y")  && DBList1.get(j).get(9).toString().equals("0")){

						htmlToExtent(cName,mName,extLogger,driver,"Display Article "+art+" is present in Order & checking the quantity of the components below;;;Pass");
						WebElement getDispIcon = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispRcvQty, i,driver);
						click(getDispIcon);
						waitForJSandJQueryToLoad(driver);
						Integer dispartsize = 0;
						for(int n=0;n<DBListDisp.size();n++){
							if(getart1.equals(DBListDisp.get(n).get(0).toString())){
								dispartsize = Integer.parseInt(DBListDisp.get(n).get(3).toString());
								break;
							}
						}

						for(int l=0;l<dispartsize;l++){
							WebElement getdispart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcomp, l+1,driver);
							WebElement getdispOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompOrdqty, l+1,driver);
							WebElement getdispordTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotOrdqty, l+1,driver);
							WebElement getdispDspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompDspqty, l+1,driver);
							WebElement getdispDspTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotDspqty, l+1,driver);
							WebElement getdispRcvqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompRcvqty, l+1,driver);
							WebElement getdispRcvTotQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDispcompTotRcvqty, l+1,driver);
							String getDispArt = getdispart.getText();
							String getDispOrdQty = getdispOrdqty.getText();
							String getDispTotOrdQty = getdispordTotQty.getText();
							String getDispDspQty = getdispDspqty.getText();
							String getDispTotDspQty = getdispDspTotQty.getText();
							String getDispRcvQty = getdispRcvqty.getText();
							String getDispTotRcvQty = getdispRcvTotQty.getText();
							for (int m=0;m<DBListDisp.size();m++){
								if(getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getart1.equals(DBListDisp.get(m).get(0).toString())){
									if(getart1.equals(DBListDisp.get(m).get(0).toString()) && getDispArt.equals(DBListDisp.get(m).get(1).toString()) && getDispOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispTotOrdQty.equals(DBListDisp.get(m).get(4).toString()) && getDispDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotDspQty.equals(DBListDisp.get(m).get(2).toString()) && getDispRcvQty.equals(DBListDisp.get(m).get(2).toString()) && getDispTotRcvQty.equals(DBListDisp.get(m).get(2).toString())){
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Pass");
									}else{
										htmlToExtent(cName,mName,extLogger,driver,"Display Component Article, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched units, Received Qty, Total Received units are not displayed properly in Browser; Local Values are ["+getDispArt+", "+getDispOrdQty+", "+getDispTotOrdQty+", "+getDispDspQty+", "+getDispTotDspQty+", "+getDispRcvQty+", "+getDispTotRcvQty+"]; DB Values are ["+DBListDisp.get(m).get(1).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(4).toString()+", "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+" "+DBListDisp.get(m).get(2).toString()+", "+DBListDisp.get(m).get(2).toString()+"]; Fail");
									}
									break;
								}
							}
						}
						click(RecOrdObj.ClckOK);
					}
				}
			}
		}
	}

	public void IBTOrdRecinFullvthHighTemp(ReceiveOrderObjects RecOrdObj,String Ordnumber, String Invoice, List<List<Object>> DBList, List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, String usernm1, List<List<Object>> DBListDisp, String Method,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText()+":"+RecOrdObj.ChckSource.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":AUTHORISED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":STOCK TRANSFER:"+DBList.get(0).get(5).toString()+":0:STORE";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");

		String OrdNo1 = RecOrdObj.ChckOrdNo.getText();
		Long OrdNum =  Long.parseLong(OrdNo1.replaceAll("[^0-9\\.]+", ""));
		String RecvStore = RecOrdObj.ChkRcvStore.getText();
		String SendStore = RecOrdObj.ChkSendStore.getText();
		String Deldate1 = RecOrdObj.ChkDeldate.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Source = RecOrdObj.ChkSource.getText();

		if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Authorised") && DBList.get(0).get(1).toString().equals(Deldate1)
				&& DBList.get(0).get(9).toString().equals(RecvStore) && DBList.get(0).get(4).toString().equals(SendStore) && Source.equals("STORE")){
			htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Receiving Store, Sending Store, Source values are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+SendStore+", "+RecvStore+", "+Source+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+", STORE];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Receiving Store, Sending Store, Source values are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+SendStore+", "+RecvStore+", "+Source+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+", STORE];Fail");
		}

		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+RecOrdObj.Gettotalqty.getText()+":"+RecOrdObj.Dispwgt.getText()+":"+RecOrdObj.ChckSealnumb.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(5).toString()+":NA:NA";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
			//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles are not displayed properly;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
		}
		if(DBList.get(0).get(8).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}

		}
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.Clrgrpby);
		ComparingArticlesinAuthorisedStatus(RecOrdObj,DBList1,DBListDisp,driver);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"----Receiving the order in Full----;;;Pass");
		click(RecOrdObj.ClickReceiveOrder);
		waitForJSandJQueryToLoad(driver);
		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}
		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		if(Method.equals("IBTHighTemp")){
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);	
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.contains("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
			}
			waitForJSandJQueryToLoad(driver);
		}
		else if(Method.equals("IBTReject")){
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);	
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);

		}else if(Method.equals("IBTAccept")){
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);	
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
		}else{
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);
		}
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.NextBtn);
		waitForJSandJQueryToLoad(driver);
		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(11).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(11).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(11).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(6).toString()) && CartOrd.equals(DBList.get(0).get(5).toString()) && ArtRecvd.equals(DBList.get(0).get(6).toString()) && CartRecvd.equals(DBList.get(0).get(11).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(DBList.get(0).get(12).toString()) && RecOrdObj.getOtherQty.getText().toString().equals("0")){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(12).toString()+", 0];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(12).toString()+", 0];Fail");
		}

		click(RecOrdObj.SubmitReceiving);
		if(Double.parseDouble(DBList.get(0).get(11).toString())>0.0){
			click(RecOrdObj.ClckContinue);
		}
		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){
			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}

			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(3).toString().equals(DBList.get(0).get(11).toString()) && ValueList1.get(0).get(4).toString().equals("NA") && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(5).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", NA, "+DBList.get(0).get(5).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(11).toString()+", NA, "+DBList.get(0).get(5).toString()+"];Fail");
			}

			if(decimalFormat1(ValueList1.get(0).get(6).toString()).equals(DBList.get(0).get(10).toString()) && ValueList1.get(0).get(7).toString().equals("NA") && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE IN FULL")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+decimalFormat1(ValueList1.get(0).get(6).toString())+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(10).toString()+", NA, "+usernm1+", RECEIVE IN FULL];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+decimalFormat1(ValueList1.get(0).get(6).toString())+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(10).toString()+", NA, "+usernm1+", RECEIVE IN FULL];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals("NA") && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Fail");
			}

			scrolldown(driver);

			if (GetListart1.toString().equals(DBList.get(0).get(6).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Pass");
				//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(6).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);
			click(RecOrdObj.ClkRcvGrpBy);
			ComparingArticlesafterReceivingVndrOdrbygivinghighTemp(RecOrdObj,DBList1,DBListDisp,driver);
		}
	}

	public void WhseOrdRecFullvthhighTemp(ReceiveOrderObjects RecOrdObj,String Ordnumber,List<List<Object>> DBList, List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, String usernm1, List<List<Object>> DBListDisp, String Method,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBList3 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		List<String> SummaryDet = new ArrayList();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":DISPATCHED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":WAREHOUSE:"+DBList.get(0).get(8).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();
		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);

		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		String OrdNo1 = RecOrdObj.ChckOrdNo.getText();
		Long OrdNum =  Long.parseLong(OrdNo1.replaceAll("[^0-9\\.]+", ""));
		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && onshowdate.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}else if((ChckSrc.equals("STORE") || ChckSrc.equals("ALLOCATION"))&& !DBList.get(0).get(3).toString().equals("") && !DBList.get(0).get(3).toString().equals("EMPTY")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && onshowdate.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}

		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && Createdby1.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String DispWghht = "";
		if(RecOrdObj.Dispwgt.getText().toString().equals("NA")){
			DispWghht = "NA";
		}else{
			DispWghht = decimalFormat1(RecOrdObj.Dispwgt.getText().toString());
		}

		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+DispWghht+":"+RecOrdObj.ChckSealnumb.getText()+":"+RecOrdObj.Gettotalqty.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(8).toString();
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
			//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}

		if(DBList.get(0).get(10).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		click(RecOrdObj.Clrgrpby);
		scrolldown(driver);
		scrolldown(driver);

		htmlToExtent(cName,mName,extLogger,driver,"**** Comparing the Article details displayed in Browser ****;;; ");
		ComparingArticlesinDispatchedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Receive Order option is clicked");
		click(RecOrdObj.ClickReceiveOrder);
		waitFor(4);
		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		htmlToExtent(cName,mName,extLogger,driver,"****Receiving the order in Full****;;;Pass");
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("HighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.contains("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
			}
			waitForJSandJQueryToLoad(driver);
		}else if(Method.equals("STOReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
		}else if(Method.equals("STOAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
		}
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.NextBtn);

		waitForJSandJQueryToLoad(driver);

		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(DBList.get(0).get(13).toString()) && RecOrdObj.getOtherQty.getText().toString().equals("0")){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(13).toString()+", 0];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(13).toString()+", 0];Fail");
		}
		click(RecOrdObj.SubmitReceiving);
		if(Integer.parseInt(DBList.get(0).get(12).toString())>0){
			click(RecOrdObj.ClckContinue);
		}
		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){

			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}
			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(7).toString()) && ValueList1.get(0).get(3).toString().equals(DBList.get(0).get(12).toString()) && ValueList1.get(0).get(4).toString().equals(DBList.get(0).get(5).toString()) && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(8).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Fail");
			}
			String DispWghht1 = "";
			if(ValueList1.get(0).get(7).toString().equals("NA")){
				DispWghht1 = "NA";
			}else{
				DispWghht1 = decimalFormat1(ValueList1.get(0).get(7).toString());
			}
			String ReceivWghht = "";
			if(ValueList1.get(0).get(6).toString().equals("NA")){
				ReceivWghht = "NA";
			}else{
				ReceivWghht = decimalFormat1(ValueList1.get(0).get(6).toString());
			}

			if(ReceivWghht.toString().equals(DBList.get(0).get(11).toString()) && DispWghht1.toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE IN FULL")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ReceivWghht.toString()+", "+DispWghht1.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(11).toString()+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE IN FULL];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ReceivWghht.toString()+", "+DispWghht1.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(11).toString()+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE IN FULL];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals("NA") && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Fail");
			}

			if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
				//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
			}


			scrolldown(driver);
			scrolldown(driver);

			click(RecOrdObj.ClkRcvGrpBy);
			ComparingArticlesafterReceivingVndrASNOdrvthHighTemp(RecOrdObj,DBList1,DBListDisp,driver);
		}
	}


	public void WhseOrdRecFullSellable(ReceiveOrderObjects RecOrdObj,String Ordnumber,List<List<Object>> DBList, 
			List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, String usernm1,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBList3 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();

		List<String> SummaryDet = new ArrayList();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber, driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String OrdNo = RecOrdObj.ChckOrd.getText();
		String Deldate = RecOrdObj.ChckDeldate.getText();
		String Stat = RecOrdObj.Chckstatus.getText();
		String Suppliername = RecOrdObj.Chcksupplier.getText();
		String Ordertype = RecOrdObj.Chckordtype.getText();
		String TotCartons = RecOrdObj.ChckTotCartons.getText();
		String TotPallet = RecOrdObj.ChckTotPallet.getText();
		String ChckSrc = RecOrdObj.ChckSource.getText();

		if(DBList.get(0).get(0).toString().equals(OrdNo)  && Stat.equals("DISPATCHED") && DBList.get(0).get(1).toString().equals(Deldate)){
			htmlToExtent(cName,mName,extLogger,driver, "Order Number, Delivery Date, Status details are displayed correctly;Local Value is ["+OrdNo+", "+Deldate+", "+Stat+"];DB Value is ["+DBList.get(0).get(0).toString()+", "+DBList.get(0).get(1).toString()+", DISPATCHED];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver, "Order Number, Delivery Date, Status details are displayed correctly;Local Value is ["+OrdNo+", "+Deldate+", "+Stat+"];DB Value is ["+DBList.get(0).get(0).toString()+", "+DBList.get(0).get(1).toString()+", DISPATCHED];Fail");
		}
		if ( DBList.get(0).get(4).toString().equals(Suppliername) && Ordertype.equals("WAREHOUSE") && DBList.get(0).get(8).toString().equals(TotCartons)
				&& TotPallet.equals("0")){
			htmlToExtent(cName,mName,extLogger,driver,"Supplier, Order Type, Total Cartons, Total Pallets details are displayed correctly;Local Value is ["+Suppliername+", "+Ordertype+", "+TotCartons+", "+TotPallet+"];DB Value is ["+DBList.get(0).get(4).toString()+", WAREHOUSE, "+DBList.get(0).get(8).toString()+", 0];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Supplier, Order Type, Total Cartons, Total Pallets details are displayed correctly;Local Value is ["+Suppliername+", "+Ordertype+", "+TotCartons+", "+TotPallet+"];DB Value is ["+DBList.get(0).get(4).toString()+", WAREHOUSE, "+DBList.get(0).get(8).toString()+", 0];Fail");}
		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);

		/*if(RecOrdObj.CheckTitle.getText().equals("Order Enquiry.")){
			htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
			click(RecOrdObj.CheckTitle);
		}
		else{*/
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		String OrdNo1 = RecOrdObj.ChckOrdNo.getText();
		Long OrdNum =  Long.parseLong(OrdNo1.replaceAll("[^0-9\\.]+", ""));
		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && onshowdate.equals(DBList.get(0).get(2).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && Createdby1.equals(DBList.get(0).get(2).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String Palletcount = RecOrdObj.getPaltcnt.getText();
		String Artcount = RecOrdObj.getArtcount.getText();
		String Dispqty = RecOrdObj.Dispqty.getText();
		String Totalqty = RecOrdObj.Gettotalqty.getText();
		String Dispwgt = RecOrdObj.Dispwgt.getText();
		String sealnum = RecOrdObj.ChckSealnumb.getText();
		String Yrtrcv = RecOrdObj.yetTorcv.getText();
		//Long Yrtrcv1 =  Long.parseLong(Yrtrcv.replaceAll("[^0-9\\.]+", ""));

		if(Palletcount.equals("0") && Artcount.equals(DBList.get(0).get(7).toString()) && Dispqty.equals(DBList.get(0).get(5).toString())
				&& Dispwgt.equals(DBList.get(0).get(6).toString()) && sealnum.equals("NA")  && Totalqty.equals(DBList.get(0).get(8).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number are displayed correctly in header details;Local Value is ["+Palletcount+", "+Artcount+", "+Dispqty+", "+Totalqty+", "+Dispwgt+", "+sealnum+"];DB Value is [0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+", " +DBList.get(0).get(6).toString()+", NA];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number are displayed correctly in header details;Local Value is ["+Palletcount+", "+Artcount+", "+Dispqty+", "+Totalqty+", "+Dispwgt+", "+sealnum+"];DB Value is [0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+", " +DBList.get(0).get(6).toString()+", NA];Fail");
		}

		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
			//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}

		/*if(DBList.get(0).get(10).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}*/
		click(RecOrdObj.Clrgrpby);
		scrolldown(driver);
		scrolldown(driver);

		htmlToExtent(cName,mName,extLogger,driver,"**** Comparing the Article details displayed in Browser ****;;; ");
		//ComparingArticlesinDispatchedStatus(RecOrdObj,DBList1,DBListDisp);
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getArt1, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotOrdQty, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getTotDspQty, i,driver);
			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			Float OM_NUM =  Float.parseFloat(getOM1.replaceAll("[^0-9\\.]+", ""));
			String OM_UOM = getOM1.replaceAll("[0-9\\. ]+", "");
			String OM1 = decimalFormat1(OM_NUM.toString()) +" "+ OM_UOM;
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";

			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";


			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art) && OM1.equals(DBList1.get(j).get(1).toString())){
					Float TotOrd_NUM =  Float.parseFloat(gettotordty1.replaceAll("[^0-9\\.]+", ""));
					String TotOrd_UOM = gettotordty1.replaceAll("[0-9\\. ]+", "");
					gettotordty2 = decimalFormat1(TotOrd_NUM.toString()) +" "+ TotOrd_UOM; 


					Float TotDsp_NUM =  Float.parseFloat(gettotdspqty1.replaceAll("[^0-9\\.]+", ""));
					String TotDsp_UOM = gettotdspqty1.replaceAll("[0-9\\. ]+", "");
					gettotdspty2 = decimalFormat1(TotDsp_NUM.toString()) +" "+ TotDsp_UOM;

					if(OM1.equals(DBList1.get(j).get(1).toString()) && getdspqty1.equals(DBList1.get(j).get(4).toString()) && gettotdspty2.equals(DBList1.get(j).get(5).toString()) && getOrdqty1.equals(DBList1.get(j).get(2).toString()) && gettotordty2.equals(DBList1.get(j).get(3).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+"];Fail");
					}

				}
			}
		}
		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Receive Order option is clicked");
		click(RecOrdObj.ClickReceiveOrder);
		waitFor(4);
		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		htmlToExtent(cName,mName,extLogger,driver,"****Receiving the order in Full****;;;Pass");
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp, driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp, driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.NextBtn);

		waitForJSandJQueryToLoad(driver);

		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}else {
			if(RcvdBy.equals(username)  && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals("0") && RecOrdObj.getOtherQty.getText().toString().equals("0")){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, 0, 0];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, 0, 0];Fail");
		}
		click(RecOrdObj.SubmitReceiving);
		click(RecOrdObj.ClckContinue);
		waitForJSandJQueryToLoad(driver);
		if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
			htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
			click(RecOrdObj.ChckStatus);
			scrollUp1(driver);
		}
		if(RecOrdObj.ChckStat.getText().equals("Received")){
			htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
		}
		ValueList1 = gettingValuesafterReceiving(RecOrdObj);

		if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(7).toString()) && ValueList1.get(0).get(3).toString().equals(DBList.get(0).get(5).toString()) && ValueList1.get(0).get(4).toString().equals(DBList.get(0).get(5).toString()) && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(8).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Fail");
		}

		if(ValueList1.get(0).get(6).toString().equals(DBList.get(0).get(9).toString()) && ValueList1.get(0).get(7).toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE IN FULL")){
			htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(9).toString()+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE IN FULL];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ValueList1.get(0).get(6).toString()+", "+ValueList1.get(0).get(7).toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(9).toString()+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE IN FULL];Fail");
		}
		if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals("NA") && ValueList1.get(0).get(13).toString().equals("NA")){
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Fail");
		}

		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
			//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}


		scrolldown(driver);
		scrolldown(driver);

		click(RecOrdObj.ClkRcvGrpBy);
		//ComparingArticlesafterReceivingVndrASNOdr(RecOrdObj,DBList1,DBListDisp);
		for(int i=1;i<=DBList1.size();i++){
			WebElement getart = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvArt, i,driver);
			WebElement getOM = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvOM, i,driver);
			WebElement getordQty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdQty1, i,driver);
			WebElement gettotordqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getOrdTotQty1, i,driver);
			WebElement getdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspQty1, i,driver);
			WebElement gettotdspqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getDspTotQty1, i,driver);
			WebElement getrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvQty, i,driver);
			WebElement gettotrcvdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.getRcvTotQty, i,driver);

			String getart1=getart.getText();
			String getOM1 = getOM.getText();
			Float OM_NUM =  Float.parseFloat(getOM1.replaceAll("[^0-9\\.]+", ""));
			String OM_UOM = getOM1.replaceAll("[0-9\\. ]+", "");
			String OM1 = decimalFormat1(OM_NUM.toString()) +" "+ OM_UOM;
			String getOrdqty1 = getordQty.getText();
			String gettotordty1 = gettotordqty.getText();
			String gettotordty2 = "";
			String getdspqty1 = getdspqty.getText();
			String gettotdspqty1 = gettotdspqty.getText();
			String gettotdspty2 = "";
			String getrcvdqty1 = getrcvdqty.getText();
			String gettotrcvdqty1 = gettotrcvdqty.getText();
			String gettotrcvdty2 = "";

			for(int j=0;j<DBList1.size();j++){
				String art = DBList1.get(j).get(0).toString();
				if(getart1.equals(art) && OM1.equals(DBList1.get(j).get(0).toString())){

					Float TotOrd_NUM =  Float.parseFloat(gettotordty1.replaceAll("[^0-9\\.]+", ""));
					String TotOrd_UOM = gettotordty1.replaceAll("[0-9\\. ]+", "");
					gettotordty2 = decimalFormat1(TotOrd_NUM.toString()) +" "+ TotOrd_UOM; 


					Float TotDsp_NUM =  Float.parseFloat(gettotdspqty1.replaceAll("[^0-9\\.]+", ""));
					String TotDsp_UOM = gettotdspqty1.replaceAll("[0-9\\. ]+", "");
					gettotdspty2 = decimalFormat1(TotDsp_NUM.toString()) +" "+ TotDsp_UOM;


					Float TotRcvd_NUM =  Float.parseFloat(gettotrcvdqty1.replaceAll("[^0-9\\.]+", ""));
					String TotRcvd_UOM = gettotrcvdqty1.replaceAll("[0-9\\. ]+", "");
					gettotrcvdty2 = decimalFormat1(TotRcvd_NUM.toString()) +" "+ TotRcvd_UOM;


					if(OM1.equals(DBList1.get(j).get(1).toString()) && getdspqty1.equals(DBList1.get(j).get(4).toString()) && gettotdspty2.equals(DBList1.get(j).get(5).toString()) && getOrdqty1.equals(DBList1.get(j).get(2).toString()) && gettotordty2.equals(DBList1.get(j).get(3).toString()) && getrcvdqty1.equals(DBList1.get(j).get(4).toString()) && gettotrcvdty2.equals(DBList1.get(j).get(5).toString())){
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+"];Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Article OM, Ordered Qty, Total Ordered Units, Dispatched qty, Total Dispatched Units Values are not displayed correctly for article "+art+";Local Values are ["+OM1+", "+getOrdqty1+", "+gettotordty2+", "+getdspqty1+", "+gettotdspty2+", "+getrcvdqty1+", "+gettotrcvdty2+"]; DB Values are ["+DBList1.get(j).get(1).toString()+", "+DBList1.get(j).get(2).toString()+", "+DBList1.get(j).get(3).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+", "+DBList1.get(j).get(4).toString()+", "+DBList1.get(j).get(5).toString()+"];Fail");
					}

				}
			}

		}
	}

	public void WhseOrdRecSingleSegment(ReceiveOrderObjects RecOrdObj,String Ordnumber,List<List<Object>> DBList, 
			List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, List<List<Object>> DBListDisp,
			String usernm1,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBList3 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> app = new ArrayList<List<Object>>();
		List<String> SummaryDet = new ArrayList();
		//System.out.println(Ordnumber);

		enterText(RecOrdObj.OrderLookup, Ordnumber, driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);

		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		String Str1 = ""+DBList.get(0).get(0).toString()+":"+DBList.get(0).get(11).toString()+":DISPATCHED:"+DBList.get(0).get(4).toString()+":WAREHOUSE:"+DBList.get(0).get(8).toString()+":0";
		results1.addAll(StringToListCreation(Str1));
		checkingOrderDetailsofOverdueOrder(RecOrdObj,results1,driver);

		results1.clear();

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);

		Long Ord_num = Long.parseLong(RecOrdObj.ChckOrdnum.getText().replaceAll("[^0-9\\.]+", ""));

		String Str_Appl = ""+Ord_num.toString()+":"+RecOrdObj.ChckOrdsupl.getText().toString()+":"+RecOrdObj.ChckOrdshowdate.getText().toString()+":"+RecOrdObj.ChckOrdinfo.getText().toString()+":"+RecOrdObj.ChckOrdDel.getText().toString()+":"+RecOrdObj.ChckOrdDelinfo.getText().toString()+":"+RecOrdObj.ChckOrdDeldate.getText().toString()+":"+RecOrdObj.ChckStat1.getText().toString();
		results1.addAll(StringToListCreation(Str_Appl));

		String Str_DB = ""+DBList.get(0).get(0).toString()+":"+DBList.get(0).get(4).toString()+":"+DBList.get(0).get(3).toString()+":Overall Info:Total Deliveries: 1:Overall Info:"+DBList.get(0).get(11).toString()+":Dispatched";
		app.addAll(StringToListCreation(Str_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details (Main Delivery, Supplier, Delivery Date, Status) after opening the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, app, results1);
		app.clear();
		results1.clear();

		if(DBList.get(0).get(9).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in Header details Section;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in Header details Section;;;Fail");
			}
		}
		String DspWgt = "";
		if(RecOrdObj.ChckOrdDspwgt.getText().toString().equals("NA")){
			DspWgt = "NA";
		}else{
			DspWgt = decimalFormat1(RecOrdObj.ChckOrdDspwgt.getText().toString());
		}

		String Str_Appl1 = ""+RecOrdObj.ChckOrdPalt.getText().toString()+":"+RecOrdObj.ChckOrdArt.getText().toString()+":"+RecOrdObj.ChckOrdDspqty.getText().toString()+":"+RecOrdObj.ChckOrdCar.getText().toString()+":"+DspWgt.toString()+":"+RecOrdObj.ChckOrdseal.getText().toString();
		results1.addAll(StringToListCreation(Str_Appl1));

		String Str_DB1 = "0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(8).toString()+":"+DBList.get(0).get(6).toString()+":NA";
		app.addAll(StringToListCreation(Str_DB1));
		htmlToExtent(cName,mName,extLogger,driver,"*** Comparing Total Pallets, Total Articles, Total Dispatched Qty, Total Cartons Ordered, Total Dispatched Weight, Seal Numbers displayed in Browser;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, app, results1);
		app.clear();
		results1.clear();

		/*if(RecOrdObj.CheckTitle.getText().equals("Order Enquiry.")){
			htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
			click(RecOrdObj.CheckTitle);
		}
		else{*/
		String GetListart = RecOrdObj.GetListofArtSeg.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");

		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}

		click(RecOrdObj.Clrgrpby);
		scrolldown(driver);
		scrolldown(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the article details displayed in the Overall Info section;;;Pass");
		ComparingArticlesinDispatchedStatusforSegmentedOrder(RecOrdObj,DBList1,DBListDisp,driver);
		click(RecOrdObj.ClckSinglesegmnt);
		waitForJSandJQueryToLoad(driver);
		if(DBList.get(0).get(9).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in Segmented Delivery;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in Segmented Delivery;;;Fail");
			}
		}

		Long Seg_Del1 = Long.parseLong(RecOrdObj.ChcksegmntDel.getText().replaceAll("[^0-9\\.]+", ""));
		String Str_Appl3 = ""+Seg_Del1.toString()+":"+RecOrdObj.ChcksegmntStat.getText().toString()+":"+RecOrdObj.ChcksegmntDelDate.getText().toString()+":"+RecOrdObj.ChcksegmntOnshwDte.getText().toString()+":"+RecOrdObj.ChcksegmntArtCnt.getText().toString();
		results1.addAll(StringToListCreation(Str_Appl3));

		String Str_DB3 = ""+DBList.get(0).get(1).toString()+":Dispatched:"+DBList.get(0).get(2).toString()+":"+DBList.get(0).get(3).toString()+":"+DBList.get(0).get(7).toString();
		app.addAll(StringToListCreation(Str_DB3));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details (Segmented Delivery, Status, Delivery Date, On Show Date, Article Count) of Segmented Delivery;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, results1, app);
		app.clear();
		results1.clear();

		String DspWgt1 = "";
		if(RecOrdObj.ChckSegDspwgt.getText().toString().equals("NA")){
			DspWgt1 = "NA";
		}else{
			DspWgt1 = decimalFormat1(RecOrdObj.ChckSegDspwgt.getText().toString());
		}

		String Str_Appl4 = ""+RecOrdObj.ChckSegPalt.getText().toString()+":"+RecOrdObj.ChckSegArt.getText().toString()+":"+RecOrdObj.ChckSegDspqty.getText().toString()+":"+RecOrdObj.ChckSegCar.getText().toString()+":"+DspWgt1.toString()+":"+RecOrdObj.ChckSegseal.getText().toString();
		results1.addAll(StringToListCreation(Str_Appl1));

		String Str_DB4 = "0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(8).toString()+":"+DBList.get(0).get(6).toString()+":NA";
		app.addAll(StringToListCreation(Str_DB1));

		htmlToExtent(cName,mName,extLogger,driver,"*** Comparing Total Pallets, Total Articles, Total Dispatched Qty, Total Cartons Ordered, Total Dispatched Weight, Seal Numbers displayed in Browser;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, app, results1);
		app.clear();
		results1.clear();
		click(RecOrdObj.ClckSegClrGryBy);
		scrolldown(driver);
		scrolldown(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the article details displayed in the Segmented Delivery section;;;Pass");
		ComparingArticlesinDispatchedStatusforSegmentedDelivery(RecOrdObj,DBList1,DBListDisp,driver);
		click(RecOrdObj.ClckRcvSeg);
		waitForJSandJQueryToLoad(driver);

		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		htmlToExtent(cName,mName,extLogger,driver,"****Receiving the order in Full****;;;Pass");
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp, driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp, driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		scrolldown(driver);
		scrolldown(driver);
		click(RecOrdObj.NextBtn);

		waitForJSandJQueryToLoad(driver);

		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Received, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(5).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received, ULD Received, ULD Returned;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals("0") && RecOrdObj.getOtherQty.getText().toString().equals("0")){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, 0, 0];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, 0, 0];Fail");
		}
		click(RecOrdObj.SubmitReceiving);
		click(RecOrdObj.ClckContinue);
		waitForJSandJQueryToLoad(driver);
		if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
			htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
			click(RecOrdObj.ChckStatus);
			scrollUp1(driver);
		}

		String GetListartrecvd = RecOrdObj.ChckArtlist.getText();
		Long GetListart2 =  Long.parseLong(GetListartrecvd.replaceAll("[^0-9\\.]+", ""));
		if (GetListart2.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart2+";"+DBList.get(0).get(7).toString()+";Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart2+";"+DBList.get(0).get(7).toString()+";Fail");	
		}


		app = gettingValuesafterReceivingforSingleSegmentedOrder(RecOrdObj);
		String DB_values = "NA:0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(8).toString()+":"+DBList.get(0).get(10).toString()+":"+DBList.get(0).get(6).toString()+":NA:"+usernm1+":RECEIVE IN FULL:"+ChilledTemp1+":"+FrozenTemp1+":NA:NA";
		results1.addAll(StringToListCreation(DB_values));
		htmlToExtent(cName,mName,extLogger,driver,"*** Comparing Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered, Total Weight Received, Total Dispatched Weight, Received By, Receiving method, Chilled Temp, Frozen Temp, Seal Numbers displayed in Overall Info Section;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, app, results1);
		app.clear();
		scrolldown(driver);
		scrolldown(driver);

		click(RecOrdObj.ClkRcvGrpBy);
		htmlToExtent(cName,mName,extLogger,driver,"*** Comparing the articles details in Overall Info Section;;;Pass");
		ComparingArticlesafterReceivingSinglesgmntOdr(RecOrdObj,DBList1,DBListDisp,driver);
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClckSinglesegmnt);
		waitFor(10);

		/*if(RecOrdObj.ChckSegDelStat.getText().toString().equals("Received") && RecOrdObj.ChckSegDelTrnsfr.getText().toString().equals("Transfer") && RecOrdObj.ChckSegDelprintULD.getText().toString().equals("Print ULD")){
			htmlToExtent(cName,mName,extLogger,driver,"*** Status, Transfer & Print ULD options are available in the Segmented Delivery;Local Values are ["+RecOrdObj.ChckSegDelStat.getText().toString()+", "+RecOrdObj.ChckSegDelTrnsfr.getText().toString()+", "+RecOrdObj.ChckSegDelprintULD.getText().toString()+"];DB Values are [Received, Transfer, Print ULD];Pass");
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"*** Status, Transfer & Print ULD options are not available in the Segmented Delivery;Local Values are ["+RecOrdObj.ChckSegDelStat.getText().toString()+", "+RecOrdObj.ChckSegDelTrnsfr.getText().toString()+", "+RecOrdObj.ChckSegDelprintULD.getText().toString()+"];DB Values are [Received, Transfer, Print ULD];Fail");
		}
*/
		app = gettingValuesafterReceivingforSegmentedDelivery(RecOrdObj);

		htmlToExtent(cName,mName,extLogger,driver,"*** Comparing Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered, Total Weight Received, Total Dispatched Weight, Received By, Receiving method, Chilled Temp, Frozen Temp, Seal Numbers displayed in Segmented Delivery;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, app, results1);
		app.clear();
		results1.clear();
		click(RecOrdObj.ClckRcvSegclrGrpby);
		htmlToExtent(cName,mName,extLogger,driver,"*** Comparing the articles details in Segmented Delivery;;;Pass");
		ComparingArticlesafterReceivingSinglesgmntDlvy(RecOrdObj,DBList1,DBListDisp,driver);

	}

	public void VendorASNRecFullvthHighTemp(ReceiveOrderObjects RecOrdObj,String Ordnumber,List<List<Object>> DBList,
			List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, String Invoice, String usernm1, 
			List<List<Object>> DBListDisp, List<List<Object>> DBListDispOrd, String Method,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBList3 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber, driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":DISPATCHED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(8).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		//Report_AddStep("testcase","*** Checking the order header details displayed after opening the order" , "", "", "Pass");
		String OrdNo2 = RecOrdObj.ChckOrdNo.getText();
		String  String1 [] = splitString(OrdNo2,"#");
		String OrdNum = String1[1];

		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && onshowdate.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && Createdby1.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Authorised, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String TotaDspWgt = "";
		if(RecOrdObj.Dispwgt.getText().toString().equals("NA")){
			TotaDspWgt = "NA";
		}
		else{
			TotaDspWgt = decimalFormat1(RecOrdObj.Dispwgt.getText().toString());
		}
		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+TotaDspWgt+":"+RecOrdObj.ChckSealnumb.getText()+":"+RecOrdObj.Gettotalqty.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(8).toString();
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
			//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}

		if(DBList.get(0).get(10).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		click(RecOrdObj.Clrgrpby);
		scrolldown(driver);
		scrolldown(driver);
		htmlToExtent(cName,mName,extLogger,driver,"Comparing the Article details displayed in Browser;;; ");
		ComparingArticlesinDispatchedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Receive Order option is clicked");
		click(RecOrdObj.ClickReceiveOrder);
		waitForJSandJQueryToLoad(driver);
		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		enterText(RecOrdObj.EnterInvoice, Invoice, driver);
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp, driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp, driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("HighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.contains("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
			}
			waitForJSandJQueryToLoad(driver);
		}else if(Method.equals("ASNReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Rejected the Not Ranged Articles in the order;;;Pass");
		}else if(Method.equals("ASNAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Accepted the Not Ranged Articles in the order;;;Pass");
		}
		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(DBList.get(0).get(7).toString()) && CartRecvd.equals(DBList.get(0).get(12).toString()) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(12).toString()+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(DBList.get(0).get(13).toString()) && RecOrdObj.getOtherQty.getText().toString().equals("0")){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(13).toString()+", 0];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+DBList.get(0).get(13).toString()+", 0];Fail");
		}


		click(RecOrdObj.SubmitReceiving);
		if(Integer.parseInt(DBList.get(0).get(12).toString())>0){
			click(RecOrdObj.ClckContinue);
		}
		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){

			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}
			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(7).toString()) && ValueList1.get(0).get(3).toString().equals(DBList.get(0).get(12).toString()) && ValueList1.get(0).get(4).toString().equals(DBList.get(0).get(5).toString()) && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(8).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Fail");
			}
			String ReceivdWgt = "";
			String TotaDspWgt1 = "";
			if(ValueList1.get(0).get(7).toString().toString().equals("NA")){
				TotaDspWgt1 = "NA";
			}
			else{
				TotaDspWgt1 = decimalFormat1(ValueList1.get(0).get(7).toString().toString());
			}
			if(ValueList1.get(0).get(6).toString().toString().equals("NA")){
				ReceivdWgt = "NA";
			}
			else{
				ReceivdWgt = decimalFormat1(ValueList1.get(0).get(6).toString().toString());
			}
			if(ReceivdWgt.toString().equals(DBList.get(0).get(11).toString()) && TotaDspWgt1.toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE IN FULL")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ReceivdWgt.toString()+", "+TotaDspWgt1.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE IN FULL];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ReceivdWgt.toString()+", "+TotaDspWgt1.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+DBList.get(0).get(6).toString()+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE IN FULL];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals(Invoice) && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Fail");
			}

			if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
				//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);
			click(RecOrdObj.ClkRcvGrpBy);
			ComparingArticlesafterReceivingVndrASNOdrvthHighTemp(RecOrdObj,DBList1,DBListDisp,driver);
		}
	}

	public List<List<Object>> VendorASNRecLinebyLine(ReceiveOrderObjects RecOrdObj,String Ordnumber,List<List<Object>> DBList, 
			List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, String Invoice, String usernm1,
			List<List<Object>> DBListDisp, List<List<Object>> DBListDispOrd, String Method, List<List<Object>> resultsdummy,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBList3 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		List<List<Object>> Applst1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst2 = new ArrayList<List<Object>>();
		List<List<Object>> DBLst1 = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":DISPATCHED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(8).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		String OrdNo2 = RecOrdObj.ChckOrdNo.getText();
		String  String1 [] = splitString(OrdNo2,"#");
		String OrdNum = String1[1];

		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && onshowdate.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && Createdby1.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String TotaDspWgt = "";
		if(RecOrdObj.Dispwgt.getText().toString().equals("NA")){
			TotaDspWgt = "NA";
		}
		else{
			TotaDspWgt = decimalFormat1(RecOrdObj.Dispwgt.getText().toString());
		}
		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+TotaDspWgt+":"+RecOrdObj.ChckSealnumb.getText()+":"+RecOrdObj.Gettotalqty.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(8).toString();
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}

		if(DBList.get(0).get(10).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		scrolldown(driver);
		click(RecOrdObj.Clrgrpby);

		scrolldown(driver);
		htmlToExtent(cName,mName,extLogger,driver,"Comparing the Article details displayed in Browser;;;Pass");
		ComparingArticlesinDispatchedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Receive Order option is clicked");
		click(RecOrdObj.ClickReceiveOrder);
		htmlToExtent(cName,mName,extLogger,driver,"Receive Order option is clicked;;;Pass");
		waitForJSandJQueryToLoad(driver);
		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		click(RecOrdObj.ClckRLByL);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"Receive Line By Line option is selected;;;Pass");
		click(RecOrdObj.ClckyES);
		waitForJSandJQueryToLoad(driver);
		enterText(RecOrdObj.EnterInvoice, Invoice,driver);
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp, driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("HighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.contains("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
				waitForJSandJQueryToLoad(driver);
			}
		}else if(Method.equals("ASNReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Rejected the Not Ranged Articles in the order;;;Pass");
		}else if(Method.equals("ASNAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
			click(RecOrdObj.ClseMsg);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Accepted the Not Ranged Articles in the order;;;Pass");
		}
		Integer ArtCount = 0;
		Integer TotQty = 0;
		Integer OtherQty = 0;
		Double TotRcvdWgt = 0.0;
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Review = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Art = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp2 = new ArrayList<List<Object>>();
		int count1 = 0;
		for(int k=1;k<=RecOrdObj.VndrRcvng.size();k++){
			if(k==2){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app2 = new ArrayList();
			List app_rcvd = new ArrayList();
			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String UOM = "";
			String PI_OM = "";
			String OM = "";
			String OMvthUOM = "";
			String OrdQTy = "";
			String TotOrdQty = "";
			String BaseUOM = "";
			String DspQty = "";
			String TotDspQty = "";
			String DspQtyvthoutUOM = "";
			String OM2 = "";
			String DspWgt1 = "";
			String OrdQtyvthOutUOM = "";
			String Temp_ind = "";
			String NotRngd_ind = "";
			String TotRcvunits = "";
			String DspQtyvthoutUOM1 = "";
			String ZZdespatchWeight = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(0).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(14).toString();
					Disp_ind = DBList1.get(m).get(12).toString();
					CPBD_ind = DBList1.get(m).get(13).toString();
					UOM = DBList1.get(m).get(2).toString();
					PI_OM = decimalFormat1(DBList1.get(m).get(15).toString());
					OM = decimalFormat1(DBList1.get(m).get(5).toString());
					OMvthUOM = DBList1.get(m).get(6).toString();
					DspQtyvthoutUOM1 = decimalFormat1(DBList1.get(m).get(3).toString());
					OrdQTy = DBList1.get(m).get(10).toString();
					TotOrdQty = DBList1.get(m).get(11).toString();
					DspQty = DBList1.get(m).get(7).toString();
					TotDspQty = DBList1.get(m).get(8).toString();
					BaseUOM = DBList1.get(m).get(9).toString();
					ZZdespatchWeight = decimalFormat1(DBList1.get(m).get(17).toString());
					if(Method.equals("HighTemp")){
						Temp_ind = DBList1.get(m).get(16).toString();}
					else if(Method.equals("ASNReject")){
						Temp_ind = DBList1.get(m).get(16).toString();
					}else if(Method.equals("ASNAccept")){
						NotRngd_ind = DBList1.get(m).get(16).toString();
						Temp_ind = " ";
					}else{
						Temp_ind = " ";

					}
					if(Temp_ind.equals("03") || Temp_ind.equals("01")){
						DspQtyvthoutUOM = "0";
						TotRcvunits = "0 " +BaseUOM;
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						DspQtyvthoutUOM = "0";
						TotRcvunits = "0";
					}else{
						DspQtyvthoutUOM = decimalFormat1(DBList1.get(m).get(3).toString());
						TotRcvunits = TotDspQty;
					}
					break;
				}
			}
			for(int l=1;l<=14;l++){
				if(l==4 ){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getOM1 = table.getText();
					String OM1 = "";
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OM2 = OMvthUOM;
					}else{
						String  String2 [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String2[0]) + " " +String2[1];
					}
					app.add(OM1);
				}else if(l==9 || l==11){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getQty = table.getText();
					String  String2 [] = splitString(getQty," ");
					String Qty = decimalFormat1(String2[0]) + " " +String2[1];
					app.add(Qty);
				}
				else if(l==10){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}
					app.add(gettotordty2);
				}else if(l==12){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotordty2);
				}
				else if(l==13){
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						app.add(" ");
					}else if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue16, k,l,driver);
						String Rcvdqty = table.getText();
						app.add(Rcvdqty);
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
						if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
							String DspWgt = table1.getAttribute("value");
							if(table.getAttribute("disabled")!=null && table1.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
							app.add(DspWgt);
						}
					}
					else if(Rnd_wgt_ind.equals("Y")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						String Rcvdqty = table.getAttribute("value");
						WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
						String DspWgt = table1.getAttribute("value");
						app.add(Rcvdqty);
						app.add(DspWgt);
					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						if((Temp_ind.equals("03") || Temp_ind.equals("01")) || (Temp_ind.equals("DA") || Temp_ind.equals("ES"))){
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty field is disabled ;;;Pass");
							}
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);
						}else{
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);	}			
					}
				}
				else if(l==14){
					String Rcvdqty = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty = table.getText();
					}else if(Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){					
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{					
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(Rcvdqty);
				}
				else if(l==2||l==3||l==5||l==6||l==7||l==8){

				}
				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst.add(app);
			if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+": :NA";
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if(Rnd_wgt_ind.equals("Y")){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+DspWgt1+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else{			
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}

			for(int n=1;n<=14;n++){
				String TotRcvdunits = "";
				Float TotRcvd_NUM = (float) 0;

				if(n==13){
					if(Rnd_wgt_ind.equals("Y")){
						WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
						String DiffQty1 = "";
						String RcvdQty1 = "";
						String TotRcvdQty = "";
						Double Wgt = 0.0;
						Double PIQty = 0.0;
						String TotRcvdQty_rej = "";
						if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
							RcvdQty1 = DspQty;
							TotRcvdQty = TotDspQty;
							TotRcvdQty_rej = TotRcvdQty;
							ArtCount++;
							DiffQty1 = "0";
							Integer qty = Integer.parseInt(DspQtyvthoutUOM);
							TotQty += qty;
							PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							String gettotrcvdty3 = TotDspQty.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							String Wgt1 = decimalFormat1(String[0]);
							Wgt = Double.parseDouble(Wgt1);
						}
						else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							RcvdQty1 = "0 " +UOM;
							TotRcvdQty = "0 " +BaseUOM;
							if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								TotRcvdQty_rej = "0";
							}else{
								TotRcvdQty_rej = TotRcvdQty;
							}

							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = 0 - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							Wgt = 0.0;
							PIQty = 0.0;
							ArtCount++;
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

							Integer qty = random_no(20) +1;
							ArtCount++;
							TotQty += qty;
							table.clear();
							table.sendKeys(""+qty);
							WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
							Wgt = random_no(20) +1.359;
							Enterweight.clear();
							Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
							click(clck);
							Double RcvQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty =DiffQty = RcvQty - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							if(DiffQty1.equals("0")){
							}else{
								OtherQty++;
							}
							RcvdQty1 = qty.toString()+" "+UOM;

							PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
							TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
							TotRcvdQty_rej = TotRcvdQty;
						}
						app1.add(Art1);
						app1.add(TotRcvdQty_rej);
						String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
						Applst_Art.addAll(StringToListCreation(Str1_disp));
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

						if(DiffQty1.equals("0")){					
						}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}else{
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}

						click(clckchckBox);
						waitForJSandJQueryToLoad(driver);
					}else if((Rnd_wgt_ind.equals("N") && BaseUOM.equals("KG") && Double.parseDouble(ZZdespatchWeight)>0)){
						WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
						String DiffQty1 = "";
						String RcvdQty1 = "";
						String TotRcvdQty = "";
						Double Wgt = 0.0;
						Double PIQty = 0.0;
						String TotRcvdQty_rej = "";
						if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
							RcvdQty1 = DspQty;
							TotRcvdQty = TotDspQty;
							TotRcvdQty_rej = TotRcvdQty;
							ArtCount++;
							DiffQty1 = "0";
							Integer qty = Integer.parseInt(DspQtyvthoutUOM);
							TotQty += qty;
							//PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							String gettotrcvdty3 = TotDspQty.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							String Wgt1 = decimalFormat1(String[0]);
							Wgt = Double.parseDouble(Wgt1);
						}
						else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							RcvdQty1 = "0 " +UOM;
							TotRcvdQty = "0 " +BaseUOM;
							if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								TotRcvdQty_rej = "0";
							}else{
								TotRcvdQty_rej = TotRcvdQty;
							}

							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = 0 - Double.parseDouble(ZZdespatchWeight);
							DiffQty1 = decimalFormat1(DiffQty.toString());
							Wgt = 0.0;
							//PIQty = 0.0;
							ArtCount++;
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

							Integer qty = random_no(20) +1;
							ArtCount++;
							TotQty += qty;
							table.clear();
							table.sendKeys(""+qty);
							WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
							Wgt = random_no(20) +1.359;
							Enterweight.clear();
							Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
							click(clck);
							Double RcvQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = Wgt - Double.parseDouble(ZZdespatchWeight);
							DiffQty1 = decimalFormat1(DiffQty.toString());
							if(DiffQty1.equals("0")){
							}else{
								OtherQty++;
							}
							RcvdQty1 = qty.toString()+" "+UOM;

							//PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM;
							TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
							TotRcvdQty_rej = TotRcvdQty;
						}
						app1.add(Art1);
						app1.add(TotRcvdQty_rej);
						String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString());
						Applst_Art.addAll(StringToListCreation(Str1_disp));
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

						if(DiffQty1.equals("0")){					
						}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}else{
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}

						click(clckchckBox);
						waitForJSandJQueryToLoad(driver);
					}		
					else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue14, k,n,driver);
						app1.add(Art1);
						app1.add("NA");
						click(table);
						waitForJSandJQueryToLoad(driver);
						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+"::NA:"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
						Applst_Rcvd_Disp = getValuesFromTable(RecOrdObj.UNRcvddispListSize);
						removeIndex(Applst_Rcvd_Disp, "9");
						removeIndex(Applst_Rcvd_Disp, "7");
						removeIndex(Applst_Rcvd_Disp, "2");
						removeIndex(Applst_Rcvd_Disp, "1");

						for(int as = 0;as<RecOrdObj.UNRcvddispListSize.size();as++){
							WebElement articl = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispart, as+1,driver);
							table = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispcheckrecvd, as+1,driver);
							WebElement TotOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotord, as+1,driver);
							WebElement ClckChxBox = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispChxBox, as+1,driver);
							Integer qty = 0;
							String Dispart = articl.getText();
							for(int ak=0;ak<DBListDisp.size();ak++){
								if(Art1.equals(DBListDisp.get(ak).get(0).toString()) && Dispart.equals(DBListDisp.get(ak).get(1).toString())){
									String DiffQty1 = "";
									String Rcvdqty = "";
									String TotRcvdQty1 = "";
									String DispRcvUnits = "";
									if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
										Rcvdqty = "0 " +BaseUOM;
										TotRcvdQty1 = "0 " +BaseUOM;
										DispRcvUnits = "0 " +BaseUOM;
										Double DiffQty = 0 - Double.parseDouble(DBListDisp.get(ak).get(5).toString());
										DiffQty1 = decimalFormat1(DiffQty.toString());										
										qty = 0;
									}else{
										qty = random_no(399) +1;
										table.clear();
										table.sendKeys(""+qty);
										WebElement table1 = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotrecvd, as+1,driver);
										click(TotOrdqty);

										Rcvdqty = qty.toString()+" "+DBListDisp.get(ak).get(6).toString();
										DispRcvUnits = DBListDisp.get(ak).get(2).toString();
										Double TotRcvdQty = qty * 1.0;
										TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + DBListDisp.get(ak).get(6).toString();
										Double DiffQty = qty - Double.parseDouble(DBListDisp.get(ak).get(5).toString());
										DiffQty1 = decimalFormat1(DiffQty.toString());

									}
									String Str1_disp_rcvd = ""+articl.getText()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DispRcvUnits;
									Applst_Rcvd_Disp1.addAll(StringToListCreation(Str1_disp_rcvd));
									click(ClckChxBox);
									waitForJSandJQueryToLoad(driver);
									String Str1_disp = ""+articl.getText()+":"+qty;
									Applst_Art.addAll(StringToListCreation(Str1_disp));

									String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+Rcvdqty+":"+TotRcvdQty1+":"+DBListDisp.get(ak).get(3).toString();
									Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));

									if(DiffQty1.equals("0")){					
									}else{
										String Updt_rcvd_DB2 = ""+Dispart+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+Rcvdqty+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
										Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
									}
								}
							}
						}
						htmlToExtent(cName,mName,extLogger,driver, "***Comparing the component details of Display article*** "+Art1+";;;Pass");
						ElementContains1(cName, mName,extLogger,driver, Applst_Rcvd_Disp, Applst_Rcvd_Disp1);
						click(RecOrdObj.ClckOKDsip);
						waitForJSandJQueryToLoad(driver);
						//app1.add("");
					}else{
						String DiffQty1 = "";
						String RcvdQty1 = "";
						String TotRcvdQty1 = "";
						Double TotRcvdQty2 = 0.0;
						Integer qty = 0;
						String TotRcvdQty_rej = "";
						WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
						if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
							RcvdQty1 = DspQty;
							TotRcvdQty1 = TotDspQty;
							TotRcvdQty_rej = TotRcvdQty1;
							ArtCount++;
							DiffQty1 = "0";
							qty = Integer.parseInt(DspQtyvthoutUOM);
							TotQty += qty;
						}
						else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							RcvdQty1 = "0 " +UOM;
							TotRcvdQty1 = "0 " +BaseUOM;
							if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								TotRcvdQty_rej = "0";
							}else{
								TotRcvdQty_rej = TotRcvdQty1;
							}
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = 0 - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							ArtCount++;
						}else{
							ArtCount++;
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
							qty = random_no(20) +1;
							TotQty += qty;
							table.clear();
							table.sendKeys(""+qty);
							click(clck);
							RcvdQty1 = qty.toString()+" "+UOM;
							Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = TotRcvdQty - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							if(DiffQty1.equals("0")){
							}else{
								OtherQty++;
							}
							TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
							TotRcvdQty_rej = TotRcvdQty1;
						}
						if(CPBD_ind.equals("1")){
							TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
							String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
						}else{
							TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

						}

						String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
						Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

						String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
						Applst_Art.addAll(StringToListCreation(Str1_disp));

						app1.add(Art1);
						app1.add(TotRcvdQty_rej);
						if(DiffQty1.equals("0")){					
						}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}else{
							String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
							Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
						}

						click(clckchckBox);
						waitForJSandJQueryToLoad(driver);
					}
				}else if(n==14){
					String Rcvdqty_1 = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty_1 = table.getText();
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01")))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1]+ " " +String[2]+ " " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
					}
					app2.add(Art1);
					app2.add(Rcvdqty_1);
				}
			}
			Applst1.add(app2);
			DBLst1.add(app1);
		}
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Article details before changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Total Received Qty details of each article after changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst1, DBLst1);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		for(int k=1;k<=RecOrdObj.VndrRcvngRvw.size();k++){
			if(k==2){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String Temp_ind = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(0).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(14).toString();
					Disp_ind = DBList1.get(m).get(12).toString();
					CPBD_ind = DBList1.get(m).get(13).toString();
					if(Method.equals("HighTemp")){
						Temp_ind = DBList1.get(m).get(16).toString();}
					else if(Method.equals("ASNReject")){
						Temp_ind = DBList1.get(m).get(16).toString();}
					else{
						Temp_ind = "";
					}
					break;
				}
			}
			for(int l=1;l<=12;l++){
				if(l==4 || l==6 || l==8){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
					String getQty = table.getText();
					String  String2 [] = splitString(getQty," ");
					String Qty = decimalFormat1(String2[0]) + " " +String2[1];
					app.add(Qty);
				}
				else if(l==5||l==7){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotordty2);

				}else if(l==9){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					else if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotordty2);

				}
				else if(l==10){
					String Diff = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue12, k,l,driver);
					if(table.getAttribute("class").equals("valueUp")){
						Diff = decimalFormat1(table.getText().toString());
					}
					if(table.getAttribute("class").equals("valueDown")){
						Diff = "-"+decimalFormat1(table.getText().toString())+"";
					}
					app.add(Diff);
				}
				else if(l==12){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue13, k,l,driver);
					click(table);
				}
				else if(l==2||l==3){

				}
				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst2.add(app);

		}
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Review Discrepancies of each article***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst2, Applst_Rcvd_Review);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(decimalFormat1(resultsdummy.get(0).get(0).toString())) && RecOrdObj.getOtherQty.getText().toString().equals(decimalFormat1(OtherQty.toString()))){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+decimalFormat1(resultsdummy.get(0).get(0).toString())+", "+decimalFormat1(OtherQty.toString())+"];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+decimalFormat1(resultsdummy.get(0).get(0).toString())+", "+decimalFormat1(OtherQty.toString())+"];Fail");
		}


		click(RecOrdObj.SubmitReceiving);
		if(Double.parseDouble(CartRecvd)>0.0){
		click(RecOrdObj.ClckContinue);}

		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){

			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}
			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(7).toString()) && ValueList1.get(0).get(3).toString().equals(decimalFormat1(TotQty.toString())) && ValueList1.get(0).get(4).toString().equals(DBList.get(0).get(5).toString()) && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(8).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+decimalFormat1(TotQty.toString())+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+decimalFormat1(TotQty.toString())+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Fail");
			}
			String TotaDspWghht1 = "";
			if(ValueList1.get(0).get(7).toString().equals("NA")){
				TotaDspWghht1 = "NA";
			}
			else{
				TotaDspWghht1 = decimalFormat1(ValueList1.get(0).get(7).toString());
			}
			String ReceivdWght = "";
			if(ValueList1.get(0).get(6).toString().equals("NA")){
				ReceivdWght = "NA";
			}
			else{
				ReceivdWght = decimalFormat1(ValueList1.get(0).get(6).toString());
			}

			if(ReceivdWght.toString().equals(decimalFormat1(TotRcvdWgt.toString())) && TotaDspWghht1.toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE BY LINE")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ReceivdWght.toString()+", "+TotaDspWghht1.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE BY LINE];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ReceivdWght.toString()+", "+TotaDspWghht1.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE BY LINE];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals(Invoice) && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Fail");
			}

			if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
				//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);
			click(RecOrdObj.ClkRcvGrpBy);
			htmlToExtent(cName,mName,extLogger,driver, "**** Checking the article details after receiving the order ****;;;Pass");
			ComparingArticlesafterRcvngASNLineByLine(RecOrdObj,Applst_Rcvd,Applst_Rcvd_Disp2,driver);
		}
		return Applst_Art;
	}

	public List<List<Object>> VendorASNRecThroughException(ReceiveOrderObjects RecOrdObj,String Ordnumber,List<List<Object>> DBList, 
			List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, String Invoice, String usernm1,
			List<List<Object>> DBListDisp, List<List<Object>> DBListDispOrd, String Method, List<List<Object>> resultsdummy,WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBList3 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		List<List<Object>> Applst1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst2 = new ArrayList<List<Object>>();
		List<List<Object>> DBLst1 = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":DISPATCHED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":VENDOR:"+DBList.get(0).get(8).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		String OrdNo2 = RecOrdObj.ChckOrdNo.getText();
		String  String1 [] = splitString(OrdNo2,"#");
		String OrdNum = String1[1];

		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && onshowdate.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && Createdby1.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String Dspwgt1 = "";
		if(RecOrdObj.Dispwgt.getText().equals("NA")){
			Dspwgt1 = RecOrdObj.Dispwgt.getText();
		}else{
			Dspwgt1 = decimalFormat1(RecOrdObj.Dispwgt.getText());
		}
		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+RecOrdObj.Gettotalqty.getText()+":"+Dspwgt1+":"+RecOrdObj.ChckSealnumb.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(8).toString()+":"+DBList.get(0).get(6).toString()+":NA";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}

		if(DBList.get(0).get(10).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		scrolldown(driver);
		click(RecOrdObj.Clrgrpby);

		scrolldown(driver);
		htmlToExtent(cName,mName,extLogger,driver,"Comparing the Article details displayed in Browser;;;Pass");
		ComparingArticlesinDispatchedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Receive Order option is clicked");
		click(RecOrdObj.ClickReceiveOrder);
		htmlToExtent(cName,mName,extLogger,driver,"Receive Order option is clicked;;;Pass");
		waitForJSandJQueryToLoad(driver);
		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		click(RecOrdObj.ClckRE);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"Receive Line By Line option is selected;;;Pass");
		click(RecOrdObj.ClckyES);
		waitForJSandJQueryToLoad(driver);
		enterText(RecOrdObj.EnterInvoice, Invoice,driver);
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("HighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.equals("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
				waitForJSandJQueryToLoad(driver);
			}
		}else if(Method.equals("ASNReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Rejected the Not Ranged Articles in the order;;;Pass");
		}else if(Method.equals("ASNAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
			click(RecOrdObj.ClseMsg);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Accepted the Not Ranged Articles in the order;;;Pass");
		}
		Integer ArtCount = 0;
		Integer TotQty = 0;
		Integer OtherQty = 0;
		Double TotRcvdWgt = 0.0;
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Review = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Art = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp2 = new ArrayList<List<Object>>();
		int count1 = 0;
		for(int k=1;k<=RecOrdObj.VndrRcvng.size();k++){
			if(k==2){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app2 = new ArrayList();
			List app_rcvd = new ArrayList();
			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String UOM = "";
			String PI_OM = "";
			String OM = "";
			String OMvthUOM = "";
			String OrdQTy = "";
			String TotOrdQty = "";
			String BaseUOM = "";
			String DspQty = "";
			String TotDspQty = "";
			String DspQtyvthoutUOM = "";
			String OM2 = "";
			String DspWgt1 = "";
			String OrdQtyvthOutUOM = "";
			String Temp_ind = "";
			String NotRngd_ind = "";
			String TotRcvunits = "";
			String DspQtyvthoutUOM1 = "";
			String ZZDespatchWeight = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(0).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(14).toString();
					Disp_ind = DBList1.get(m).get(12).toString();
					CPBD_ind = DBList1.get(m).get(13).toString();
					UOM = DBList1.get(m).get(2).toString();
					PI_OM = decimalFormat1(DBList1.get(m).get(15).toString());
					OM = decimalFormat1(DBList1.get(m).get(5).toString());
					OMvthUOM = DBList1.get(m).get(6).toString();
					DspQtyvthoutUOM1 = decimalFormat1(DBList1.get(m).get(3).toString());
					OrdQTy = DBList1.get(m).get(10).toString();
					TotOrdQty = DBList1.get(m).get(11).toString();
					DspQty = DBList1.get(m).get(7).toString();
					TotDspQty = DBList1.get(m).get(8).toString();
					BaseUOM = DBList1.get(m).get(9).toString();
					ZZDespatchWeight = DBList1.get(m).get(17).toString();
					if(Method.equals("HighTemp")){
						Temp_ind = DBList1.get(m).get(16).toString();}
					else if(Method.equals("ASNReject")){
						Temp_ind = DBList1.get(m).get(16).toString();
					}else if(Method.equals("ASNAccept")){
						NotRngd_ind = DBList1.get(m).get(16).toString();
						Temp_ind = " ";
					}else{
						Temp_ind = " ";

					}
					if(Temp_ind.equals("03") || Temp_ind.equals("01")){
						DspQtyvthoutUOM = "0";
						TotRcvunits = "0 " +BaseUOM;
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						DspQtyvthoutUOM = "0";
						TotRcvunits = "0";
					}else{
						DspQtyvthoutUOM = decimalFormat1(DBList1.get(m).get(3).toString());
						TotRcvunits = TotDspQty;
					}
					break;
				}
			}
			for(int l=1;l<=14;l++){
				if(l==4 ){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getOM1 = table.getText();
					String OM1 = "";
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OM2 = OMvthUOM;
					}else{
						String  String2 [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String2[0]) + " " +String2[1];
					}
					app.add(OM1);
				}else if(l==9 || l==11){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getQty = table.getText();
					String  String2 [] = splitString(getQty," ");
					String Qty = decimalFormat1(String2[0]) + " " +String2[1];
					app.add(Qty);
				}
				else if(l==10){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}
					app.add(gettotordty2);
				}else if(l==12){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotordty2);
				}
				else if(l==13){
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						app.add(" ");
					}else if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue16, k,l,driver);
						String Rcvdqty = table.getText();
						app.add(Rcvdqty);
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
						if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
							String DspWgt = table1.getAttribute("value");
							if(table.getAttribute("disabled")!=null && table1.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
							app.add(DspWgt);
						}
					}
					else if(Rnd_wgt_ind.equals("Y")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						String Rcvdqty = table.getAttribute("value");
						WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
						String DspWgt = table1.getAttribute("value");
						app.add(Rcvdqty);
						app.add(DspWgt);
					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						if((Temp_ind.equals("03") || Temp_ind.equals("01")) || (Temp_ind.equals("DA") || Temp_ind.equals("ES"))){
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty field is disabled ;;;Pass");
							}
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);
						}else{
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);	}			
					}
				}
				else if(l==14){
					String Rcvdqty = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty = table.getText();
					}else if(Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){					
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{					
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(Rcvdqty);
				}
				else if(l==2||l==3||l==5||l==6||l==7||l==8){

				}
				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst.add(app);
			if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+": :NA";
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if(Rnd_wgt_ind.equals("Y")){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+DspWgt1+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else{			
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}

			for(int n=1;n<=14;n++){
				String TotRcvdunits = "";
				Float TotRcvd_NUM = (float) 0;
				if(n==13){
					if (k==1){
						if(Rnd_wgt_ind.equals("Y")){
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty = "";
							Double Wgt = 0.0;
							Double PIQty = 0.0;
							String TotRcvdQty_rej = "";
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

							Integer qty = random_no(20) +1;
							ArtCount++;
							TotQty += qty;
							table.clear();
							table.sendKeys(""+qty);
							WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
							Wgt = random_no(20) +1.359;
							Enterweight.clear();
							Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
							click(clck);
							Double RcvQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty =DiffQty = RcvQty - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							if(DiffQty1.equals("0")){
							}else{
								OtherQty++;
							}
							RcvdQty1 = qty.toString()+" "+UOM;

							PIQty = Double.parseDouble(PI_OM.toString()) * qty;
							TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
							TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
							TotRcvdQty_rej = TotRcvdQty;

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}

							click(clckchckBox);
						}else if((Rnd_wgt_ind.equals("N") && BaseUOM.equals("KG") && Double.parseDouble(ZZDespatchWeight)>0)){
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty = "";
							Double Wgt = 0.0;
							Double PIQty = 0.0;
							String TotRcvdQty_rej = "";
							if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
								RcvdQty1 = DspQty;
								TotRcvdQty = TotDspQty;
								TotRcvdQty_rej = TotRcvdQty;
								ArtCount++;
								DiffQty1 = "0";
								Integer qty = Integer.parseInt(DspQtyvthoutUOM);
								TotQty += qty;
								//PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								String gettotrcvdty3 = TotDspQty.replace("\n", " ").replace("\r", " ");
								String  String [] = splitString(gettotrcvdty3," ");
								String Wgt1 = decimalFormat1(String[0]);
								Wgt = Double.parseDouble(Wgt1);
							}
							else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								RcvdQty1 = "0 " +UOM;
								TotRcvdQty = "0 " +BaseUOM;
								if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									TotRcvdQty_rej = "0";
								}else{
									TotRcvdQty_rej = TotRcvdQty;
								}

								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = 0 - Double.parseDouble(ZZDespatchWeight);
								DiffQty1 = decimalFormat1(DiffQty.toString());
								Wgt = 0.0;
								//PIQty = 0.0;
								ArtCount++;
							}else{
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

								Integer qty = random_no(20) +1;
								ArtCount++;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
								Wgt = random_no(20) +1.359;
								Enterweight.clear();
								Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
								click(clck);
								Double RcvQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = Wgt - Double.parseDouble(ZZDespatchWeight);
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								RcvdQty1 = qty.toString()+" "+UOM;

								//PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM;
								TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
								TotRcvdQty_rej = TotRcvdQty;
							}
							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}

							click(clckchckBox);
							waitForJSandJQueryToLoad(driver);
						}		
						
						else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue14, k,n,driver);
							app1.add(Art1);
							app1.add("NA");
							click(table);
							waitForJSandJQueryToLoad(driver);
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+"::NA:"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
							Applst_Rcvd_Disp = getValuesFromTable(RecOrdObj.UNRcvddispListSize);
							removeIndex(Applst_Rcvd_Disp, "9");
							removeIndex(Applst_Rcvd_Disp, "7");
							removeIndex(Applst_Rcvd_Disp, "2");
							removeIndex(Applst_Rcvd_Disp, "1");

							for(int as = 0;as<RecOrdObj.UNRcvddispListSize.size();as++){
								WebElement articl = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispart, as+1,driver);
								table = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispcheckrecvd, as+1,driver);
								WebElement TotOrdqty = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotord, as+1,driver);
								WebElement ClckChxBox = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispChxBox, as+1,driver);
								Integer qty = 0;
								String Dispart = articl.getText();
								for(int ak=0;ak<DBListDisp.size();ak++){
									if(Art1.equals(DBListDisp.get(ak).get(0).toString()) && Dispart.equals(DBListDisp.get(ak).get(1).toString())){
										String DiffQty1 = "";
										String Rcvdqty = "";
										String TotRcvdQty1 = "";
										String DispRcvUnits = "";
										if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
											Rcvdqty = "0 " +BaseUOM;
											TotRcvdQty1 = "0 " +BaseUOM;
											DispRcvUnits = "0 " +BaseUOM;
											Double DiffQty = 0 - Double.parseDouble(DBListDisp.get(ak).get(5).toString());
											DiffQty1 = decimalFormat1(DiffQty.toString());										
											qty = 0;
										}else{
											qty = random_no(399) +1;
											table.clear();
											table.sendKeys(""+qty);
											WebElement table1 = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.POdispchecktotrecvd, as+1,driver);
											click(TotOrdqty);

											Rcvdqty = qty.toString()+" "+DBListDisp.get(ak).get(6).toString();
											DispRcvUnits = DBListDisp.get(ak).get(2).toString();
											Double TotRcvdQty = qty * 1.0;
											TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + DBListDisp.get(ak).get(6).toString();
											Double DiffQty = qty - Double.parseDouble(DBListDisp.get(ak).get(5).toString());
											DiffQty1 = decimalFormat1(DiffQty.toString());

										}
										String Str1_disp_rcvd = ""+articl.getText()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DispRcvUnits;
										Applst_Rcvd_Disp1.addAll(StringToListCreation(Str1_disp_rcvd));
										click(ClckChxBox);
										waitForJSandJQueryToLoad(driver);
										String Str1_disp = ""+articl.getText()+":"+qty;
										Applst_Art.addAll(StringToListCreation(Str1_disp));

										String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+Rcvdqty+":"+TotRcvdQty1+":"+DBListDisp.get(ak).get(3).toString();
										Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));

										if(DiffQty1.equals("0")){					
										}else{
											String Updt_rcvd_DB2 = ""+Dispart+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+Rcvdqty+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
											Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
										}
									}
								}
							}
							htmlToExtent(cName,mName,extLogger,driver, "***Comparing the component details of Display article*** "+Art1+";;;Pass");
							ElementContains1(cName, mName,extLogger,driver, Applst_Rcvd_Disp, Applst_Rcvd_Disp1);
							click(RecOrdObj.ClckOKDsip);
							waitForJSandJQueryToLoad(driver);
							//app1.add("");
						}else{
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty1 = "";
							Double TotRcvdQty2 = 0.0;
							Integer qty = 0;
							String TotRcvdQty_rej = "";
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);

							ArtCount++;
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
							WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
							qty = random_no(20) +1;
							TotQty += qty;
							table.clear();
							table.sendKeys(""+qty);
							click(clck);
							RcvdQty1 = qty.toString()+" "+UOM;
							Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							Double DiffQty = TotRcvdQty - TotDspQty1;
							DiffQty1 = decimalFormat1(DiffQty.toString());
							if(DiffQty1.equals("0")){
							}else{
								OtherQty++;
							}
							TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
							TotRcvdQty_rej = TotRcvdQty1;

							if(CPBD_ind.equals("1")){
								TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
								String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));
							}else{
								TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

							}

							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}

							click(clckchckBox);
							waitForJSandJQueryToLoad(driver);
						}
					}else{
						if(Rnd_wgt_ind.equals("Y")){
							String RcvdQty1 = "";
							String TotRcvdQty = "";
							String Wgt = "";
							Double PIQty = 0.0;
							String TotRcvdQty_rej = "";
							String qty = DspQtyvthoutUOM1;
							ArtCount++;
							TotQty += Integer.parseInt(qty);
							Wgt = DspWgt1;
							Double RcvQty = Double.parseDouble(qty) * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							RcvdQty1 = qty.toString()+" "+UOM;
							PIQty = Double.parseDouble(PI_OM.toString()) * Double.parseDouble(qty);
							TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
							TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
							TotRcvdQty_rej = TotRcvdQty;
							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
						}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
							app1.add(Art1);
							app1.add("NA");
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+"::NA:"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
							String Rcvdqty = "";
							String TotRcvdQty1 = "";
							String DispRcvUnits = "";
							Integer qty = 0;
							for(int ak=0;ak<DBListDisp.size();ak++){
								if(Art1.equals(DBListDisp.get(ak).get(0).toString())){
									qty = Integer.parseInt(DBListDisp.get(ak).get(5).toString());
									Rcvdqty = qty.toString()+" "+DBListDisp.get(ak).get(6).toString();
									DispRcvUnits = DBListDisp.get(ak).get(2).toString();
									Double TotRcvdQty = qty * 1.0;
									TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + DBListDisp.get(ak).get(6).toString();
								}
								String Str1_disp_rcvd = ""+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DispRcvUnits;
								Applst_Rcvd_Disp1.addAll(StringToListCreation(Str1_disp_rcvd));

								String Str1_disp = ""+DBListDisp.get(ak).get(1).toString()+":"+qty;
								Applst_Art.addAll(StringToListCreation(Str1_disp));

								String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+Rcvdqty+":"+TotRcvdQty1+":"+DBListDisp.get(ak).get(3).toString();
								Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));
							}
						}else{
							String RcvdQty1 = "";
							String TotRcvdQty1 = "";
							Double TotRcvdQty2 = 0.0;
							String TotRcvdQty_rej = "";
							ArtCount++;
							String qty = DspQtyvthoutUOM1;
							TotQty += Integer.parseInt(qty);
							RcvdQty1 = qty.toString()+" "+UOM;
							Double TotRcvdQty = Double.parseDouble(qty) * Double.parseDouble(OM.toString());
							Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
							TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
							TotRcvdQty_rej = TotRcvdQty1;

							if(CPBD_ind.equals("1")){
								TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
								String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));
							}else{
								TotRcvdQty2 = Double.parseDouble(qty) * Double.parseDouble(OM.toString());

							}

							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);

						}
					}
				}
				else if(n==14){
					String Rcvdqty_1 = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty_1 = table.getText();
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01")))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1]+ " " +String[2]+ " " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
					}
					app2.add(Art1);
					app2.add(Rcvdqty_1);
				}
			}
			Applst1.add(app2);
			DBLst1.add(app1);

		}
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Article details before changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Total Received Qty details of each article after changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst1, DBLst1);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(DBList1.size()>1){
		click(RecOrdObj.ClckyES);
		waitForJSandJQueryToLoad(driver);}
		if(Applst_Rcvd_Review.size()>0){
			for(int k=1;k<=RecOrdObj.VndrRcvngRvw.size();k++){
				if(k==2){
					scrolldown(driver);
				}
				WebElement table=null;
				List app = new ArrayList();
				table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,1,driver);
				String Art1 = table.getText();
				String Rnd_wgt_ind = "";
				String Disp_ind = "";
				String CPBD_ind = "";
				String Temp_ind = "";
				for(int m=0;m<DBList1.size();m++){
					if(Art1.equals(DBList1.get(m).get(0).toString())){
						Rnd_wgt_ind = DBList1.get(m).get(14).toString();
						Disp_ind = DBList1.get(m).get(12).toString();
						CPBD_ind = DBList1.get(m).get(13).toString();
						if(Method.equals("HighTemp")){
							Temp_ind = DBList1.get(m).get(16).toString();}
						else if(Method.equals("ASNReject")){
							Temp_ind = DBList1.get(m).get(16).toString();}
						else{
							Temp_ind = "";
						}
						break;
					}
				}
				for(int l=1;l<=12;l++){
					if(l==4 || l==6 || l==8){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String getQty = table.getText();
						String  String2 [] = splitString(getQty," ");
						String Qty = decimalFormat1(String2[0]) + " " +String2[1];
						app.add(Qty);
					}
					else if(l==5||l==7){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}else if(l==9){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						else if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}
					else if(l==10){
						String Diff = "";
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue12, k,l,driver);
						if(table.getAttribute("class").equals("valueUp")){
							Diff = table.getText();
						}
						if(table.getAttribute("class").equals("valueDown")){
							Diff = "-"+table.getText()+"";
						}
						app.add(Diff);
					}
					else if(l==12){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue13, k,l,driver);
						click(table);
					}
					else if(l==2||l==3){

					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						app.add(table.getText());
					}
				}
				Applst2.add(app);

			}
			htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Review Discrepancies of each article***;;;Pass");
			ElementContains1(cName, mName,extLogger,driver, Applst2, Applst_Rcvd_Review);
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);
		}
		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}
		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(decimalFormat1(resultsdummy.get(0).get(0).toString())) && RecOrdObj.getOtherQty.getText().toString().equals(decimalFormat1(OtherQty.toString()))){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+decimalFormat1(resultsdummy.get(0).get(0).toString())+", "+decimalFormat1(OtherQty.toString())+"];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+decimalFormat1(resultsdummy.get(0).get(0).toString())+", "+decimalFormat1(OtherQty.toString())+"];Fail");
		}
		click(RecOrdObj.SubmitReceiving);
		click(RecOrdObj.ClckContinue);
		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){

			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}
			ValueList1 = gettingValuesafterReceiving(RecOrdObj);
			String DspWgt = "";
			String RecevdWgt = "";
			if(ValueList1.get(0).get(7).toString().equals("NA")){
				DspWgt = ValueList1.get(0).get(7).toString();
			}else{
				DspWgt = decimalFormat1(ValueList1.get(0).get(7).toString());
			}
			if(ValueList1.get(0).get(6).toString().equals("NA")){
				RecevdWgt = ValueList1.get(0).get(6).toString();
			}else{
				RecevdWgt = decimalFormat1(ValueList1.get(0).get(6).toString());
			}
			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(7).toString()) && ValueList1.get(0).get(3).toString().equals(decimalFormat1(TotQty.toString())) && ValueList1.get(0).get(4).toString().equals(DBList.get(0).get(5).toString()) && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(8).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+decimalFormat1(TotQty.toString())+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+decimalFormat1(TotQty.toString())+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Fail");
			}

			if(decimalFormat1(RecevdWgt.toString()).equals(decimalFormat1(TotRcvdWgt.toString())) && DspWgt.equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE BY EXCEPTION")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+RecevdWgt.toString()+", "+DspWgt.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE BY EXCEPTION];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+RecevdWgt.toString()+", "+DspWgt.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE BY EXCEPTION];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals(Invoice) && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", "+Invoice+", NA];Fail");
			}

			if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
				//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);
			click(RecOrdObj.ClkRcvGrpBy);
			htmlToExtent(cName,mName,extLogger,driver, "**** Checking the article details after receiving the order ****;;;Pass");
			ComparingArticlesafterRcvngASNLineByLine(RecOrdObj,Applst_Rcvd,Applst_Rcvd_Disp2,driver);
		}
		return Applst_Art;
	}


	public List<List<Object>> WarehouseRecvThroughException(ReceiveOrderObjects RecOrdObj,String Ordnumber,List<List<Object>> DBList,
			List<List<Object>> DBList1, String ChilledTemp, String FrozenTemp, String username, String usernm1, 
			List<List<Object>> DBListDisp, List<List<Object>> DBListDispOrd, String Method, List<List<Object>> resultsdummy, String Chck, WebDriver driver) throws SQLException, IOException, AWTException, ParseException
	{
		List<List<Object>> DBList2 = new ArrayList<List<Object>>();
		List<List<Object>> DBList3 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBLst = new ArrayList<List<Object>>();
		List<List<Object>> Applst1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst2 = new ArrayList<List<Object>>();
		List<List<Object>> DBLst1 = new ArrayList<List<Object>>();
		//System.out.println(Ordnumber);
		Report_AddStep("testcase","Order Number-"+Ordnumber+"" , "", "", "Pass");
		enterText(RecOrdObj.OrderLookup, Ordnumber,driver);	/*8160351	5001389250090836*/
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickGo);
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Order details are loaded");
		String ChckSrc = RecOrdObj.ChckSource.getText();

		String Str_Hdr_dtl_appl = ""+RecOrdObj.ChckOrd.getText()+":"+RecOrdObj.Chckstatus.getText()+":"+RecOrdObj.ChckDeldate.getText()+":"+RecOrdObj.Chcksupplier.getText()+":"+RecOrdObj.Chckordtype.getText()+":"+RecOrdObj.ChckTotCartons.getText()+":"+RecOrdObj.ChckTotPallet.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtl_appl));

		String Str_Hdr_dtl_DB = ""+DBList.get(0).get(0).toString()+":DISPATCHED:"+DBList.get(0).get(1).toString()+":"+DBList.get(0).get(4).toString()+":WAREHOUSE:"+DBList.get(0).get(8).toString()+":0";
		DBLst.addAll(StringToListCreation(Str_Hdr_dtl_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		click(RecOrdObj.ClickOnOrder);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
		String OrdNo2 = RecOrdObj.ChckOrdNo.getText();
		String  String1 [] = splitString(OrdNo2,"#");
		String OrdNum = String1[1];

		String Deldate1 = RecOrdObj.Chckdelhdr.getText();
		String Stat1 = RecOrdObj.Chcksta.getText();
		String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
		String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
		if(ChckSrc.equals("SUGO")){
			String onshowdate = RecOrdObj.ChckOnshwdate.getText();

			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && DBList.get(0).get(3).toString().equals(Createdby1) && onshowdate.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+", "+onshowdate+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", " +DBList.get(0).get(3).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		else{
			if(OrdNum.toString().equals(DBList.get(0).get(0).toString())  && Stat1.equals("Dispatched") && DBList.get(0).get(1).toString().equals(Deldate1)
					&& DBList.get(0).get(4).toString().equals(Suppliername1) && Createdby1.equals(DBList.get(0).get(9).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+Createdby1+"];DB Value is ["+DBList.get(0).get(0).toString()+", Dispatched, "+DBList.get(0).get(1).toString()+", "+DBList.get(0).get(4).toString()+", "+DBList.get(0).get(9).toString()+"];Fail");
			}
		}
		String GetListart = RecOrdObj.GetListofArt.getText();
		Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
		String DisWght = "";
		if(RecOrdObj.Dispwgt.getText().toString().equals("NA")){
			DisWght = "NA";
		}
		else{
			DisWght = decimalFormat1(RecOrdObj.Dispwgt.getText().toString());
		}
		String Str_Hdr_dtls_appl = ""+RecOrdObj.getPaltcnt.getText()+":"+RecOrdObj.getArtcount.getText()+":"+RecOrdObj.Dispqty.getText()+":"+DisWght+":"+RecOrdObj.ChckSealnumb.getText()+":"+RecOrdObj.Gettotalqty.getText();
		Applst.addAll(StringToListCreation(Str_Hdr_dtls_appl));

		String Str_Hdr_dtls_DB = "0:"+DBList.get(0).get(7).toString()+":"+DBList.get(0).get(5).toString()+":"+DBList.get(0).get(6).toString()+":NA:"+DBList.get(0).get(8).toString();
		DBLst.addAll(StringToListCreation(Str_Hdr_dtls_DB));
		htmlToExtent(cName,mName,extLogger,driver,"*** Checking the Pallet Count, Total Articles count, Dispatched Qty, Total Cartons Ordered, Dispatched Weight, Seal Number details***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		DBLst.clear();
		Applst.clear();

		if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");	
		}else{
			htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
		}

		if(DBList.get(0).get(10).toString().equals("Y")){
			if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
			}
		}
		scrolldown(driver);
		click(RecOrdObj.Clrgrpby);

		scrolldown(driver);
		htmlToExtent(cName,mName,extLogger,driver,"Comparing the Article details displayed in Browser;;;Pass");
		ComparingArticlesinDispatchedStatus(RecOrdObj,DBList1,DBListDisp,driver);

		//System.out.println("Click Receive Order");
		waitForJSandJQueryToLoad(driver);
		//System.out.println("Receive Order option is clicked");
		click(RecOrdObj.ClickReceiveOrder);
		htmlToExtent(cName,mName,extLogger,driver,"Receive Order option is clicked;;;Pass");
		waitForJSandJQueryToLoad(driver);
		if(RecOrdObj.SessionPopup.getText().equals("Receiving"))
		{
			click(RecOrdObj.ClckNewSession);
			waitForJSandJQueryToLoad(driver);
		}
		click(RecOrdObj.ClckRE);
		waitForJSandJQueryToLoad(driver);
		htmlToExtent(cName,mName,extLogger,driver,"Receive By Exception option is selected;;;Pass");
		click(RecOrdObj.ClckyES);
		waitForJSandJQueryToLoad(driver);
		String ChilledTemp1 = "";
		String FrozenTemp1 = "";
		if(RecOrdObj.checkChldTemp.getAttribute("class").equals("parameter clearfix chilled")){
			enterText(RecOrdObj.enterChldTemp, ChilledTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Chilled Temperature of "+ChilledTemp+" is entered;;;Pass");
			ChilledTemp1 = ChilledTemp;
		}else{
			ChilledTemp1 = "NA";
		}

		scrolldown(driver);
		if(RecOrdObj.checkFrznTemp.getAttribute("class").equals("parameter clearfix hardFrozen")){
			enterText(RecOrdObj.EnterFrznTemp, FrozenTemp,driver);
			waitFor(1);
			htmlToExtent(cName,mName,extLogger,driver,"Frozen Temperature of "+FrozenTemp+" is entered;;;Pass");
			FrozenTemp1 = FrozenTemp;
		}else{
			FrozenTemp1 = "NA";
		}
		scrolldown(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		if(Method.equals("HighTemp")){
			String Tempchck = RecOrdObj.ChckTempErrormsg.getText().replace("\n", " ").replace("\r", " ");
			if(Tempchck.contains("Temperature out of range! Some articles have failed temperature check. Re-enter temperature or click 'next step' to reject failed articles.")){
				htmlToExtent(cName,mName,extLogger,driver,""+Tempchck+";;;Pass");
				click(RecOrdObj.ClckTempNxt);
				waitForJSandJQueryToLoad(driver);
			}
		}else if(Method.equals("ASNReject")){
			click(RecOrdObj.ClckReject);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Rejected the Not Ranged Articles in the order;;;Pass");
		}else if(Method.equals("ASNAccept")){
			click(RecOrdObj.ClckAccept);
			waitForJSandJQueryToLoad(driver);
			click(RecOrdObj.ClseMsg);
			waitForJSandJQueryToLoad(driver);
			htmlToExtent(cName,mName,extLogger,driver,"Accepted the Not Ranged Articles in the order;;;Pass");
		}
		Integer ArtCount = 0;
		Integer TotQty = 0;
		Integer OtherQty = 0;
		Double TotRcvdWgt = 0.0;
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Review = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Art = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp1 = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Rcvd_Disp2 = new ArrayList<List<Object>>();
		int count1 = 0;
		for(int k=1;k<=RecOrdObj.VndrRcvng.size();k++){
			if(k==2){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app2 = new ArrayList();
			List app_rcvd = new ArrayList();
			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,1,driver);
			String Art1 = table.getText();
			String Rnd_wgt_ind = "";
			String Disp_ind = "";
			String CPBD_ind = "";
			String UOM = "";
			String PI_OM = "";
			String OM = "";
			String OMvthUOM = "";
			String OrdQTy = "";
			String TotOrdQty = "";
			String BaseUOM = "";
			String DspQty = "";
			String TotDspQty = "";
			String DspQtyvthoutUOM = "";
			String OM2 = "";
			String DspWgt1 = "";
			String OrdQtyvthOutUOM = "";
			String Temp_ind = "";
			String NotRngd_ind = "";
			String TotRcvunits = "";
			String DspQtyvthoutUOM1 = "";
			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(0).toString())){
					Rnd_wgt_ind = DBList1.get(m).get(14).toString();
					Disp_ind = DBList1.get(m).get(12).toString();
					CPBD_ind = DBList1.get(m).get(13).toString();
					UOM = DBList1.get(m).get(2).toString();
					PI_OM = decimalFormat1(DBList1.get(m).get(15).toString());
					OM = decimalFormat1(DBList1.get(m).get(5).toString());
					OMvthUOM = DBList1.get(m).get(6).toString();
					DspQtyvthoutUOM1 = decimalFormat1(DBList1.get(m).get(3).toString());
					OrdQTy = DBList1.get(m).get(10).toString();
					TotOrdQty = DBList1.get(m).get(11).toString();
					DspQty = DBList1.get(m).get(7).toString();
					TotDspQty = DBList1.get(m).get(8).toString();
					BaseUOM = DBList1.get(m).get(9).toString();
					if(Method.equals("HighTemp")){
						Temp_ind = DBList1.get(m).get(16).toString();}
					else if(Method.equals("ASNReject")){
						Temp_ind = DBList1.get(m).get(16).toString();
					}else if(Method.equals("ASNAccept")){
						NotRngd_ind = DBList1.get(m).get(16).toString();
						Temp_ind = " ";
					}else{
						Temp_ind = " ";

					}
					if(Temp_ind.equals("03") || Temp_ind.equals("01")){
						DspQtyvthoutUOM = "0";
						TotRcvunits = "0 " +BaseUOM;
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						DspQtyvthoutUOM = "0";
						TotRcvunits = "0";
					}else{
						DspQtyvthoutUOM = decimalFormat1(DBList1.get(m).get(3).toString());
						TotRcvunits = TotDspQty;
					}
					break;
				}
			}
			for(int l=1;l<=14;l++){
				if(l==4 ){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getOM1 = table.getText();
					String OM1 = "";
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = getOM1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						OM1 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OM2 = OMvthUOM;
					}else{
						String  String2 [] = splitString(getOM1," ");
						OM1 = decimalFormat1(String2[0]) + " " +String2[1];
					}
					app.add(OM1);
				}else if(l==9 || l==11){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String getQty = table.getText();
					String  String2 [] = splitString(getQty," ");
					String Qty = decimalFormat1(String2[0]) + " " +String2[1];
					app.add(Qty);
				}
				else if(l==10){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						OrdQtyvthOutUOM = decimalFormat1(String[0]);
					}
					app.add(gettotordty2);
				}else if(l==12){
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty2 = "";
					String gettotordty1 = table.getText();
					if(Rnd_wgt_ind.equals("Y")){
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
					}else{
						String  String [] = splitString(gettotordty1," ");
						gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(gettotordty2);
				}
				else if(l==13){
					if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue16, k,l,driver);
						String Rcvdqty = table.getText();
						app.add(Rcvdqty);
					}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
						if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
						}else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
							String Rcvdqty = table.getAttribute("value");
							WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
							String DspWgt = table1.getAttribute("value");
							if(table.getAttribute("disabled")!=null && table1.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty && Wgt fields are disabled ;;;Pass");
							}
							app.add(Rcvdqty);
							app.add(DspWgt);
						}
					}
					else if(Rnd_wgt_ind.equals("Y")){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						String Rcvdqty = table.getAttribute("value");
						WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,l,driver);
						String DspWgt = table1.getAttribute("value");
						app.add(Rcvdqty);
						app.add(DspWgt);
					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,l,driver);
						if((Temp_ind.equals("03") || Temp_ind.equals("01")) || (Temp_ind.equals("DA") || Temp_ind.equals("ES"))){
							if(table.getAttribute("disabled")!=null){
								htmlToExtent(cName,mName,extLogger,driver,"Article "+Art1+" is a temperature Article and Received qty field is disabled ;;;Pass");
							}
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);
						}else{
							String Rcvdqty = table.getAttribute("value");					
							app.add(Rcvdqty);	}			
					}
				}
				else if(l==14){
					String Rcvdqty = "";
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					String gettotordty1 = table.getText();
					if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
						Rcvdqty = table.getText();
					}else if(Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))){			
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
						DspWgt1 = decimalFormat1(String[0]);
					}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
						//String  String [] = splitString(gettotordty1," ");
						Rcvdqty = gettotordty1;
					}else if(Rnd_wgt_ind.equals("Y")){					
						String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
						String  String [] = splitString(gettotrcvdty3," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						DspWgt1 = decimalFormat1(String[0]);
					}else{					
						String  String [] = splitString(gettotordty1," ");
						Rcvdqty = decimalFormat1(String[0]) + " " +String[1];
					}
					app.add(Rcvdqty);
				}
				else if(l==2||l==3||l==5||l==6||l==7||l==8){

				}
				else{
					table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,l,driver);
					app.add(table.getText());
				}
			}
			Applst.add(app);
			if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if((Rnd_wgt_ind.equals("Y") && (NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")))){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else if(Rnd_wgt_ind.equals("Y")){
				String Str_DB = ""+Art1+":"+OM2+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+DspWgt1+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}else{			
				String Str_DB = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+DspQtyvthoutUOM+":"+TotRcvunits;
				DBLst.addAll(StringToListCreation(Str_DB));
			}

			for(int n=1;n<=14;n++){
				String TotRcvdunits = "";
				Float TotRcvd_NUM = (float) 0;
				if(Method.equals("HighTemp") || Method.equals("ASNReject") || Method.equals("ASNAccept")){
					if(n==13){
						if(Rnd_wgt_ind.equals("Y")){
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty = "";
							Double Wgt = 0.0;
							Double PIQty = 0.0;
							String TotRcvdQty_rej = "";
							if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
								RcvdQty1 = DspQty;
								TotRcvdQty = TotDspQty;
								TotRcvdQty_rej = TotRcvdQty;
								ArtCount++;
								DiffQty1 = "0";
								Integer qty = Integer.parseInt(DspQtyvthoutUOM);
								TotQty += qty;
								PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								String gettotrcvdty3 = TotDspQty.replace("\n", " ").replace("\r", " ");
								String  String [] = splitString(gettotrcvdty3," ");
								String Wgt1 = decimalFormat1(String[0]);
								Wgt = Double.parseDouble(Wgt1);
							}
							else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								RcvdQty1 = "0 " +UOM;
								TotRcvdQty = "0 " +BaseUOM;
								if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									TotRcvdQty_rej = "0";
								}else{
									TotRcvdQty_rej = TotRcvdQty;
								}

								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = 0 - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								Wgt = 0.0;
								PIQty = 0.0;
								ArtCount++;
							}else{
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

								Integer qty = random_no(20) +1;
								ArtCount++;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
								Wgt = random_no(20) +1.359;
								Enterweight.clear();
								Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
								click(clck);
								Double RcvQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty =DiffQty = RcvQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								RcvdQty1 = qty.toString()+" "+UOM;

								PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
								TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
								TotRcvdQty_rej = TotRcvdQty;
							}
							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}

							click(clckchckBox);
							waitForJSandJQueryToLoad(driver);
						}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
							String DiffQty1 = "";
							String RcvdQty = "";
							String TotRcvdQty1 = "";
							Double TotRcvdQty2 = 0.0;
							Integer qty = 0;
							String TotRcvdQty_rej = "";
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
							if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
								RcvdQty = DspQty;
								TotRcvdQty1 = TotDspQty;
								TotRcvdQty_rej = TotRcvdQty1;
								ArtCount++;
								DiffQty1 = "0";
								qty = Integer.parseInt(DspQtyvthoutUOM);
								TotQty += qty;
							}else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								RcvdQty = "0 " +UOM;
								TotRcvdQty1 = "0 " +BaseUOM;
								if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									TotRcvdQty_rej = "0";
								}else{
									TotRcvdQty_rej = TotRcvdQty1;
								}
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = 0 - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								ArtCount++;
							}else{
								ArtCount++;
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
								qty = random_no(20) +1;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								click(clck);
								RcvdQty = qty.toString()+" "+UOM;
								Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = TotRcvdQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
								TotRcvdQty_rej = TotRcvdQty1;
							}
							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);

							for(int ak=0;ak<DBListDisp.size();ak++){
								if(Art1.equals(DBListDisp.get(ak).get(0).toString())){

									Double DispRcvQty = Double.parseDouble(DBListDisp.get(ak).get(7).toString()) * qty;
									String DispRcvQty1 = decimalFormat1(DispRcvQty.toString())+" "+DBListDisp.get(ak).get(6).toString();

									String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DispRcvQty1+":"+DispRcvQty1+":"+DBListDisp.get(ak).get(3).toString();
									Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));

									String Str1_disp = ""+DBListDisp.get(ak).get(1).toString()+":"+decimalFormat1(DispRcvQty.toString());
									Applst_Art.addAll(StringToListCreation(Str1_disp));
								}
							}
							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}
							click(clckchckBox);
							waitForJSandJQueryToLoad(driver);
						}else{
							String DiffQty1 = "";
							String RcvdQty1 = "";
							String TotRcvdQty1 = "";
							Double TotRcvdQty2 = 0.0;
							Integer qty = 0;
							String TotRcvdQty_rej = "";
							WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
							if(NotRngd_ind.equals("DA") || NotRngd_ind.equals("ES")){
								RcvdQty1 = DspQty;
								TotRcvdQty1 = TotDspQty;
								TotRcvdQty_rej = TotRcvdQty1;
								ArtCount++;
								DiffQty1 = "0";
								qty = Integer.parseInt(DspQtyvthoutUOM);
								TotQty += qty;
							}
							else if(Temp_ind.equals("03") || Temp_ind.equals("01") || Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								RcvdQty1 = "0 " +UOM;
								TotRcvdQty1 = "0 " +BaseUOM;
								if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									TotRcvdQty_rej = "0";
								}else{
									TotRcvdQty_rej = TotRcvdQty1;
								}
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = 0 - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								ArtCount++;
							}else{
								ArtCount++;
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
								qty = random_no(20) +1;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								click(clck);
								RcvdQty1 = qty.toString()+" "+UOM;
								Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = TotRcvdQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
								TotRcvdQty_rej = TotRcvdQty1;
							}
							if(CPBD_ind.equals("1")){
								TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
								String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));
							}else{
								TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

							}

							String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
							Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
							Applst_Art.addAll(StringToListCreation(Str1_disp));

							app1.add(Art1);
							app1.add(TotRcvdQty_rej);
							if(DiffQty1.equals("0")){					
							}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}else{
								String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
								Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
							}

							click(clckchckBox);
							waitForJSandJQueryToLoad(driver);
						}
					}
					else if(n==14){
						String Rcvdqty_1 = "";
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n,driver);
						String gettotordty1 = table.getText();
						if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
							Rcvdqty_1 = table.getText();
						}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01")))){			
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
							DspWgt1 = decimalFormat1(String[0]);
						}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							//String  String [] = splitString(gettotordty1," ");
							Rcvdqty_1 = gettotordty1;
						}else if(Rnd_wgt_ind.equals("Y")){			
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1]+ " " +String[2]+ " " +String[3];
							DspWgt1 = decimalFormat1(String[0]);
						}else{
							String  String [] = splitString(gettotordty1," ");
							Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
						}
						app2.add(Art1);
						app2.add(Rcvdqty_1);
					}
				}
				else{
					if(n==13){
						if(k==1){
							if(Rnd_wgt_ind.equals("Y")){
								WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
								String DiffQty1 = "";
								String RcvdQty1 = "";
								String TotRcvdQty = "";
								Double Wgt = 0.0;
								Double PIQty = 0.0;
								String TotRcvdQty_rej = "";

								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);

								Integer qty = random_no(20) +1;
								ArtCount++;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue13, k,n,driver);
								Wgt = random_no(20) +1.359;
								Enterweight.clear();
								Enterweight.sendKeys(decimalFormat1(Wgt.toString()));
								click(clck);
								Double RcvQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty =DiffQty = RcvQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								RcvdQty1 = qty.toString()+" "+UOM;

								PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
								TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
								TotRcvdQty_rej = TotRcvdQty;
								app1.add(Art1);
								app1.add(TotRcvdQty_rej);
								String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));
								String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

								if(DiffQty1.equals("0")){					
								}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Not Ranged";
									Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
								}else{
									String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+DiffQty1+":Quantity Difference";
									Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
								}

								click(clckchckBox);
								waitForJSandJQueryToLoad(driver);
							}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
								String DiffQty1 = "";
								String RcvdQty = "";
								String TotRcvdQty1 = "";
								Double TotRcvdQty2 = 0.0;
								Integer qty = 0;
								String TotRcvdQty_rej = "";
								WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);

								ArtCount++;
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
								qty = random_no(20) +1;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								click(clck);
								RcvdQty = qty.toString()+" "+UOM;
								Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = TotRcvdQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
								TotRcvdQty_rej = TotRcvdQty1;

								String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

								app1.add(Art1);
								app1.add(TotRcvdQty_rej);

								for(int ak=0;ak<DBListDisp.size();ak++){
									if(Art1.equals(DBListDisp.get(ak).get(0).toString())){

										Double DispRcvQty = Double.parseDouble(DBListDisp.get(ak).get(7).toString()) * qty;
										String DispRcvQty1 = decimalFormat1(DispRcvQty.toString())+" "+DBListDisp.get(ak).get(6).toString();

										String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DispRcvQty1+":"+DispRcvQty1+":"+DBListDisp.get(ak).get(3).toString();
										Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));

										String Str1_disp = ""+DBListDisp.get(ak).get(1).toString()+":"+decimalFormat1(DispRcvQty.toString());
										Applst_Art.addAll(StringToListCreation(Str1_disp));
									}
								}
								if(DiffQty1.equals("0")){					
								}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
									Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
								}else{
									String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
									Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
								}
								click(clckchckBox);
								waitForJSandJQueryToLoad(driver);
							}else{
								String DiffQty1 = "";
								String RcvdQty1 = "";
								String TotRcvdQty1 = "";
								Double TotRcvdQty2 = 0.0;
								Integer qty = 0;
								String TotRcvdQty_rej = "";
								WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);

								ArtCount++;
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n-1,driver);
								qty = random_no(20) +1;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								click(clck);
								RcvdQty1 = qty.toString()+" "+UOM;
								Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = TotRcvdQty - TotDspQty1;
								DiffQty1 = decimalFormat1(DiffQty.toString());
								if(DiffQty1.equals("0")){
								}else{
									OtherQty++;
								}
								TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
								TotRcvdQty_rej = TotRcvdQty1;

								if(CPBD_ind.equals("1")){
									TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
									String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
									Applst_Art.addAll(StringToListCreation(Str1_disp));
								}else{
									TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

								}

								String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

								String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));

								app1.add(Art1);
								app1.add(TotRcvdQty_rej);
								if(DiffQty1.equals("0")){					
								}else if (Temp_ind.equals("DA") || Temp_ind.equals("ES")){
									String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Not Ranged";
									Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
								}else{
									String Updt_rcvd_DB2 = ""+Art1+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+DiffQty1+":Quantity Difference";
									Applst_Rcvd_Review.addAll(StringToListCreation(Updt_rcvd_DB2));
								}

								click(clckchckBox);
								waitForJSandJQueryToLoad(driver);
							}

						}else{
							if(Rnd_wgt_ind.equals("Y")){
								WebElement clckchckBox = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue15, k,n+4,driver);
								String RcvdQty1 = "";
								String TotRcvdQty = "";
								Double Wgt = 0.0;
								Double PIQty = 0.0;
								String TotRcvdQty_rej = "";
								Integer qty = Integer.parseInt(DspQtyvthoutUOM);
								ArtCount++;
								TotQty += qty;
								Wgt = Double.parseDouble(DspWgt1);
								Double RcvQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty =DiffQty = RcvQty - TotDspQty1;
								RcvdQty1 = qty.toString()+" "+UOM;
								PIQty = Double.parseDouble(PI_OM.toString()) * qty;
								TotRcvdQty = decimalFormat1(Wgt.toString())+ " " +BaseUOM+ " ("+decimalFormat1(PIQty.toString())+" EA)";
								TotRcvdWgt += Double.parseDouble(decimalFormat1(Wgt.toString()));						
								TotRcvdQty_rej = TotRcvdQty;

								app1.add(Art1);
								app1.add(TotRcvdQty_rej);
								String Str1_disp = ""+Art1+":"+decimalFormat1(Wgt.toString())+":"+decimalFormat1(PIQty.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));
								String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

							}else if(Disp_ind.equals("Y")  && CPBD_ind.equals("0")){
								String DiffQty1 = "";
								String RcvdQty = "";
								String TotRcvdQty1 = "";
								Double TotRcvdQty2 = 0.0;
								Integer qty = 0;
								String TotRcvdQty_rej = "";
								ArtCount++;
								qty = Integer.parseInt(DspQtyvthoutUOM);
								TotQty += qty;
								RcvdQty = qty.toString()+" "+UOM;
								Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());

								TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
								TotRcvdQty_rej = TotRcvdQty1;

								String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

								app1.add(Art1);
								app1.add(TotRcvdQty_rej);

								for(int ak=0;ak<DBListDisp.size();ak++){
									if(Art1.equals(DBListDisp.get(ak).get(0).toString())){

										Double DispRcvQty = Double.parseDouble(DBListDisp.get(ak).get(7).toString()) * qty;
										String DispRcvQty1 = decimalFormat1(DispRcvQty.toString())+" "+DBListDisp.get(ak).get(6).toString();

										String Str1_disp_rcvd1 = ""+Art1+":"+DBListDisp.get(ak).get(1).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(4).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DBListDisp.get(ak).get(2).toString()+":"+DispRcvQty1+":"+DispRcvQty1+":"+DBListDisp.get(ak).get(3).toString();
										Applst_Rcvd_Disp2.addAll(StringToListCreation(Str1_disp_rcvd1));

										String Str1_disp = ""+DBListDisp.get(ak).get(1).toString()+":"+decimalFormat1(DispRcvQty.toString());
										Applst_Art.addAll(StringToListCreation(Str1_disp));
									}
								}

							}else{
								String DiffQty1 = "";
								String RcvdQty1 = "";
								String TotRcvdQty1 = "";
								Double TotRcvdQty2 = 0.0;
								Integer qty = 0;
								String TotRcvdQty_rej = "";
								ArtCount++;
								qty = Integer.parseInt(DspQtyvthoutUOM);
								TotQty += qty;

								RcvdQty1 = qty.toString()+" "+UOM;
								Double TotRcvdQty = qty * Double.parseDouble(OM.toString());
								Double TotDspQty1 = Double.parseDouble(DspQtyvthoutUOM1) * Double.parseDouble(OM.toString());
								Double DiffQty = TotRcvdQty - TotDspQty1;

								TotRcvdQty1 = decimalFormat1(TotRcvdQty.toString())+ " " + BaseUOM;
								TotRcvdQty_rej = TotRcvdQty1;

								if(CPBD_ind.equals("1")){
									TotRcvdQty2 = Double.parseDouble(qty.toString()) * 24;
									String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
									Applst_Art.addAll(StringToListCreation(Str1_disp));
								}else{
									TotRcvdQty2 = qty * Double.parseDouble(OM.toString());

								}

								String Updt_rcvd_DB1 = ""+Art1+":"+OMvthUOM+":"+OrdQTy+":"+TotOrdQty+":"+DspQty+":"+TotDspQty+":"+RcvdQty1+":"+TotRcvdQty1+":"+Rnd_wgt_ind+":"+Disp_ind+":"+CPBD_ind+":"+Temp_ind;
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

								String Str1_disp = ""+Art1+":"+decimalFormat1(TotRcvdQty2.toString());
								Applst_Art.addAll(StringToListCreation(Str1_disp));

								app1.add(Art1);
								app1.add(TotRcvdQty_rej);

							}

						}

					}
					else if(n==14){
						String Rcvdqty_1 = "";
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.POtablevalue11, k,n,driver);
						String gettotordty1 = table.getText();
						if(Disp_ind.equals("Y") && CPBD_ind.equals("0")){
							Rcvdqty_1 = table.getText();
						}else if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01")))){			
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
							DspWgt1 = decimalFormat1(String[0]);
						}else if(Temp_ind.equals("DA") || Temp_ind.equals("ES")){
							//String  String [] = splitString(gettotordty1," ");
							Rcvdqty_1 = gettotordty1;
						}else if(Rnd_wgt_ind.equals("Y")){			
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1]+ " " +String[2]+ " " +String[3];
							DspWgt1 = decimalFormat1(String[0]);
						}else{
							String  String [] = splitString(gettotordty1," ");
							Rcvdqty_1 = decimalFormat1(String[0]) + " " +String[1];
						}
						app2.add(Art1);
						app2.add(Rcvdqty_1);
					}
				}

			}
			Applst1.add(app2);
			DBLst1.add(app1);
		}
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Article details before changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBLst);
		htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Total Received Qty details of each article after changing the quantity***;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst1, DBLst1);
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClickNextStep);
		waitForJSandJQueryToLoad(driver);
		
		if(Chck.equals("Exception")){
			if(DBList1.size()>1)
			{
			click(RecOrdObj.ClckyES);
			waitForJSandJQueryToLoad(driver);
			}
		}
		
		if(Applst_Rcvd_Review.size()>0){
			for(int k=1;k<=RecOrdObj.VndrRcvngRvw.size();k++){
				if(k==2){
					scrolldown(driver);
				}
				WebElement table=null;
				List app = new ArrayList();
				table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,1,driver);
				String Art1 = table.getText();
				String Rnd_wgt_ind = "";
				String Disp_ind = "";
				String CPBD_ind = "";
				String Temp_ind = "";
				for(int m=0;m<DBList1.size();m++){
					if(Art1.equals(DBList1.get(m).get(0).toString())){
						Rnd_wgt_ind = DBList1.get(m).get(14).toString();
						Disp_ind = DBList1.get(m).get(12).toString();
						CPBD_ind = DBList1.get(m).get(13).toString();
						if(Method.equals("HighTemp")){
							Temp_ind = DBList1.get(m).get(16).toString();}
						else if(Method.equals("ASNReject")){
							Temp_ind = DBList1.get(m).get(16).toString();}
						else{
							Temp_ind = "";
						}
						break;
					}
				}
				for(int l=1;l<=12;l++){
					if(l==4 || l==6 || l==8){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String getQty = table.getText();
						String  String2 [] = splitString(getQty," ");
						String Qty = decimalFormat1(String2[0]) + " " +String2[1];
						app.add(Qty);
					}
					else if(l==5||l==7){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}else if(l==9){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						String gettotordty2 = "";
						String gettotordty1 = table.getText();
						if((Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("03") || Temp_ind.equals("01"))) || (Rnd_wgt_ind.equals("Y") && (Temp_ind.equals("DA") || Temp_ind.equals("ES")))){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						else if(Rnd_wgt_ind.equals("Y")){
							String gettotrcvdty3 = gettotordty1.replace("\n", " ").replace("\r", " ");
							String  String [] = splitString(gettotrcvdty3," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1] +" " +String[2]+" " +String[3];
						}else{
							String  String [] = splitString(gettotordty1," ");
							gettotordty2 = decimalFormat1(String[0]) + " " +String[1];
						}
						app.add(gettotordty2);

					}
					else if(l==10){
						String Diff = "";
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue12, k,l,driver);
						if(table.getAttribute("class").equals("valueUp")){
							Diff = table.getText();
						}
						if(table.getAttribute("class").equals("valueDown")){
							Diff = "-"+table.getText()+"";
						}
						app.add(Diff);
					}
					else if(l==12){
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue13, k,l,driver);
						click(table);
					}
					else if(l==2||l==3){

					}
					else{
						table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.PORvwtablevalue11, k,l,driver);
						app.add(table.getText());
					}
				}
				Applst2.add(app);

			}
			htmlToExtent(cName,mName,extLogger,driver,"****Comparing the Review Discrepancies of each article***;;;Pass");
			ElementContains1(cName, mName,extLogger,driver, Applst2, Applst_Rcvd_Review);
			click(RecOrdObj.ClickNextStep);
			waitForJSandJQueryToLoad(driver);
		}
		verticalScroll(driver);
		click(RecOrdObj.NextBtn);
		waitForJSandJQueryToLoad(driver);
		String RcvdBy = RecOrdObj.getRcvduser.getText();
		String ChldTmp = "";
		String FrznTmp = "";
		if(RecOrdObj.chckChldTmp.getAttribute("class").equals("keyInfo")){
			ChldTmp = RecOrdObj.getChldTemp.getText();
		}
		if(RecOrdObj.chckFrznTmp.getAttribute("class").equals("keyInfo")){
			FrznTmp = RecOrdObj.getFrznTemp.getText();
		}
		String ArtOrd = RecOrdObj.getArtOrd.getText();
		String CartOrd = RecOrdObj.getCartOrd.getText();
		String ArtRecvd = RecOrdObj.getArtRcvd.getText();
		String CartRecvd = RecOrdObj.getCartRcvd.getText();
		String ULDRecvd = RecOrdObj.getULDRcvd.getText();
		String ULDRetrn = RecOrdObj.getULDRtrnd.getText();
		if(ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(ChldTmp.equals(ChilledTemp)){
			if(RcvdBy.equals(username) && ChldTmp.equals(ChilledTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+" "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Chilled Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ChldTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+ChilledTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else if(FrznTmp.equals(FrozenTemp)){
			if(RcvdBy.equals(username) && FrznTmp.equals(FrozenTemp) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Frozen Temp, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+FrznTmp+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+FrozenTemp+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}else{
			if(RcvdBy.equals(username) && ArtOrd.equals(DBList.get(0).get(7).toString()) && CartOrd.equals(DBList.get(0).get(8).toString()) && ArtRecvd.equals(decimalFormat1(ArtCount.toString())) && CartRecvd.equals(decimalFormat1(TotQty.toString())) && ULDRecvd.equals("0") && ULDRetrn.equals("0")){
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Pass");
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,"Received By, Articles Ordered, Cartons Ordered, Articles Provided, Cartons Received;Local Value is ["+RcvdBy+", "+ArtOrd+", "+CartOrd+", "+ArtRecvd+", "+CartRecvd+", "+ULDRecvd+", "+ULDRetrn+"];DB Value is ["+username+", "+DBList.get(0).get(7).toString()+", "+DBList.get(0).get(8).toString()+", "+decimalFormat1(ArtCount.toString())+", "+decimalFormat1(TotQty.toString())+", 0, 0];Fail");
			}
		}

		if(RecOrdObj.getPacksize.getText().toString().equals("0") && RecOrdObj.getZeroQty.getText().toString().equals(decimalFormat1(resultsdummy.get(0).get(0).toString())) && RecOrdObj.getOtherQty.getText().toString().equals(decimalFormat1(OtherQty.toString()))){
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+decimalFormat1(resultsdummy.get(0).get(0).toString())+", "+decimalFormat1(OtherQty.toString())+"];Pass");
		}
		else{
			htmlToExtent(cName,mName,extLogger,driver,"Checking the Pack size, Zero Qty, Other Qty Discrepancies;Local Value is ["+RecOrdObj.getPacksize.getText().toString()+", "+RecOrdObj.getZeroQty.getText().toString()+", "+RecOrdObj.getOtherQty.getText().toString()+"];DB Value is [0, "+decimalFormat1(resultsdummy.get(0).get(0).toString())+", "+decimalFormat1(OtherQty.toString())+"];Fail");
		}

        
		click(RecOrdObj.SubmitReceiving);
		if(Double.parseDouble(CartRecvd) > 0.0){
		click(RecOrdObj.ClckContinue);}

		waitForJSandJQueryToLoad(driver);
		WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
		String msg1 = getTitlemsg.getText();
		if(msg1.equals("Errors")){

			if(RecOrdObj.CheckTitle2.getText().equals("Errors")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.CheckErrmsg.getText()+";;;Fail");
				click(RecOrdObj.CloseErrMsg);
				scrollUp1(driver);
			}

		}else{
			if(RecOrdObj.ChckStatus.getText().equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.Chckmsg.getText()+";;;Pass");
				click(RecOrdObj.ChckStatus);
				scrollUp1(driver);
			}
			if(RecOrdObj.ChckStat.getText().equals("Received")){
				htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
			}
			ValueList1 = gettingValuesafterReceiving(RecOrdObj);

			if(ValueList1.get(0).get(0).toString().equals("NA") && ValueList1.get(0).get(1).toString().equals("0") && ValueList1.get(0).get(2).toString().equals(DBList.get(0).get(7).toString()) && ValueList1.get(0).get(3).toString().equals(decimalFormat1(TotQty.toString())) && ValueList1.get(0).get(4).toString().equals(DBList.get(0).get(5).toString()) && ValueList1.get(0).get(5).toString().equals(DBList.get(0).get(8).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+decimalFormat1(TotQty.toString())+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered details are not displayed properly;Local Values are ["+ValueList1.get(0).get(0).toString()+", "+ValueList1.get(0).get(1).toString()+", "+ValueList1.get(0).get(2).toString()+", "+ValueList1.get(0).get(3).toString()+", "+ValueList1.get(0).get(4).toString()+", "+ValueList1.get(0).get(5).toString()+"];DB Values are [NA, 0, "+DBList.get(0).get(7).toString()+", "+decimalFormat1(TotQty.toString())+", "+DBList.get(0).get(5).toString()+", "+DBList.get(0).get(8).toString()+"];Fail");
			}
			String ReceivWght = "";
			String DspWghht = "";
			if(ValueList1.get(0).get(6).toString().equals("NA")){
				ReceivWght = "NA";
			}else{
				ReceivWght = decimalFormat1(ValueList1.get(0).get(6).toString());
			}
			if(ValueList1.get(0).get(7).toString().equals("NA")){
				DspWghht = "NA";
			}else{
				DspWghht = decimalFormat1(ValueList1.get(0).get(7).toString());
			}
			if(ReceivWght.toString().equals(decimalFormat1(TotRcvdWgt.toString())) && DspWghht.toString().equals(DBList.get(0).get(6).toString()) && ValueList1.get(0).get(8).toString().equals(usernm1) && ValueList1.get(0).get(9).toString().equals("RECEIVE BY EXCEPTION")){
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are displayed properly;Local Values are ["+ReceivWght.toString()+", "+DspWghht.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE BY EXCEPTION];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Total Weight Received, Total Dispatched Weight, Received user, Received Method details are not displayed properly;Local Values are ["+ReceivWght.toString()+", "+DspWghht.toString()+", "+ValueList1.get(0).get(8).toString()+", "+ValueList1.get(0).get(9).toString()+"];DB Values are ["+decimalFormat1(TotRcvdWgt.toString())+", "+DBList.get(0).get(6).toString()+", "+usernm1+", RECEIVE BY EXCEPTION];Fail");
			}
			if(ValueList1.get(0).get(10).toString().equals(ChilledTemp1) && ValueList1.get(0).get(11).toString().equals(FrozenTemp1) && ValueList1.get(0).get(12).toString().equals("NA") && ValueList1.get(0).get(13).toString().equals("NA")){
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Pass");
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"Chilled Temp, Frozen Temp, Docket ID, Seal Numbers are not displayed properly;Local Values are ["+ValueList1.get(0).get(10).toString()+", "+ValueList1.get(0).get(11).toString()+", "+ValueList1.get(0).get(12).toString()+", "+ValueList1.get(0).get(13).toString()+"]; DB Values are ["+ChilledTemp1+", "+FrozenTemp1+", NA, NA];Fail");
			}

			if (GetListart1.toString().equals(DBList.get(0).get(7).toString())){
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Pass");
				//Report_AddStep("testcase","List of Articles displayed is " , ""+GetListart1, ""+DBList.get(0).get(6).toString(), "Pass");	
			}else{
				htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1+";"+DBList.get(0).get(7).toString()+";Fail");	
			}
			scrolldown(driver);
			scrolldown(driver);
			click(RecOrdObj.ClkRcvGrpBy);
			htmlToExtent(cName,mName,extLogger,driver, "**** Checking the article details after receiving the order ****;;;Pass");
			ComparingArticlesafterRcvngASNLineByLine(RecOrdObj,Applst_Rcvd,Applst_Rcvd_Disp2,driver);
		}
		return Applst_Art;
	}


	public List<List<Object>> OrderOnReceiptFlow(List<List<Object>> DBList1,String invoice,String ChldTemp,String FrznTemp,
			List<String> articlelist,ReceiveOrderObjects RecOrdObj, List<List<Object>> DBListDisp, List<List<Object>> DBListSOH,
			String usernm1, String SupplierName1, Integer count, String Method,WebDriver driver) throws IOException, AWTException{

		click(RecOrdObj.ClckOrdrs);
		waitForJSandJQueryToLoad(driver);
		click(RecOrdObj.ClckOrdrOnRcpt);
		waitForJSandJQueryToLoad(driver);
		Integer artsize = articlelist.size();
		htmlToExtent(cName,mName,extLogger,driver,"----Navigating to Order on Receipt screen----;;;Pass");
		enterText(RecOrdObj.EntrArt1, articlelist.get(0),driver);
		RecOrdObj.EntrArt1.sendKeys(Keys.RETURN); 
		waitForJSandJQueryToLoad(driver);
		if((DBList1.get(0).get(9).toString().equals("Y"))){
			click(RecOrdObj.ClckPBD1);
			waitForJSandJQueryToLoad(driver);
		}
		if((DBList1.get(0).get(10).toString().equals("KG")) && (DBList1.get(0).get(6).toString().equals("N"))){
			
			click(RecOrdObj.ClckCAR);
			waitForJSandJQueryToLoad(driver);
		}
		htmlToExtent(cName,mName,extLogger,driver,"*** Article "+articlelist.get(0)+" is added successfully in Draft ***;;;Pass");
		waitForJSandJQueryToLoad(driver);
		articlesaddition(articlelist,RecOrdObj,DBList1,driver);
		Integer TotQty = 0;
		Double TotRcvdWgt = 0.0;
		List<List<Object>> Applst_Rcvd = new ArrayList<List<Object>>();
		List<List<Object>> Applst_Art = new ArrayList<List<Object>>();
		List<List<Object>> Applst = new ArrayList<List<Object>>();
		List<List<Object>> DBlst = new ArrayList<List<Object>>();
		List<List<Object>> results1 = new ArrayList<List<Object>>();
		List<List<Object>> ValueList1 = new ArrayList<List<Object>>();
		int count1 = 0;
		for(int k=1;k<=RecOrdObj.OrdrOnRcpt.size();k=k+2){
			if(k==4){
				scrolldown(driver);
			}
			WebElement table=null;
			List app = new ArrayList();
			List app1 = new ArrayList();
			List app_rcvd = new ArrayList();
			table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,2,driver);
			String Art1 = table.getText();
			String soh = "";
			if(Method.equals("HighTemp")){
				for(int i=0;i<DBList1.size();i++){
					if(Art1.equals(DBList1.get(i).get(0).toString())){						
						String soh1 = DBList1.get(i).get(2).toString();
						Double SOH = Double.parseDouble(soh1);
						soh = decimalFormat1(SOH.toString());
						break;
					}
				}
			}else{
				for(int i=0;i<DBListSOH.size();i++){
					if(Art1.equals(DBListSOH.get(i).get(0).toString())){
						String soh1 = DBListSOH.get(i).get(3).toString();
						Double SOH = Double.parseDouble(soh1);
						soh = decimalFormat1(SOH.toString());
						break;
					}
				}
			}

			for(int m=0;m<DBList1.size();m++){
				if(Art1.equals(DBList1.get(m).get(0).toString())){
					for(int n=1;n<=11;n++){
						String TotRcvdunits = "";
						Float TotRcvd_NUM = (float) 0;

						if(n==1){
						}
						else if(n==6){
							if(DBList1.get(m).get(6).toString().equals("Y")){
								app_rcvd.add(Art1);
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,n-1,driver);
								Integer qty = random_no(20) +1;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);
								WebElement Enterweight = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue13, k,n,driver);
								Enterweight.clear();
								Double RndmWgt = random_no(20) +0.544;
								Enterweight.sendKeys(RndmWgt.toString());
								click(clck);
								String RcvdQty1 = qty.toString()+" "+DBList1.get(m).get(1).toString();
								Double OrdQty =  Double.parseDouble(qty.toString()) * Double.parseDouble(DBList1.get(m).get(5).toString());
								Double PIQty = Double.parseDouble(qty.toString()) * Double.parseDouble(DBList1.get(m).get(11).toString());
								String OM = ""+decimalFormat1(DBList1.get(m).get(11).toString())+" EA";
								String OM_RECV = DBList1.get(m).get(4).toString() + " "+decimalFormat1(DBList1.get(m).get(11).toString())+" (EA)";
								//Integer PIQty = Integer.parseInt(DBList1.get(m).get(11).toString()) * qty;
								String TotOrdQty = decimalFormat1(OrdQty.toString())+ " " +DBList1.get(m).get(10).toString()+ " ("+decimalFormat1(PIQty.toString())+" EA)";
								String TotRcvdQty = decimalFormat1(RndmWgt.toString())+ " " +DBList1.get(m).get(10).toString()+ " ("+decimalFormat1(PIQty.toString())+" EA)";
								//app1.add(RcvdQty);
								TotRcvdWgt += RndmWgt;
								String RcvUnits1 = ""+decimalFormat1(PIQty.toString())+" EA";

								app_rcvd.add(decimalFormat1(RndmWgt.toString()));
								app_rcvd.add(decimalFormat1(PIQty.toString()));
								String Updt_rcvd_DB1 = ""+Art1+":"+OM_RECV+":"+RcvdQty1+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DBList1.get(m).get(6).toString()+":"+DBList1.get(m).get(7).toString()+":"+DBList1.get(m).get(8).toString();
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));

								String DBList = ""+Art1+":"+DBList1.get(m).get(1).toString()+":"+decimalFormat1(DBList1.get(m).get(3).toString())+":"+OM+":"+RcvUnits1;
								DBlst.addAll(StringToListCreation(DBList));

							}else if(DBList1.get(m).get(8).toString().equals("Y")  && DBList1.get(m).get(7).toString().equals("0")){
								table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue12, k,n,driver);
								WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,n-1,driver);
								Integer qty = random_no(20) +1;
								TotQty += qty;
								table.clear();
								table.sendKeys(""+qty);

								waitForJSandJQueryToLoad(driver);
								String RcvdQty1 = qty.toString()+" "+DBList1.get(m).get(1).toString();
								Double RcvdUnits = Double.parseDouble(qty.toString()) * Double.parseDouble(DBList1.get(m).get(5).toString());
								String TotRcvdQty = decimalFormat1(RcvdUnits.toString())+ " " +DBList1.get(m).get(10).toString();

								String DBList = ""+Art1+":"+DBList1.get(m).get(1).toString()+":"+decimalFormat1(DBList1.get(m).get(2).toString())+":"+DBList1.get(m).get(4).toString()+":"+TotRcvdQty;
								DBlst.addAll(StringToListCreation(DBList));
								String Updt_rcvd_DB1 = ""+Art1+":"+DBList1.get(m).get(4).toString()+":"+RcvdQty1+":"+TotRcvdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DBList1.get(m).get(6).toString()+":"+DBList1.get(m).get(7).toString()+":"+DBList1.get(m).get(8).toString();
								Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
								for(int ak=0;ak<DBListDisp.size();ak++){
									if(Art1.equals(DBListDisp.get(ak).get(0).toString())){
										Double Rcvunits = Double.parseDouble(qty.toString()) * Double.parseDouble(DBListDisp.get(ak).get(2).toString());
										String Str1_disp = ""+DBListDisp.get(ak).get(1).toString()+":"+decimalFormat1(Rcvunits.toString());
										Applst_Art.addAll(StringToListCreation(Str1_disp));
									}

								}
							}else{
								if(Method.equals("ChangeOM")){
									app_rcvd.add(Art1);
									table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue12, k,n,driver);
									WebElement table1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue12, k,n+3,driver);
									WebElement clck1 = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,n-1,driver);
									String NewOM = "";
									Integer qty = random_no(20) +1;
									TotQty += qty;
									table.clear();
									table.sendKeys(""+qty);
									String RcvdQty1 = qty.toString()+" "+DBList1.get(m).get(1).toString();
									Double RcvdUnits = 0.0;
									String TotRcvdQty = "";
									Double OrdUnits = Double.parseDouble(qty.toString()) * Double.parseDouble(DBList1.get(m).get(5).toString());
									String TotOrdQty = decimalFormat1(OrdUnits.toString())+ " " +DBList1.get(m).get(10).toString();
									Double OM = 0.0;
									if(table1.getAttribute("readonly")==null){
										if(count1==1){
											OM = random_no(20) +0.343;
										}
										else{
											OM = random_no(20) + 1.0;
										}
										table1.sendKeys(""+decimalFormat1(OM.toString()));
										click(clck1);
										count1++;
										NewOM = decimalFormat1(OM.toString())+ " " +DBList1.get(m).get(10).toString();
										if(DBList1.get(m).get(7).toString().equals("1")){
											RcvdUnits = Double.parseDouble(qty.toString()) * 24;
											TotRcvdQty = decimalFormat1(qty.toString())+ " " +DBList1.get(m).get(10).toString();
										}else{
											RcvdUnits = Double.parseDouble(qty.toString()) * OM;
											TotRcvdQty = decimalFormat1(RcvdUnits.toString())+ " " +DBList1.get(m).get(10).toString();
										}
									}else{
										click(clck1);
										NewOM = DBList1.get(m).get(4).toString();
										if(DBList1.get(m).get(7).toString().equals("1")){
											RcvdUnits = Double.parseDouble(qty.toString()) * 24;
											TotRcvdQty = decimalFormat1(qty.toString())+ " " +DBList1.get(m).get(10).toString();
										}else{
											RcvdUnits = Double.parseDouble(qty.toString()) * Double.parseDouble(DBList1.get(m).get(5).toString());
											TotRcvdQty = decimalFormat1(RcvdUnits.toString())+ " " +DBList1.get(m).get(10).toString();
										}
									}
									if(DBList1.get(m).get(10).toString().equals("KG")){
										TotRcvdWgt += RcvdUnits;
									}
									String Updt_rcvd_DB1 = ""+Art1+":"+NewOM+":"+RcvdQty1+":"+TotOrdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DBList1.get(m).get(6).toString()+":"+DBList1.get(m).get(7).toString()+":"+DBList1.get(m).get(8).toString();
									Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
									app_rcvd.add(decimalFormat1(RcvdUnits.toString()));
									//Double SOH = round(Double.parseDouble(soh),0);
									String DBList = ""+Art1+":"+DBList1.get(m).get(1).toString()+":"+decimalFormat1(soh.toString())+":"+DBList1.get(m).get(4).toString()+":"+TotRcvdQty;
									DBlst.addAll(StringToListCreation(DBList));

								}else{
									app_rcvd.add(Art1);
									table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue12, k,n,driver);
									WebElement clck = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,n-1,driver);
									Integer qty = random_no(20) +1;
									TotQty += qty;
									table.clear();
									table.sendKeys(""+qty);
									click(clck);
									String RcvdQty1 = qty.toString()+" "+DBList1.get(m).get(1).toString();
									Double RcvdUnits = 0.0;
									String TotRcvdQty = "";
									if(DBList1.get(m).get(7).toString().equals("1")){
										RcvdUnits = Double.parseDouble(qty.toString()) * 24;
										TotRcvdQty = decimalFormat1(qty.toString())+ " " +DBList1.get(m).get(10).toString();
									}else{
										RcvdUnits = Double.parseDouble(qty.toString()) * Double.parseDouble(DBList1.get(m).get(5).toString());
										TotRcvdQty = decimalFormat1(RcvdUnits.toString())+ " " +DBList1.get(m).get(10).toString();
									}
									if(DBList1.get(m).get(10).toString().equals("KG")){
										TotRcvdWgt += RcvdUnits;
									}
									String Updt_rcvd_DB1 = ""+Art1+":"+DBList1.get(m).get(4).toString()+":"+RcvdQty1+":"+TotRcvdQty+":NA:NA:"+RcvdQty1+":"+TotRcvdQty+":"+DBList1.get(m).get(6).toString()+":"+DBList1.get(m).get(7).toString()+":"+DBList1.get(m).get(8).toString();
									Applst_Rcvd.addAll(StringToListCreation(Updt_rcvd_DB1));
									app_rcvd.add(decimalFormat1(RcvdUnits.toString()));

									String DBList = ""+Art1+":"+DBList1.get(m).get(1).toString()+":"+decimalFormat1(soh.toString())+":"+DBList1.get(m).get(4).toString()+":"+TotRcvdQty;
									DBlst.addAll(StringToListCreation(DBList));
								}
							}

						}else if(n==10){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,n,driver);
							String getTotRcvUnits = table.getText();
							String  String1 [] = splitString(getTotRcvUnits," ");
							String getTotRcvUnits1 = decimalFormat1(String1[0]) + " " +String1[1];
							app.add(getTotRcvUnits1);
						}else if(n==5){
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,n,driver);
							String SOH_Appl = table.getText();
							app.add(decimalFormat1(SOH_Appl));
						}

						else{
							table = prepareWebElementWithDynamicXpathWithIntInt(RecOrdObj.OOrtablevalue11, k,n,driver);
							app.add(table.getText());
						}
					}
					Applst.add(app);
					if(DBList1.get(m).get(8).toString().equals("Y")  && DBList1.get(m).get(7).toString().equals("0")){
					}else{
						Applst_Art.add(app_rcvd);
					}
				}
			}
		}
		int count2 = 0;
		Date ppStartdat1 = new Date();
		DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
		String formattedDatepp = dateFormat.format(ppStartdat1);
		removeIndex(Applst, "8");
		removeIndex(Applst, "6");
		removeIndex(Applst, "4");
		removeIndex(Applst, "1");
		htmlToExtent(cName,mName,extLogger,driver, "***Checking the Article, UOM, SOH, OM and Received Unit details after adding the articles****;;;Pass");
		ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
		DBlst.clear();
		Applst.clear();
		String ChldTmp = "";
		String FrznTmp = "";
		click(RecOrdObj.ClckSubmit);
		waitForJSandJQueryToLoad(driver);
		enterText(RecOrdObj.EntrRcptInvce, invoice,driver);
		enterText(RecOrdObj.EntrRcptConsgn, "yri8768",driver);
		enterText(RecOrdObj.EntrDGMS, "Dept",driver);
		enterText(RecOrdObj.EntrCarrier, "ABC Transport",driver);
		if(Method.equals("HighTemp")){
			Double ChldTemp1 = Double.parseDouble(ChldTemp) + 10;
			Double FrznTemp1 = Double.parseDouble(FrznTemp) + 60;

			if(RecOrdObj.ChckChlTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrChTmp,decimalFormat1(ChldTemp1.toString()),driver);
			}
			if(RecOrdObj.ChckFroTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrFroTmp,decimalFormat1(FrznTemp1.toString()),driver);

			}
			htmlToExtent(cName,mName,extLogger,driver, "***Checking the Temperature pop up by giving Chilled Temprature as "+decimalFormat1(ChldTemp1.toString())+" (Out of Range) and Frozen Temperature as "+decimalFormat1(FrznTemp1.toString())+" (Out of Range)***;;;Pass");

			click(RecOrdObj.ProceedFnsh);
			waitForJSandJQueryToLoad(driver);
			if(RecOrdObj.chckArt.getText().equals("Temperature out of range!")){
				String Tempchck = RecOrdObj.ChckMsg.getText().replace("\n", " ").replace("\r", " ");
				if(Tempchck.contains("Temperature out of range. Some articles have failed temperature check. Please Re-enter the temperature")){
					htmlToExtent(cName,mName,extLogger,driver, "Temperature Pop Up has been appeared;;;Pass");
					click(RecOrdObj.ClckReEntr);
					waitForJSandJQueryToLoad(driver);
				}

			}
			
			if(RecOrdObj.ChckChlTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrChTmp,ChldTemp,driver);
				count2++;
			}
			if(RecOrdObj.ChckFroTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrFroTmp,decimalFormat1(FrznTemp1.toString()),driver);
				count2++;
			}
			htmlToExtent(cName,mName,extLogger,driver, "****Checking the Temperature pop up by giving Chilled Temprature as "+ChldTemp+" (Within Range) and Frozen Temperature as "+decimalFormat1(FrznTemp1.toString())+" (Out of Range)***;;;Pass");

			click(RecOrdObj.ProceedFnsh);
			waitForJSandJQueryToLoad(driver);
			if(RecOrdObj.chckArt.getText().equals("Temperature out of range!")){
				String Tempchck = RecOrdObj.ChckMsg.getText().replace("\n", " ").replace("\r", " ");
				if(Tempchck.contains("Temperature out of range. Some articles have failed temperature check. Please Re-enter the temperature")){
					htmlToExtent(cName,mName,extLogger,driver, "Temperature Pop Up has been appeared;;;Pass");
					click(RecOrdObj.ClckReEntr);
					waitForJSandJQueryToLoad(driver);
				}

			}

			if(RecOrdObj.ChckChlTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrChTmp,decimalFormat1(ChldTemp1.toString()),driver);
			}
			if(RecOrdObj.ChckFroTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrFroTmp,FrznTemp,driver);

			}
			htmlToExtent(cName,mName,extLogger,driver, "***Checking the Temperature pop up by giving Chilled Temprature as "+decimalFormat1(ChldTemp1.toString())+" (Out of Range) and Frozen Temperature as "+FrznTemp+" (Within Range)***;;;Pass");

			click(RecOrdObj.ProceedFnsh);
			waitForJSandJQueryToLoad(driver);
			if(RecOrdObj.chckArt.getText().equals("Temperature out of range!")){
				String Tempchck = RecOrdObj.ChckMsg.getText().replace("\n", " ").replace("\r", " ");
				if(Tempchck.contains("Temperature out of range. Some articles have failed temperature check. Please Re-enter the temperature")){
					htmlToExtent(cName,mName,extLogger,driver, "Temperature Pop Up has been appeared;;;Pass");
					click(RecOrdObj.ClckReEntr);
					waitForJSandJQueryToLoad(driver);
				}

			}

			click(RecOrdObj.ProceedCncl);
			waitForJSandJQueryToLoad(driver);
			String Recv_appl = "Errors";
			DBlst.clear();
			DBlst.addAll(StringToListCreation(Recv_appl));
			return DBlst;
		}
		else{
			String ChilledTemp1 = "";
			String FrozenTemp1 = "";
			if(RecOrdObj.ChckChlTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrChTmp,ChldTemp,driver);
				ChilledTemp1 = ChldTemp;
				count2++;
			}else{
				ChilledTemp1 = "NA";
			}
			if(RecOrdObj.ChckFroTmp.getAttribute("class").equals("parameter")){
				enterText(RecOrdObj.EntrFroTmp,FrznTemp,driver);
				FrozenTemp1 = FrznTemp;
				count2++;
			}else{
				FrozenTemp1 = "NA";
			}
			htmlToExtent(cName,mName,extLogger,driver, "***Entered Invoice, Freight, DGMS Department, Carrier details***;;;Pass");
			//String Str1 = "50460146:"+formattedDatepp.toString()+":RECEIVED:"+SupplierName1+":VENDOR:"+decimalFormat1(TotQty.toString())+":0";
			click(RecOrdObj.ProceedFnsh);
			waitForJSandJQueryToLoad(driver);

			WebElement getTitlemsg = prepareWebElementWithDynamicXpathWithInt(RecOrdObj.checkTitle1, RecOrdObj.CheckTitle.size(),driver);
			String msg1 = getTitlemsg.getText();
			if(msg1.equals("STATUS")){
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.orderno.getText()+";;;Pass");
				String Msg = RecOrdObj.orderno.getText();
				String[] split = Msg.split("Ref No:");
				String OrderNo = split[1];
				int s = OrderNo.length();
				OrderNo = OrderNo.substring(0, s - 1);
				htmlToExtent(cName,mName,extLogger,driver,"Order Number generated - " + OrderNo+ ";;;Pass");
				click(RecOrdObj.CloseMsg);
				scrollUp1(driver);
				clickOnOrderEnquiry(RecOrdObj,driver);
				waitForJSandJQueryToLoad(driver);
				enterText(RecOrdObj.OrderLookup, OrderNo,driver);	
				waitForJSandJQueryToLoad(driver);
				click(RecOrdObj.ClickGo);
				waitForJSandJQueryToLoad(driver);
				//System.out.println("Order details are loaded");
				String ChckSrc = RecOrdObj.ChckSource.getText();
				htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order details displayed after searching the order;;;Pass");


				String Str1 = ""+OrderNo+":"+formattedDatepp.toString()+":RECEIVED:"+DBList1.get(0).get(12).toString()+":VENDOR:"+decimalFormat1(TotQty.toString())+":0";
				results1.addAll(StringToListCreation(Str1));
				checkingOrderDetails(RecOrdObj,results1,driver);

				click(RecOrdObj.ClickOnOrder);
				waitForJSandJQueryToLoad(driver);
				htmlToExtent(cName,mName,extLogger,driver,"*** Checking the order header details displayed after opening the order;;;Pass");
				String GetListart = RecOrdObj.GetListofArt.getText();
				Long GetListart1 =  Long.parseLong(GetListart.replaceAll("[^0-9\\.]+", ""));
				String OrdNo1 = RecOrdObj.ChckOrdNo.getText();
				Long OrdNum =  Long.parseLong(OrdNo1.replaceAll("[^0-9\\.]+", ""));
				String Deldate1 = RecOrdObj.Chckdelhdr.getText();
				String Stat1 = RecOrdObj.Chcksta.getText();
				String Suppliername1 = RecOrdObj.Chcksuphdr.getText();
				String Createdby1 = RecOrdObj.ChckCreatedByhdr.getText();
				String onshowdate = RecOrdObj.ChckOnshwdate.getText();
				String onshowdate1 = RecOrdObj.ChckOnshwdate1.getText();
				if(OrdNum.toString().equals(OrderNo)  && Stat1.equals("Received") && formattedDatepp.equals(Deldate1)&& DBList1.get(0).get(12).toString().equals(Suppliername1) && usernm1.equals(onshowdate) && formattedDatepp.equals(onshowdate1)){
					htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+OrderNo+", Received, "+formattedDatepp+", "+DBList1.get(0).get(12).toString()+", " +usernm1+", "+formattedDatepp+"];Pass");
				}else{
					htmlToExtent(cName,mName,extLogger,driver,"Order Number, Delivery Date, Status, Supplier Name, Created By & On Show Date are not displayed correctly in header details;Local Value is ["+OrdNum+", "+Stat1+", "+Deldate1+", "+Suppliername1+", "+onshowdate+", "+onshowdate1+"];DB Value is ["+OrderNo+", Received, "+formattedDatepp+", "+DBList1.get(0).get(12).toString()+", " +usernm1+", "+formattedDatepp+"];Fail");

				}

				if(count2>0){
					if(RecOrdObj.ChckTempflag.getAttribute("class").equals("positiveStatus")){
						htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is Displayed in the order;;;Pass");
					}else{
						htmlToExtent(cName,mName,extLogger,driver,"Temperature Check is not Displayed in the order;;;Fail");
					}
				}


				if(RecOrdObj.ChckStat.getText().equals("Received")){
					htmlToExtent(cName,mName,extLogger,driver,"Status of the Order is "+RecOrdObj.ChckStat.getText()+";;;Pass");
				}

				String ChckUpdatedFlag = RecOrdObj.UpdateRecvdFlag.getText();
				String ChckTrnsfr = RecOrdObj.ChkTransfr.getText();
				String ChckVndrAuthrizatn = RecOrdObj.ChkVendorClaim.getText();


				ValueList1 = gettingValuesafterReceiving(RecOrdObj);

				if(ChckUpdatedFlag.equals("Update Received Qty.") && ChckTrnsfr.equals("Transfer") && ChckVndrAuthrizatn.equals("Vendor Authorisation #")){
					htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Pass");
				}else{
					htmlToExtent(cName,mName,extLogger,driver,"Updated Recvd Qty Flag, Transfer Flag, Vendor Auth Flag, Received Time details are not displayed properly in Browser;Local Values are ["+ChckUpdatedFlag+", "+ChckTrnsfr+", "+ChckVndrAuthrizatn+"];DB Values are [Update Received Qty, Transfer, Vendor Authorisation #];Fail");
				}

				String Recv_appl = "NA:0:"+artsize.toString()+":"+decimalFormat1(TotQty.toString())+":NA:"+decimalFormat1(TotQty.toString())+":"+decimalFormat1(TotRcvdWgt.toString())+":NA:"+usernm1+":"+ChilledTemp1+":"+FrozenTemp1+":"+invoice+":NA";
				DBlst.addAll(StringToListCreation(Recv_appl));

				String Recv_Brwsrappl = ""+ValueList1.get(0).get(0).toString()+":"+ValueList1.get(0).get(1).toString()+":"+ValueList1.get(0).get(2).toString()+":"+ValueList1.get(0).get(3).toString()+":"+ValueList1.get(0).get(4).toString()+":"+ValueList1.get(0).get(5).toString()+":"+decimalFormat1(ValueList1.get(0).get(6).toString())+":"+ValueList1.get(0).get(7).toString()+":"+ValueList1.get(0).get(8).toString()+":"+ValueList1.get(0).get(10).toString()+":"+ValueList1.get(0).get(11).toString()+":"+ValueList1.get(0).get(12).toString()+":"+ValueList1.get(0).get(13).toString();
				Applst.addAll(StringToListCreation(Recv_Brwsrappl));

				htmlToExtent(cName,mName,extLogger,driver,"**** Checking Total Pallets Received, Total Pallets, Total Articles, Total Cartons Received, Total Dispatched Qty, Total Cartons Ordered, Total Weight Received, Total Dispatched Weight, Received User, Chilled Temp, Frozen Temp, Docket ID, Seal Number details;;;Pass");
				ElementContains1(cName, mName,extLogger,driver, Applst, DBlst);
				DBlst.clear();
				Applst.clear();
				ValueList1.clear();

				scrolldown(driver);

				if (GetListart1.toString().equals(artsize.toString())){
					htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+artsize.toString()+";Pass");

				}else{
					htmlToExtent(cName,mName,extLogger,driver,"List of Articles displayed is;"+GetListart1.toString()+";"+artsize.toString()+";Fail");	
				}
				scrolldown(driver);
				scrolldown(driver);
				click(RecOrdObj.ClkRcvGrpBy);
				comparingArticlesafterCreatingOOR(RecOrdObj,Applst_Rcvd,DBListDisp,driver);
			}
			else{
				htmlToExtent(cName,mName,extLogger,driver,""+RecOrdObj.ChckErrormsg.getText()+";;;Fail");
				click(RecOrdObj.ClckClose);
				waitForJSandJQueryToLoad(driver);
				click(RecOrdObj.ProceedCncl);
				waitForJSandJQueryToLoad(driver);
			}
			if(msg1.equals("STATUS")){
				return Applst_Art;
			}
			else{
				String Recv_appl = "Errors";
				DBlst.addAll(StringToListCreation(Recv_appl));
				return DBlst;
			}
		}
	}
}